{"pages":[{"title":"About","text":"본 블로그는 Hexo Butterfly 테마를 일부 변형한 것으로, 코드는 여기에서 확인할 수 있습니다. This blog is based on Hexo Butterfly theme with some modifications. You can check the entire source code here. 프론트엔드 쪽 지식이 거의 전무합니다. 고로, 제가 수정한 코드가 틀린 것 같다는 생각이 든다면 그게 정답ㅎㅎ Almost no frontend knowledge in my brain. If my code seems wrong, you’re 100% right:) 중국어 전혀 못합니다. Hexo가 Jekyll보다 외관이 더 취향이라 선택했을 뿐 I can’t speak Chinese at all. I just chose Hexo for its appearance over Jekyll. That’s all. 영어 실력 향상을 위해 영어로도 글을 쓸 생각이지만, 평범한 수준의 영어 실력으로 쓰기 때문에 오역이나 문법 실수가 있을 수 있습니다. I’m planning to write in English to improve my English skills. However, there may be some errors due to my common level of English. #page h1.page-title::before { font-family: \"Font Awesome 6 Free\"; content: \"\\f004\"; padding-right: 0.625em; padding-bottom: 0.25em; display: inline-block; -webkit-font-smoothing: antialiased; text-rendering: optimizeLegibility; -moz-osx-font-smoothing: grayscale; font-feature-settings: 'liga'; }","link":"/about/index.html"},{"title":"Carousel Demo","text":"Carousel Default Strike Freedom Gundamcarouselinit('SF-none'); Carousel + MediumZoom Strike Freedom Gundamcarouselinit('SF-default'); Carousel + MediumZoom (Edited) 기존 medium zoom에서는 보이는 상태 그대로 이미지를 확대해서 해당 이미지의 화질 저하 및 왜곡이 발생하는 것처럼 보였습니다. 일부 코드를 수정하여 이 부분을 개선하였습니다만, 그 부작용으로 이미지 확대 애니메이션의 느낌이 덜 부드럽게 바뀌었습니다. The original medium zoom plugin seemed to enlarge the image as it is, causing quality degradation and distortion of the zoomed image. I modified some code to improve this issue, and as a side effect, the zooming animation became less seamless than before. Strike Freedom Gundamcarouselinit('SF-edited'); [data-theme=\"light\"] .carousel { background-color: aliceblue; } [data-theme=\"dark\"] .carousel { background-color: #333; } @media screen and (max-width: 600px) { .carousel { min-height: 390px; } .carousel > .drag-container { scale: 0.8; top: calc(390px / 2 - 170px * 0.9); } } @media screen and (max-width: 500px) { .carousel { min-height: 250px; } .carousel > .drag-container { scale: 0.6; top: calc(250px / 2 - 170px * 0.8); } } .carousel img { user-select: none; }","link":"/gallery/carousel.html"},{"title":"","text":"/* 404 */ .error404 #error-wrap .error-content { height: min(360px, 100vh - 120px); } .error404 #error-wrap .error-content .error-img { background-color: #CBE3FF; } .error404 #error-wrap .error-content .error-info .error_title { margin: 0 0 2em; } .error404 #error-wrap .error-content .error-info .error_subtitle { margin: -3em 0 1.5em 0; } .error404 #error-wrap .error-content .error-img img { width: auto; margin: 0 auto; display: block; } @media screen and (max-width: 768px) { .error404 #error-wrap { top: 20px; margin: 20px auto; transform: translate(0, -20px); } .error404 #error-wrap .error-content { height: 110vw; } .error404 #error-wrap .error-content .error-img { height: 60% } .error404 #error-wrap .error-content .error-info { height: 38%; } }","link":"/css/page/404@0.0.1.css"},{"title":"","text":".container figure.highlight table td.gutter { position: fixed; width: 3em; border-right-style: dashed; border-right-width: 1px; border-right-color: var(--hltools-bg); } .container figure.highlight table td.code { padding-left: 2.8em; } .container figure.highlight table { scrollbar-width: none; } .container figure.highlight table::-webkit-scrollbar-thumb { display: none; }","link":"/css/page/highlight@0.0.1.css"},{"title":"","text":"/* Theme: one dark theme */ [data-theme=light] { --base00 : #fdfdff; /* --hl-bg, --hlnumber-bg */ --base005 : #f4f6f8; /* */ --base01 : #e6ebf1; /* --hltools-bg, --hlscrollbar-bg */ --base02 : #b0b9c4; /* --hltools-color */ --base03 : #9aa3bd; /* box-shadow */ --base04 : #898ea4; --base05 : #6b7394; --base06 : #5e6687; --base07 : #4b5068; /* --hl-color */ --base08 : #c94922; --base09 : #c76b29; --base0A : #c08b30; --base0B : #529030; --base0C : #22a2c9; --base0D : #3d8fd1; --base0E : #6966cc; --base0F : #9c637a; --highlight-deletion: #BF42BF; --highlight-addition: #105EDE; --hlnumber-color: #898ea480; --hlexpand-bg: linear-gradient(#e6ebf100, #e6ebf180); } [data-theme=dark] { --base00: #101012; /* --hl-bg, --hlnumber-bg */ --base005: #1e1e21; --base01: #26272a; /* --hltools-bg, --hlscrollbar-bg */ --base02: #595d63; /* --hltools-color */ --base03: #74787d; /* box-shadow */ --base04: #898ea4; /**/ --base05: #9ca1b4; /**/ --base06: #abb2bf; /**/ --base07: #c3c7ce; --base08: #e06c75; --base09: #f99157; --base0A: #e5c07b; --base0B: #98c379; --base0C: #56b6c2; --base0D: #61afef; --base0E : #c678dd; --base0F : #9c637a; --hlnumber-color: #979db480; --hlexpand-bg: linear-gradient(#23242800, #2324287F); } :root { --hl-bg: var(--base00); --hlnumber-bg: var(--base00); --hltools-bg: var(--base01); --hlscrollbar-bg: var(--base01); --hltools-color: var(--base02); --hl-color: var(--base07); } #article-container figure.highlight { box-shadow: 0px 0px 5px -2px var(--base03) !important; } #article-container figure.highlight .gutter pre { border-right: 1px solid var(--base005); } #article-container figure.highlight .code { /* padding-left: 3em; */ background-color: var(--base00); } .hljs { color: var(--base07); background: var(--base01); } code.hljs ::selection { color: var(--hl-color); } .hljs-comment , .hljs-operator, .hljs-punctuation, .hljs-subst { color: var(--base03); } .hljs-tag { color: var(--base05); } .hljs-operator { opacity: .7 } .hljs-bullet, .hljs-deletion, .hljs-name, .hljs-selector-tag, .hljs-template-variable, .hljs-variable { color: var(--base08); } .hljs-attr, .hljs-link, .hljs-literal, .hljs-number, .hljs-symbol, .hljs-variable.constant_ { color: var(--base09); } .hljs-class .hljs-title, .hljs-title, .hljs-title.class_ { color: var(--base0A); } .hljs-strong { font-weight: 700; color: var(--base0A); } .hljs-addition, .hljs-code, .hljs-string, .hljs-title.class_.inherited__ { color: var(--base0B); } .hljs-built_in, .hljs-doctag, .hljs-keyword.hljs-atrule, .hljs-quote, .hljs-regexp { color: var(--base0C); } .hljs-attribute, .hljs-function .hljs-title, .hljs-section, .hljs-title.function_, .ruby .hljs-property { color: var(--base0D); } .diff .hljs-meta, .hljs-keyword, .hljs-template-tag, .hljs-type, .hljs-emphasis { color: var(--base0E); } .hljs-meta, .hljs-meta .hljs-keyword, .hljs-meta .hljs-string { color: var(--base0F); } .hljs-comment, .hljs-quote, .hljs-emphasis { font-style: italic } .hljs-meta .hljs-keyword, .hljs-meta-keyword { font-weight: 700 } .hljs-section, .hljs-name, .hljs-strong { font-weight: bold; } figure.highlight pre .deletion { color: var(--highlight-deletion); } figure.highlight pre .addition { color: var(--highlight-addition); } figure.highlight pre .variable, figure.highlight pre .attribute, figure.highlight pre .regexp, figure.highlight pre .ruby .constant, figure.highlight pre .xml .tag .title, figure.highlight pre .xml .pi, figure.highlight pre .xml .doctype, figure.highlight pre .html .doctype, figure.highlight pre .css .id, figure.highlight pre .tag .name, figure.highlight pre .css .class, figure.highlight pre .css .pseudo { color: var(--base08); } figure.highlight pre .number, figure.highlight pre .preprocessor, figure.highlight pre .literal, figure.highlight pre .params, figure.highlight pre .constant, figure.highlight pre .command { color: var(--base09); } figure.highlight pre .built_in { color: var(--base0A); } figure.highlight pre .ruby .class .title, figure.highlight pre .css .rules .attribute, figure.highlight pre .string, figure.highlight pre .value, figure.highlight pre .inheritance, figure.highlight pre .header, figure.highlight pre .ruby .symbol, figure.highlight pre .xml .cdata, figure.highlight pre .special, figure.highlight pre .number, figure.highlight pre .formula { color: var(--base0B); } figure.highlight pre .keyword, figure.highlight pre .title, figure.highlight pre .css .hexcolor, figure.highlight pre .tag { color: var(--base0C); } figure.highlight pre .function, figure.highlight pre .python .decorator, figure.highlight pre .python .title, figure.highlight pre .ruby .function .title, figure.highlight pre .ruby .title .keyword, figure.highlight pre .perl .sub, figure.highlight pre .javascript .title, figure.highlight pre .coffeescript .title { color: var(--base0D); } figure.highlight pre .tag .attr, figure.highlight pre .javascript .function, figure.highlight pre .meta { color: var(--base0E); } figure.highlight pre .comment { color: var(--base03); } #article-container figure.highlight .line.marked { background-color: var(--base01); }","link":"/css/page/highlight_one_dark@0.0.1.css"},{"title":"","text":"/* H1-H6 아이콘 색상 및 크기 조정 및 위치 조정 */ h1, h2, h3, h4, h5, h6 { margin: 1.2em 0 0.3em 0; } #article-container > *:nth-child(2) { margin-top: 0; } #article-container h1 { font-size: 1.65em; font-weight: 500; } #article-container h1::before, #article-container h1 i::before { font-size: 0.9em; margin-top: -0.2em; color: #fc3775cc; } h1.page-title { margin-top: .67em; } h1.page-title::before, h1.page-title i::before { font-size: 1.1em; } #article-container h2 { font-size: 1.5em; font-weight: 500; } #article-container h2::before { font-size: 0.9em; margin-top: -0.16em; color: #fc741dcc; } #article-container h3 { font-size: 1.35em; font-weight: 500; } #article-container h3::before { font-size: 0.9em; margin-top: -0.1em; color: #ffc000cc; } #article-container h4 { font-size: 1.25em; font-weight: 500; } #article-container h4::before { font-size: 0.9em; margin-top: -0.05em; color: #afee00cc; } #article-container h5 { font-size: 1.1em; font-weight: 500; } #article-container h5::before { font-size: 0.9em; color: #56d271cc; } #article-container h6 { font-size: 1em; font-weight: 600; } #article-container h6::before { font-size: 0.9em; color: #58c3e7cc; } [data-theme=dark] #article-container h1::before, [data-theme=dark] #article-container h1 i::before, [data-theme=dark] #article-container h2::before, [data-theme=dark] #article-container h3::before, [data-theme=dark] #article-container h4::before, [data-theme=dark] #article-container h5::before, [data-theme=dark] #article-container h6::before { filter: brightness(0.7); } /* link underline */ #article-container a { text-decoration: underline; text-decoration-style: dashed; } #article-container a:hover { text-decoration-style: solid; } #article-container a:active { color: var(--sub-theme-color); } /* word break */ #article-container { word-break: keep-all; text-align: start; } /* language notice */ .language-notice.note.modern { background: #dbe6f7bf; color: #566786ff; } .language-notice.language-all::before { font-family: 'fontagon-icons' !important; content: \"\\f105\" !important; } .language-notice.language-kor::before { font-family: 'fontagon-icons' !important; content: \"\\f103\" !important; } /* post - pagination */ [data-theme=light] #pagination.pagination-post { background: linear-gradient(-130deg, #e3949c, #8c96e2); } [data-theme=dark] #pagination.pagination-post { background: linear-gradient(-130deg, #030b55, #450309); } #pagination { padding: 0 !important; } /* post - related posts */ [data-theme=light] .relatedPosts > .relatedPosts-list > a { background: #6699cccf; } [data-theme=dark] .relatedPosts > .relatedPosts-list > a { background: #2b2b2d82; } /* post - comment */ #post-comment.card-widget { margin-bottom: 20px; } @media screen and (max-width: 600px) { #post-meta > .meta-secondline { display: none; } } /* post meta - category list */ #post-meta span { white-space: nowrap; height: fit-content; width: fit-content; } #post-meta span.post-meta-separator { display: inline-block; } #post-meta span > i { display: inline; } #post-meta .meta-thirdline ul { list-style-type: none; padding: 0; margin: 0; } #post-meta .meta-thirdline > ul.category-list { display: inline-table; } #post-meta > .meta-thirdline ul > li { display: flex; } #post-meta > .meta-thirdline ul > li > i { line-height: 1.5; } #post-meta > .meta-thirdline > ul.category-list > li.category-list-item:not(:last-child)::after { content: \",\"; font-family: 'Roboto Mono'; align-content: flex-end; } #post-meta > .meta-thirdline a.category-list-link { border-radius: 0.1em; padding: 0 0.3em; transition: background-color 0.3s, padding 0.3s; } #post-meta > .meta-thirdline li:hover > a.category-list-link { background-color: var(--theme-color80) !important; color: var(--white) !important; padding: 0 0.4em; } #post-meta > .meta-thirdline > .category-list.sticky { display: none; } #post-meta .category-list.sticky > .category-list-link { display: inline-block; } @media screen and (max-width: 600px) { #post-meta > .meta-thirdline { display: inline-flex; } #post-meta > .meta-thirdline > .category-list.sticky { display: inline; } #post-meta > .meta-thirdline > .category-list:not(.sticky) { display: none; } } /* post - tag list, sticky category list */ #post-meta .tag_share { display: inline-flex; } #post-meta .tag_share > .post-meta__tag-list { display: inline; } #post-meta .tag_share > .post-meta__tag-list > .post-meta__tags { display: inline-block; padding: 0 0.3em; width: fit-content; border-radius: 0.2em; white-space: nowrap; } #post-meta .tag_share > .post-meta__tag-list > .post-meta__tags:hover, #post-meta > .meta-thirdline .sticky a.category-list-link:hover { padding: 0 0.4em; background: var(--theme-color80) !important; color: var(--white) !important; } #post-meta .tag_share .tag-separator:last-child { display: none; } @media screen and (max-width: 600px) { #post-meta .post-meta__tags.not-sticky { display: none !important; } #post-meta .tag-separator.not-sticky { display: none; } #post-meta .tag_share .post-meta__tag-list *:nth-last-child(1 of .tag-separator.sticky) { display: none; } } /* tags page */ h1.page-title + .tag-cloud-list a:not(:hover) { background-clip: text; mix-blend-mode: difference; } /* Toc */ #card-toc .toc-content .toc-link { margin: 0.1em 0; padding: 0.1em 0.6em; } /* Code */ code { border-radius: 3px; word-break: break-word; } /* horizontal line */ hr { margin: 1.5em auto; } hr:before, .custom-hr::before, #article-container hr:before, .search-dialog hr:before { transition: left 3s ease-in-out, background-color 0s; } .read-mode #article-container hr.footnotes-sep:before, .read-mode #article-container section.footnotes ol li.footnote-item:before { background: var(--global-bg) !important; } hr:hover::before, .custom-hr:hover::before, #article-container hr:hover::before, .search-dialog hr:hover::before { animation: wrench 5s ease; left: calc(95% - 30px) } /* footnotes */ #article-container hr.footnotes-sep { margin-bottom: 25px; } #article-container hr.footnotes-sep:before { background: var(--card-bg); margin: 0.5em; top: -1em; } #article-container section.footnotes ol p, #article-container section.footnotes ul p { margin-bottom: -2px; } #article-container sup.footnote-ref a:focus { color: var(--sub-theme-color) !important; outline: 2px solid var(--sub-theme-color-light30) !important; } .read-mode #article-container sup.footnote-ref a:focus { color: var(--theme-color) !important; outline: 2px solid var(--theme-color-light20) !important; } #article-container section.footnotes > .footnotes-list .footnote-item:focus { outline: 2px solid var(--hr-border) !important; } /* WRENCHING */ @keyframes wrench { 0%{transform:rotate(-12deg)} 8%{transform:rotate(12deg)} 10%{transform:rotate(24deg)} 18%{transform:rotate(-24deg)} 20%{transform:rotate(-24deg)} 28%{transform:rotate(24deg)} 30%{transform:rotate(24deg)} 38%{transform:rotate(-24deg)} 40%{transform:rotate(-24deg)} 48%{transform:rotate(24deg)} 50%{transform:rotate(24deg)} 58%{transform:rotate(-24deg)} 60%{transform:rotate(-24deg)} 68%{transform:rotate(24deg)} 75%{transform:rotate(0deg)} }","link":"/css/page/post@0.0.4.css"},{"title":"","text":"span.post-meta-lang { margin-right: -4px; } span.post-meta-lang i { padding-bottom: 0.125em; } @media screen and (max-width: 600px) { span.article-meta.tags { display: none; } }","link":"/css/page/indexPostUI@0.0.1.css"},{"title":"","text":"[data-theme=\"dark\"] #article-container div.btns a { background: #ffffff1a; } div.btns { margin: 0 -8px; display: flex; flex-wrap: wrap; align-items: flex-start; overflow: visible; line-height: 1.8; } div.btns b { font-size: 0.875rem; } div.btns.wide > a { padding-left: 32px; padding-right: 32px; } div.btns.fill > a { flex-grow: 1; width: auto; } div.btns.around { justify-content: space-around; } div.btns.center { justify-content: center; } div.btns.grid2 > a { width: calc(100% / 2 - 16px); } div.btns.grid3 > a { width: calc(100% / 3 - 16px); } div.btns.grid4 > a { width: calc(100% / 4 - 16px); } div.btns.grid5 > a { width: calc(100% / 5 - 16px); } #article-container div.btns a { transition: background 0.3s ease; margin: 8px; margin-top: calc(1.25 * 16px + 32px); font-weight: 600; display: flex; justify-content: flex-start; align-content: center; align-items: center; flex-direction: column; padding: 8px; text-align: center; background: var(--light-grey); border-radius: 4px; text-decoration: none; } #article-container div.btns a > i { background: var(--tag-blue) !important; } #article-container div.btns a > i:first-child { color: var(--white); background: var(--tag-blue); } #article-container div.btns a b { font-weight: 600; line-height: 1.3; } #article-container div.btns a img { margin: 0.4em auto; } #article-container div.btns a:not([href]) { cursor: default; color: inherit; } #article-container div.btns a[href]:hover { background: var(--tag-red-orange15); } #article-container div.btns a[href]:hover > i:first-child { background: var(--tag-red-orange); } div.btns, div.btns p, #article-container div.btns a { font-size: 0.8125rem; color: var(--font-color); } @media screen and (max-width: 1024px) { div.btns.grid2 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid2 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid2 > a { width: calc(100% / 1 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid3 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid3 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid3 > a { width: calc(100% / 1 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid4 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid4 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid4 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid5 > a { width: calc(100% / 4 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid5 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid5 > a { width: calc(100% / 2 - 16px); } } #article-container div.btns a > img:first-child, #article-container div.btns a > i:first-child { transition: transform 0.3s ease; height: 64px; width: 64px; box-shadow: 0 1px 2px 0 #0000001a; margin: 16px 8px 4px 8px; margin-top: calc(-1.25 * 16px - 32px); border: 2px solid #ffffff80; line-height: 60px; font-size: 28px; } #article-container div.btns a > img:first-child.auto, #article-container div.btns a > i:first-child.auto { width: auto; } #article-container div.btns a p, #article-container div.btns a b { margin: 0.25em; font-weight: 400; line-height: 1.25; word-wrap: break-word; } #article-container div.btns a[href]:hover, #article-container div.btns a[href]:hover b { color: var(--tag-red-orange); } #article-container div.btns a[href]:hover > img:first-child, #article-container div.btns a[href]:hover > i:first-child { transform: scale(1.1) translateY(-8px); box-shadow: 0 4px 8px 0 #0000001a; } div.btns.circle a > img:first-child, div.btns.circle a > i:first-child { border-radius: 32px; } div.btns.rounded a > img:first-child, div.btns.rounded a > i:first-child { border-radius: 16px; }","link":"/css/tag_plugins_custom@1.0.17/btns@0.0.1.css"},{"title":"","text":".carousel { touch-action: none; overflow: hidden; display: block; display: -webkit-box; background: transparent; height: fit-content; min-height: 480px; perspective: 1000px; transform-style: preserve-3d; } .drag-container, .spin-container { position: relative; display: block; display: -webkit-box; margin: auto; top: calc(480px / 2 - 170px); transform-style: preserve-3d; transform: rotateX(-13deg); } .drag-container img, .drag-container video { transform-style: preserve-3d; position: absolute; left: 0; top: 0; object-fit: cover; height: 100%; width: 100%; line-height: 200px; font-size: 50px; text-align: center; box-shadow: 0 0 8px var(--white); -webkit-box-reflect: below 10px linear-gradient(transparent, transparent, #00000055); } .drag-container .img-alt.text-center { display: none; } .drag-container br { display: none; } .drag-container p { font-family: Serif; position: absolute; top: 100%; left: 50%; transform: translate(-50%, -50%) rotateX(90deg); color: var(--white); font-size: 1.5em; line-height: 1.3; } .drag-container img:hover, .drag-container video:hover { box-shadow: 0 0 15px #ffffffdd; -webkit-box-reflect: below 10px linear-gradient(transparent, transparent, #00000077); } .carousel-ground { width: 900px; height: 900px; position: absolute; top: 250px; left: 50%; transform: translate(-50%, -50%) rotateX(90deg); background: radial-gradient(center center, farthest-side, #99999933, transparent); }","link":"/css/tag_plugins_custom@1.0.17/carousel@0.0.1.css"},{"title":"","text":".checkbox { display: flex; align-items: center; } .checkbox input { appearance: none; position: relative; height: 16px; width: 16px; transition: all 0.15s ease-out 0s; cursor: pointer; display: inline-block; outline: none; border-radius: 2px; flex-shrink: 0; margin-right: 8px; border: 2px solid var(--tag-blue); pointer-events: none; } .checkbox input[type=\"checkbox\"]::before { left: 1px; top: 5px; width: 0; height: 2px; transition: all 0.2s ease-in; transform: rotate(45deg); } .checkbox input[type=\"checkbox\"]::after { right: 7px; bottom: 3px; width: 2px; height: 0; transition: all 0.2s ease-out; transform: rotate(40deg); transition-delay: 0.25s; } .checkbox input[type=\"checkbox\"]:checked { background: var(--tag-blue); } .checkbox input[type=\"checkbox\"]:checked::before { left: 0; top: 7px; width: 6px; height: 2px; } .checkbox input[type=\"checkbox\"]:checked::after { right: 3px; bottom: 1px; width: 2px; height: 10px; } .checkbox.minus input[type=\"checkbox\"]::before { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.minus input[type=\"checkbox\"]::after { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.minus input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.minus input[type=\"checkbox\"]:checked::after { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.plus input[type=\"checkbox\"]::before { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.plus input[type=\"checkbox\"]::after { transform: rotate(0); left: 5px; top: 1px; width: 2px; height: 0; } .checkbox.plus input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.plus input[type=\"checkbox\"]:checked::after { left: 5px; top: 1px; width: 2px; height: 10px; } .checkbox.times input[type=\"checkbox\"]::before { transform: rotate(45deg); left: 3px; top: 1px; width: 0; height: 2px; } .checkbox.times input[type=\"checkbox\"]::after { transform: rotate(135deg); right: 3px; top: 1px; width: 0; height: 2px; } .checkbox.times input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.times input[type=\"checkbox\"]:checked::after { right: 1px; top: 5px; width: 10px; height: 2px; } .checkbox input[type=\"radio\"] { border-radius: 50%; } .checkbox input[type=\"radio\"]::before { content: \"\"; display: block; width: 8px; height: 8px; border-radius: 50%; margin: 2px; transform: scale(0); transition: all 0.25s ease-out; } .checkbox input[type=\"radio\"]:checked::before { transform: scale(1); background: var(--sub-theme-color); } .checkbox.red input { border-color: var(--tag-red); } .checkbox.red input[type=\"checkbox\"]:checked { background: var(--tag-red); } .checkbox.red input[type=\"radio\"]:checked::before { background: var(--tag-red); } .checkbox.green input { border-color: var(--tag-green); } .checkbox.green input[type=\"checkbox\"]:checked { background: var(--tag-green); } .checkbox.green input[type=\"radio\"]:checked::before { background: var(--tag-green); } .checkbox.yellow input { border-color: var(--tag-yellow); } .checkbox.yellow input[type=\"checkbox\"]:checked { background: var(--tag-yellow); } .checkbox.yellow input[type=\"radio\"]:checked::before { background: var(--tag-yellow); } .checkbox.cyan input { border-color: var(--tag-cyan); } .checkbox.cyan input[type=\"checkbox\"]:checked { background: var(--tag-cyan); } .checkbox.cyan input[type=\"radio\"]:checked::before { background: var(--tag-cyan); } .checkbox.blue input { border-color: var(--tag-blue); } .checkbox.blue input[type=\"checkbox\"]:checked { background: var(--tag-blue); } .checkbox.blue input[type=\"radio\"]:checked::before { background: var(--tag-blue); } .checkbox p { display: inline-block; margin-top: 2px !important; margin-bottom: 0 !important; } .checkbox input[type=\"checkbox\"]::before, .checkbox input[type=\"checkbox\"]::after { position: absolute; content: \"\"; background: var(--white); }","link":"/css/tag_plugins_custom@1.0.17/checkbox@0.0.1.css"},{"title":"","text":"/* @import \"//at.alicdn.com/t/c/font_4814779_nyhonqavyya.css\"; */ /* replace var(--light-grey) to light-grey */ :root { --tag-pure-red: #e8453c; --tag-red: #fe5f58; --tag-red30: #fe5f584d; --tag-red-orange: #ff5722; --tag-red-orange15: #ff572226; --tag-orange: #f77c17; --tag-orange30: #f77c174d; --tag-yellow: #ffbd2b; --tag-yellow30: #ffbd2b4d; --tag-green: #3dc550; --tag-green30: #3dc5504d; --tag-blue: #2196f3; --tag-blue30: #2196f34d; --tag-cyan: #1bcdfc; --tag-cyan30: #1bcdfc4d; --tag-pink-purple: #d017ee; --tag-pink-purple30: #d017ee4d; --tag-purple: #9b51e0; } [data-theme=\"dark\"] s, [data-theme='dark'] del { mix-blend-mode: screen; } [data-theme='dark'] .note.flat del, [data-theme='dark'] .note.modern del { mix-blend-mode: multiply; } #article-container .note.modern a, #article-container .note.flat a { color: unset } [data-theme='dark'] body:not(.read-mode) #article-container .note code, [data-theme='dark'] body:not(.read-mode) #article-container summary code, [data-theme='dark'] body.read-mode #article-container details.toggle code { background: #0000001c; color: unset; } u, emp, wavy, psw:hover { color: unset !important; } span.image-caption { display: table; margin: -0.4em auto 0.4em; } span.image-caption::before, .jg-caption-visible::before, .fancybox__caption::before { content: \"⊙︎ \"; } span.image-caption::after, .jg-caption-visible::after, .fancybox__caption::after { content: \" ⊙︎\"; } :root { --bubble-text-color: #e9a218; --bubble-text-hover-color: #2c7fe7; --bubble-text-shadow: #23232380; } [data-theme=\"dark\"] { --bubble-text-color: #f2b94b; --bubble-text-hover-color: #2c7fe7; --bubble-text-shadow: #23232380; } .bubble { white-space: nowrap; } .bubble-content { display: inline-block; color: var(--bubble-text-color); font-weight: 600; text-shadow: var(--bubble-text-shadow); } .bubble-content:hover { transition: all 0.2s ease-in-out; color: var(--bubble-text-hover-color); } .bubble-content:hover + .bubble-notation .bubble-item { transform: rotateX(0deg); transition: transform 0.3s ease-in-out; opacity: 1; } .bubble-notation { display: inline-block; white-space: wrap; } .bubble-item { transition: all 0.3s ease-in-out; opacity: 0; color: var(--white); z-index: 99; display: block; position: absolute; transform-origin: 50% 0; transform: rotateX(90deg); width: fit-content; max-width: 400px; overflow: hidden; padding: 1.2em 0.6em 0.5em 0.6em; /* clip-path: polygon(5px 10px, 20px 10px, 30px 0, 40px 10px, calc(100% - 5px) 10px, 100% 15px, 100% calc(100% - 5px), calc(100% - 5px) 100%, 5px 100%, 0 calc(100% - 5px), 0 15px, 5px 10px); */ } img.medium-zoom-image.entered.loaded.medium-zoom-image--opened { width: auto !important; } @keyframes spin { from { transform: rotateY(0deg); } to { transform: rotateY(360deg); } } @keyframes spinRevert { from { transform: rotateY(360deg); } to { transform: rotateY(0deg); } } details.folding-tag { display: block; padding: 1em; margin: 1em 0; font-size: var(--global-font-size); border: 1px solid var(--grey60); border-radius: 4px; } details.folding-tag summary { cursor: pointer; padding: 1em; margin: -1.11em; border-radius: 3px; color: var(--dark-black50); font-size: 0.9em !important; font-weight: 600; position: relative; line-height: normal; } details.folding-tag summary > p, details.folding-tag summary > h1, details.folding-tag summary > h2, details.folding-tag summary > h3, details.folding-tag summary > h4, details.folding-tag summary > h5, details.folding-tag summary > h6 { display: inline; border-bottom: none !important; } details.folding-tag summary:hover { color: var(--dark-black60) } details.folding-tag summary:hover::after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 16px; } details.folding-tag[open] > summary { border-bottom-left-radius: 0; border-bottom-right-radius: 0; } details.folding-tag > summary { background: var(--light-grey); } [data-theme=\"dark\"] details.folding-tag > summary, [data-theme=\"dark\"] .toggle > .toggle-button { background: #98999d; } details.folding-tag[purple] { border-color: #fae7fd; } details.folding-tag[purple] > summary { background: #fae7fd; } details.folding-tag[blue] { border-color: var(--tag-blue30); } details.folding-tag[blue] > summary { background: #e8f4fd; } [data-theme=\"dark\"] details.folding-tag[blue] > summary { background: #728ea7; } details.folding-tag[cyan] { border-color: #e8fafe; } details.folding-tag[cyan] > summary { background: #e8fafe; } details.folding-tag[green] { border-color: #ebf9ed; } details.folding-tag[green] > summary { background: #ebf9ed; } details.folding-tag[yellow] { border-color: #fff8e9; } details.folding-tag[yellow] > summary { background: #fff8e9; } details.folding-tag[orange] { border-color: #fdf1e7; } details.folding-tag[orange] > summary { background: #fdf1e7; } details.folding-tag[red] { border-color: #feefee; } details.folding-tag[red] > summary { background: #feefee; } details.folding-tag[open][purple] { border-color: var(--tag-pink-purple30); } details.folding-tag[open][purple] > summary { border-bottom-color: var(--tag-pink-purple30); } details.folding-tag[open][blue] { border-color: var(--tag-blue30); } details.folding-tag[open][blue] > summary { border-bottom-color: var(--tag-blue30); } details.folding-tag[open][cyan] { border-color: var(--tag-cyan30); } details.folding-tag[open][cyan] > summary { border-bottom-color: var(--tag-cyan30); } details.folding-tag[open][green] { border-color: var(--tag-green30); } details.folding-tag[open][green] > summary { border-bottom-color: var(--tag-green30); } details.folding-tag[open][yellow] { border-color: var(--tag-yellow30); } details.folding-tag[open][yellow] > summary { border-bottom-color: var(--tag-yellow30); } details.folding-tag[open][orange] { border-color: var(--tag-orange30); } details.folding-tag[open][orange] > summary { border-bottom-color: var(--tag-orange30); } details.folding-tag[open][red] { border-color: var(--tag-red30); } details.folding-tag[open][red] > summary { border-bottom-color: var(--tag-red30); } details.folding-tag[open] > summary { /* color: #444; */ margin-bottom: 0; } details.folding-tag[open] > summary:hover::after { content: '-'; } details.folding-tag[open] > div.content { padding: 16px; margin: -16px; margin-top: 0; } details.folding-tag[open] > div.content p>a:hover { text-decoration: underline; } details.folding-tag[open] > div.content > p:first-child, details.folding-tag[open] > div.content > .tabs:first-child, details.folding-tag[open] > div.content > ul:first-child, details.folding-tag[open] > div.content > ol:first-child, details.folding-tag[open] > div.content > .highlight:first-child, details.folding-tag[open] > div.content > .note:first-child, details.folding-tag[open] > div.content > details:first-child { margin-top: 0; } details.folding-tag[open] > div.content > p:last-child, details.folding-tag[open] > div.content > .tabs:last-child, details.folding-tag[open] > div.content > ul:last-child, details.folding-tag[open] > div.content > ol:last-child, details.folding-tag[open] > div.content > .highlight:last-child, details.folding-tag[open] > div.content > .note:last-child, details.folding-tag[open] > div.content > details:last-child { margin-bottom: 0; } a.ghcard { display: inline-block; line-height: 0; } .md .ghcard-group { column-count: 2; column-gap: 0; margin: 0 -8px; } .md .ghcard-group .ghcard { margin: 8px; } .md .img { object-fit: contain; } img.inline { display: inline !important; vertical-align: middle; transform: translateY(-4px); } p .img-alt { display: inline-block; width: 100%; } s, del { color: #757575cc; text-decoration-color: #757575cc; mix-blend-mode: multiply; } u { /* color: #444; */ text-decoration: none; border-bottom: 1px solid var(--tag-red); } emp { /* color: #444; */ border-bottom: 2px dotted var(--tag-red); } wavy { /* color: #444; */ text-decoration-style: wavy; text-decoration-line: underline; text-decoration-color: var(--tag-red); } psw:hover { border-radius: 2px; transition: background 0.3s ease, color 0.15s 0.15s; } psw:not(:hover) { color: transparent; background: #a1a1a1; } kbd { display: inline-block; color: #666; font-family: Arial Rounded MT Bold; font-size: 0.75em; text-decoration: none; text-align: center; padding: 2px 5px; margin: 0 5px; background: #eff0f2; border-radius: 4px; border-top: 1px solid #f5f5f5; box-shadow: inset 0 0 20px #e8e8e8, 0 1px 0 #c3c3c3, 0 1px 0 #c9c9c9, 0 1px 2px #333; text-shadow:0 1px 0 #f5f5f5 } #article-container .tag.link { text-align: center; } audio, video { border-radius: 4px; max-width: 100%; } video { z-index: 1; transition: box-shadow 0.3s ease; } video:hover { box-shadow: 0 0 4px var(--grey), 0 0 8px var(--grey); } div.video { line-height: 0; text-align: center; } div.videos { max-width: calc(100% + 2 * 4px); display: flex; flex-wrap: wrap; justify-content: flex-start; align-items: flex-end; /* margin: 1em -4px; */ margin: 0 -4px; } div.videos .video, div.videos iframe { width: 100%; margin: 4px; } div.videos iframe { border-radius: 4px; width: 100%; min-height: 300px; } div.videos.left { justify-content: flex-start; } div.videos.center { justify-content: center; } div.videos.right { justify-content: flex-end; } div.videos.stretch { align-items: stretch; } div.videos[col='1'] .video, div.videos[col='1'] iframe { width: 100%; } div.videos[col='2'] .video, div.videos[col='2'] iframe { width: calc(50% - 2 * 4px); } div.videos[col='3'] .video, div.videos[col='3'] iframe { width: calc(33.33% - 2 * 4px); } div.videos[col='4'] .video, div.videos[col='4'] iframe { width: calc(25% - 2 * 4px); } /* [data-theme=\"dark\"] audio, [data-theme=\"dark\"] video { filter: brightness(0.7); } */ span.nota { /* color: #99a9bf; */ color: inherit; text-decoration: none; word-wrap: break-word; transition: all 0.2s; overflow-wrap: break-word; } span.nota:hover { color: var(--sub-theme-color); } span.nota:hover::before { position: fixed; width: fit-content; max-width: 80%; margin: auto; left: 0; right: 0; top: 6%; border-radius: 10px; text-align: center; z-index: 100; content: attr(data-nota); font-size: 16px; color: var(--white); padding: 10px; background-color: var(--sub-theme-color); } [data-theme=dark] span.nota:hover::before { background-color: #121212cc; } @media (min-width: 1200px) { .poem { margin: 0 auto; height: auto; writing-mode: tb-rl; } .poem p { text-decoration: underline; text-decoration-color: #c10b0bb8; text-decoration-style: dashed; } } /* @font-face { font-family: 'Poem'; src: url(\"https://unpkg.zhimg.com/akilar-candyassets/fonts/Poem.ttf\"); font-display: swap; } */ .poem p { /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 25px; text-align: center; } .poem-title { /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 2.5em; text-align: center; } .poem-author { text-align: center !important; /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 16px; color: #424242; } .progress { display: flex; font-size: var(--global-font-size); background-color: #58585899; border-radius: 0.25em; margin: 1em 0; height: 2em; overflow: hidden; } .progress p { margin: 0 0 0 10px !important; } .progress .progress-bar-animated { background-color: #a7b5fd !important; animation: progress-bar-stripes 1s linear infinite; } .progress .progress-bar-striped { background-image: linear-gradient(45deg, #ffffff26 25%, transparent 25%, transparent 50%, #ffffff26 50%, #ffffff26 75%, transparent 75%, transparent); background-size: 1em 1em; } .progress .progress-bar { display: flex; flex-direction: column; justify-content: center; overflow: visible; color: var(--white); text-align: center; white-space: nowrap; background-color: #0d6efd; transition: width 0.6s ease; } @media (prefers-reduced-motion: reduce) { .progress .progress-bar { transition: none; } } .progress .bg-green { background-color: #28a745 !important; } .progress .bg-yellow { background-color: #ffc107 !important; } .progress .bg-red { background-color: #dc3545 !important; } .progress .bg-cyan { background-color: #17a2b8 !important; } .progress .bg-blue { background-color: #0d6efd !important; } .progress .bg-gray { background-color: #7f838a !important; } @keyframes progress-bar-stripes { 0% { background-position-x: 1em; } } :root { --referto-text-color: #e9a218; --referto-text-hover-color: #2c7fe7; --referto-literature-background-color: #318efd; --referto-title-background-color: #183153; --referto-content-text-color: #f1f1ef; --referfrom-text-shadow: #23232380; --referfrom-text-color: #f1f1ef; --referfrom-text-hover-color: #f2b94b; --referfrom-link-color: #403e3b; --referfrom-link-hover-color: #235dac; --referfrom-background-color: #f1f1ef; --reference-anchor-color: #183153; --reference-anchor-up-color: #318efd; } [data-theme=\"dark\"] { --referto-text-color: #f2b94b; --referto-text-hover-color: #2c7fe7; --referto-literature-background-color: #5c6167; --referto-title-background-color: #090a0b; --referto-content-text-color: #f1f1ef; --referfrom-text-shadow: #23232380; --referfrom-text-color: #f1f1ef; --referfrom-text-hover-color: #f2b94b; --referfrom-link-color: #f1f1ef; --referfrom-link-hover-color: #f2b94b; --referfrom-background-color: #5c6167ad; --reference-anchor-color: #090a0b; --reference-anchor-up-color: #183153; } .hidden-anchor { position: relative; top: -150px; display: inline-block; height: 0; overflow: hidden; } .reference a { display: inline-block; color: var(--referto-text-color) !important; font-weight: 600; transition: all 0.2s ease-in-out; } .reference:hover a { transition: all 0.2s ease-in-out; text-decoration: none !important; color: var(--referto-text-hover-color) !important; } .reference:hover + .reference-bubble .reference-item { transform: translate(-40px, 10px) rotateX(0deg); transition: all 0.5s ease-in-out; opacity: 1; } .reference-bubble { display: inline-block; } .reference-item { transition: all 0.5s ease-in-out; opacity: 0; z-index: 99; display: flex; position: absolute; transform: translate(-40px, 10px) rotateX(90deg); width: auto; height: auto; clip-path: polygon(5px 10px, 20px 10px, 30px 0, 40px 10px, calc(100% - 5px) 10px, 100% 15px, 100% calc(100% - 5px), calc(100% - 5px) 100%, 5px 100%, 0 calc(100% - 5px), 0 15px, 5px 10px); } .reference-literature { max-width: 200px; padding: 20px 10px 10px 10px; background: var(--referto-literature-background-color); color: var(--referto-content-text-color) !important; word-wrap: break-word; word-break: break-all; display: flex; align-items: center; } .reference-title { padding: 20px 10px 10px 10px; background: var(--referto-title-background-color); color: var(--referto-content-text-color) !important; writing-mode: vertical-lr; display: flex; justify-content: center; } .reference-source { font-size: 16px; height: auto; line-height: 26px; width: fit-content; margin: 5px 0; /* max-width: 90%; */ background: var(--referfrom-background-color); box-shadow: 1px 1px 1px var(--referfrom-text-shadow); border-radius: 8px; padding-right: 10px; } .reference-source pangu { display: none; } a.reference-anchor { border-bottom-left-radius: 5px; border-top-left-radius: 5px; color: var(--referfrom-text-color) !important; background: var(--reference-anchor-color); height: 30px; display: inline-block; width: fit-content; padding: 0px 0px 0px 10px; } a.reference-anchor:hover { color: var(--referfrom-text-hover-color) !important; text-decoration: none !important; } a.reference-anchor:hover .reference-anchor-up { color: var(--referfrom-text-hover-color) !important; } a.reference-link { color: var(--referfrom-link-color) !important; padding: 0px 10px; } a.reference-link:hover { color: var(--referfrom-link-hover-color) !important; text-decoration: none !important; } .reference-anchor-up { color: var(--referfrom-text-color) !important; height: 30px; width: 40px; padding: 0px 0px 0px 10px; background: var(--reference-anchor-up-color); display: inline-flex !important; align-items: center; justify-content: center; clip-path: polygon(0 0, 10px 50%, 0 100%, 100% 100%, 100% 0); } p.p.subtitle { font-weight: 600; color: #44b299; font-size: 1.25em !important; padding-top: 1.5em; } p.p.subtitle:first-child { padding-top: 1em; } span.p.left, p.p.left { display: block; text-align: left; } span.p.center, p.p.center { display: block; text-align: center; } span.p.right, p.p.right { display: block; text-align: right; } span.p.small, p.p.small { font-size: var(--global-font-size); } span.p.semi-large, p.p.semi-large { font-size: 1.5em; line-height: 1.4; } span.p.large, p.p.large { font-size: 2.5em; line-height: 1.4; } span.p.huge, p.p.huge { font-size: 4em; line-height: 1.4; } span.p.ultra, p.p.ultra { font-size: 6em; line-height: 1.4; } span.p.small, p.p.small, span.p.large, p.p.large, span.p.huge, p.p.huge, span.p.ultra, p.p.ultra { margin: 0; padding: 0; } span.p.bold, p.p.bold { font-weight: 600; } span.p.h1, p.p.h1, span.p.h2, p.p.h2 { padding-bottom: 0.2em; font-weight: 500; } span.p.h1, p.p.h1 { font-size: 1.65em; color: var(--color-h1); padding-top: 2em; } span.p.h2, p.p.h2 { font-size: 1.65em; color: var(--color-h2); padding-top: 2em; border-bottom: 1px solid #4444441a; } span.p.h3, p.p.h3 { font-size: 1.375em; color: var(--color-h3); padding-top: 2em; } span.p.h4, p.p.h4 { font-size: 1.125em; color: var(--color-h4); padding-top: 2em; } span.p.h5, p.p.h5 { font-size: 1em; color: var(--color-h5); padding-top: 1.5em; } span.p.red, p.p.red { color: var(--tag-pure-red); } span.p.yellow, p.p.yellow { color: #fcec60; } span.p.green, p.p.green { color: var(--tag-green); } span.p.cyan, p.p.cyan { color: var(--tag-cyan); } span.p.blue, p.p.blue { color: var(--tag-blue); } span.p.purple, p.p.purple { color: #9c27b0; } span.p.gray, p.p.gray { color: #999; }","link":"/css/tag_plugins_custom@1.0.17/common@0.0.1.css"},{"title":"","text":"#article-container a.link-card { margin: 0.25em auto; background: var(--light-grey); display: inline-flex; align-items: center; cursor: pointer; text-align: center; min-width: 200px; max-width: 361px; color: var(--dark-black60); border-radius: 12px; text-decoration: none; } #article-container a.link-card:hover { box-shadow: 0 4px 8px 0 #0000001a; } #article-container a.link-card div.left { width: 48px; height: 48px; margin: 12px; overflow: hidden; flex-shrink: 0; position: relative; } #article-container a.link-card div.left i { font-size: 32px; line-height: 48px; margin-left: 4px; } #article-container a.link-card div.left img { display: block; position: absolute; border-radius: 2px; top: 50%; left: 50%; transform: translate(-50%, -50%); } #article-container a.link-card div.right { overflow: hidden; margin-right: 12px; } #article-container a.link-card p { margin: 0; } #article-container a.link-card p.text { font-weight: 600; } #article-container a.link-card p.url { flex-shrink: 0; color: #444444a6; font-size: 13px; } @media screen and (max-width: 425px) { #article-container a.link-card { max-width: 100%; } } @media screen and (max-width: 375px) { #article-container a.link-card { width: 100%; } } #article-container a.link-card div.left, #article-container a.link-card div.right { pointer-events: none; } /* [data-theme=\"dark\"] #article-container a.link-card { filter: brightness(0.7); } */ /* [data-theme=\"dark\"] #article-container a.link-card img { filter: brightness(1); } */","link":"/css/tag_plugins_custom@1.0.17/linkcard@0.0.1.css"},{"title":"","text":".medium-zoom-overlay { position: fixed; top: 0; right: 0; bottom: 0; left: 0; opacity: 0; transition: opacity .3s; will-change: opacity } .medium-zoom--opened .medium-zoom-overlay { cursor: pointer; opacity: 1 } .medium-zoom-image { cursor: pointer; transition: transform .3s cubic-bezier(.2, 0, .2, 1) !important } .medium-zoom-image--hidden { visibility: hidden } .medium-zoom-image--opened { position: relative; cursor: pointer; will-change: transform }","link":"/css/tag_plugins_custom@1.0.17/medium_zoom@1.1.0.css"},{"title":"","text":".site-card-group { display: flex; flex-wrap: wrap; justify-content: flex-start; margin: -8px; align-items: stretch; } .site-card { margin: 8px; width: calc(100% / 3 - 16px); display: block; line-height: 1.4; height: 100%; } @media screen and (min-width: 2048px) { .site-card { width: calc(100% / 5 - 16px); } } @media screen and (max-width: 768px) { .site-card { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { .site-card { width: calc(100% / 2 - 16px); } } .site-card .img { width: 100%; height: 120px; overflow: hidden; border-radius: 6px; box-shadow: 0 1px 2px 0px #00000033; background: var(--light-grey); } @media screen and (max-width: 500px) { .site-card .img { height: 100px; } } .site-card .img img { width: 100%; height: 100%; pointer-events: none; transition: transform 2s ease; object-fit: cover; } .site-card .info { margin-top: 8px; } #article-container .site-card .info span { text-decoration: underline; text-decoration-color: var(--card-bg); } #article-container .site-card .info img { width: 32px; height: 32px; pointer-events: none; border-radius: 16px; float: left; margin-right: 8px; margin-top: 2px; } .site-card .info span { display: block; } .site-card .info .title { font-weight: 600; font-size: var(--global-font-size); color: var(--font-color); display: block; overflow: hidden; line-clamp: 1; transition: all 0.28s ease; } .site-card .info .desc { font-size: var(--global-font-size); word-wrap: break-word; line-height: 1.2; color: var(--meta-color); display: block; overflow: hidden; line-clamp: 2; } .site-card .img { transition: color 0.28s ease; } .site-card:hover .img { box-shadow: 0 4px 8px 0px #0000001a, 0 2px 4px 0px #0000001a, 0 4px 8px 0px #0000001a, 0 8px 16px 0px #0000001a; } .site-card:hover .info .title { color: var(--tag-red-orange); }","link":"/css/tag_plugins_custom@1.0.17/sitecard@0.0.1.css"},{"title":"","text":"/* Tag Plugins - Tip */ .tip { padding: 6px 20px; position: relative; color: #fff; margin-bottom: 20px; background: #41363c; background: linear-gradient(90deg, #41363c, #494648); padding: 6px 20px; border-radius: 10px; box-shadow: 0 3px 5px #32323280; } .tip p { margin: 0 !important; padding: 0.5em 0; } .tip::before { background: #41363c; background: linear-gradient(0deg, #41363c, #494648); text-shadow: 0 -1px #41363c; border-radius: 50%; color: #fff; font-size: 12px; position: absolute; width: 24px; height: 24px; line-height: 24.5px; left: -12px; top: -12px; box-shadow: 0 0 0 2.5px #f7f8f9; font-weight: 600; font-family: \"Font Awesome 6 Free\"; text-align: center; } .tip ol { margin: 0; } .tip.info { background: linear-gradient(90deg, #20a0ff, #20b8ff); padding: 6px 20px; border-radius: 10px; box-shadow: 0 3px 5px #20a0ff80; } .tip.info::before { background: linear-gradient(0deg, #0092ff, #20b8ff); content: \"\\f129\"; text-shadow: 0 -1px #20a0ff; } .tip.success { background: linear-gradient(90deg, #61be33, #8fce44); text-shadow: 0 -1px #61be33; box-shadow: 0 3px 5px #68c33b80; } .tip.success::before { background: linear-gradient(0deg, #52bb1d, #95d34b); content: \"\\f00c\"; text-shadow: 0 -1px #61be33; } .tip.warning { background: linear-gradient(90deg, #ff953f, #ffb449); text-shadow: 0 -1px #ff953f; box-shadow: 0 3px 5px #ff9a4980; } .tip.warning::before { background: linear-gradient(0deg, #ff8f35, #ffc149); content: \"\\f12a\"; text-shadow: 0 -1px #ff953f; } .tip.error { background: linear-gradient(90deg, #ff4949, #ff7849); text-shadow: 0 -1px #ff4949; box-shadow: 0 3px 5px #ff494980; } .tip.error::before { background: linear-gradient(0deg, #ff3838, #ff7849); content: \"\\f00d\"; text-shadow: 0 -1px #ff4949; } .tip.bolt { background: linear-gradient(530deg, #78ca33, #25822c); content: \"\\f00d\"; text-shadow: 0 -1px #4cf706; } .tip.bolt::before { background: linear-gradient(776deg, #78ca33, #25822c); content: \"\\f0e7\"; text-shadow: 0 -1px #4cf706; } .tip.ban { background: linear-gradient(90deg, #ff4949, #f03b49); text-shadow: 0 -1px #ff4949; box-shadow: 0 3px 5px #ff494980; } .tip.ban::before { background: linear-gradient(0deg, #ff3838, #ff1022); content: \"\\f05e\"; text-shadow: 0 -1px #ff4949; } .tip.home { background: linear-gradient(90deg, #0ec0ef, #80e0f7); text-shadow: 0 -1px #0ec0ef; box-shadow: 0 3px 5px #01caff; } .tip.home::before { background: linear-gradient(0deg, #0ec0ee, #0ec0ea); content: \"\\f015\"; text-shadow: 0 -1px #0ec0ea; } .tip.sync { background: linear-gradient(230deg, #47c0e0, #2dc342); text-shadow: 0 -1px #1bcdfc; box-shadow: 0 3px 5px #20b1ad; } .tip.sync::before { background: linear-gradient(270deg, #40c0e2, #3dc550); content: \"\\f021\"; text-shadow: 0 -1px #17cfff; } .tip.cogs { background: linear-gradient(230deg, #40c0e2, #5247e2); text-shadow: 0 -1px #8278fd; box-shadow: 1 3px 5px #5e52ec; } .tip.cogs::before { background: linear-gradient(560deg, #40c0e2, #5246e2); content: \"\\f085\"; text-shadow: 0 -1px #098cf5; } .tip.key { background: #25c33b; background: linear-gradient(230deg, #90a4ae, #b7a7a7); text-shadow: 0 -1px #c1c0d4; box-shadow: 1 3px 5px #d5d4de; } .tip.key::before { background: linear-gradient(560deg, #bccdd2, #cfced4); content: \"\\f084\"; text-shadow: 0 -1px #a9b2b9; } .tip.bell { background: #25c33b; background: linear-gradient(230deg, #ffaa0d, #deb455); text-shadow: 0 -1px #c1c0d4; box-shadow: 1 3px 5px #d5d4de; } .tip.bell::before { background: linear-gradient(560deg, #f9ae07, #ffb615); content: \"\\f0f3\"; text-shadow: 0 -1px #ffb81b; } [data-theme=\"dark\"] .tip { filter: brightness(0.7); } #article-container .tip a { color: #e6eaed; }","link":"/css/tag_plugins_custom@1.0.17/tip@0.0.1.css"},{"title":"Categories","text":"","link":"/en/categories/index.html"},{"title":"Tags","text":"","link":"/en/tags/index.html"},{"title":"","text":"{\"name\":\"App\",\"icons\":[{\"src\":\"/android-icon-36x36.png\",\"sizes\":\"36x36\",\"type\":\"image/png\",\"density\":\"0.75\"},{\"src\":\"/android-icon-48x48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\",\"density\":\"1.0\"},{\"src\":\"/android-icon-72x72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\",\"density\":\"1.5\"},{\"src\":\"/android-icon-96x96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\",\"density\":\"2.0\"},{\"src\":\"/android-icon-144x144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\",\"density\":\"3.0\"},{\"src\":\"/android-icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"density\":\"4.0\"},{\"src\":\"/android-chrome-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/android-chrome-512x512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}],\"theme_color\":\"#ffffff\",\"background_color\":\"#ffffff\",\"display\":\"standalone\"}","link":"/img/favicon_io/manifest.json"},{"title":"","text":"/** * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * First Modified by hexo-theme-butterfly * Then Add the ability to search by language, tags, and categories */ class LocalSearch { constructor ({ path = '', unescape = false, top_n_per_article = 1 }) { this.path = path this.unescape = unescape this.top_n_per_article = top_n_per_article this.isfetched = false this.datas = null } getIndexByWord (words, text, caseSensitive = false) { const index = [] const included = new Set() if (!caseSensitive) { text = text.toLowerCase() } words.forEach(word => { if (this.unescape) { const div = document.createElement('div') div.innerText = word word = div.innerHTML } const wordLen = word.length if (wordLen === 0) return let startPosition = 0 let position = -1 if (!caseSensitive) { word = word.toLowerCase() } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({ position, word }) included.add(word) startPosition = position + wordLen } }) // Sort index by position of keyword index.sort((left, right) => { if (left.position !== right.position) { return left.position - right.position } return right.word.length - left.word.length }) return [index, included] } // Merge hits into slices mergeIntoSlice (start, end, index) { let item = index[0] let { position, word } = item const hits = [] const count = new Set() while (position + word.length position) { index.shift() } else { break } } } return { hits, start, end, count: count.size } } // Highlight title and content highlightKeyword (val, slice) { let result = '' let index = slice.start for (const { position, length } of slice.hits) { result += val.substring(index, position) index = position + length result += `${val.substr(position, length)}` } result += val.substring(index, slice.end) return result } getResultItems (keywords) { const resultItems = [] this.datas.forEach(({ title, language, tags, categories, content, url }) => { // The number of different keywords included in the article. const [indexOfTitle, keysOfTitle] = this.getIndexByWord(keywords, title) const indexAndkeysOfTags = tags.map(tag => this.getIndexByWord(keywords, tag)) const indexAndkeydOfCategories = categories.map(cat => this.getIndexByWord(keywords, cat)) const [indexOfContent, keysOfContent] = this.getIndexByWord(keywords, content) // Change includedCount into weighted value (title: 3, tags: 2, categories: 2, content: 1) // const includedCount = new Set([...keysOfTitle, ...keysOfContent]).size // ORIGINAL const includedCount = keysOfTitle.size * 3 + indexAndkeysOfTags.reduce((acc, [_, keys]) => acc + keys.size, 0) * 2 + indexAndkeydOfCategories.reduce((acc, [_, keys]) => acc + keys.size, 0) * 2 + keysOfContent.size // Show search results // const hitCount = indexOfTitle.length + indexOfContent.length // ORIGINAL const hitCount = indexOfTitle.length + indexOfContent.length + indexAndkeysOfTags.reduce((acc, [index, _]) => acc + index.length, 0) + indexAndkeydOfCategories.reduce((acc, [index, _]) => acc + index.length, 0) if (hitCount === 0) return const slicesOfTitle = [] if (indexOfTitle.length !== 0) { slicesOfTitle.push(this.mergeIntoSlice(0, title.length, indexOfTitle)) } const slicesOfTags = [] indexAndkeysOfTags.forEach((indexAndkeysOfTag, index) => { const [indexOfTag, _] = indexAndkeysOfTag if (indexOfTag.length !== 0) { slicesOfTags.push(this.mergeIntoSlice(0, tags[index].length, indexOfTag)) } else { slicesOfTags.push(null) } }) const slicesOfCategories = [] indexAndkeydOfCategories.forEach((indexAndkeydOfCategory, index) => { const [indexOfCategory, _] = indexAndkeydOfCategory if (indexOfCategory.length !== 0) { slicesOfCategories.push(this.mergeIntoSlice(0, categories[index].length, indexOfCategory)) } else { slicesOfCategories.push(null) } }) let slicesOfContent = [] while (indexOfContent.length !== 0) { const item = indexOfContent[0] const { position } = item // Cut out 120 characters. The maxlength of .search-input is 80. const start = Math.max(0, position - 20) const end = Math.min(content.length, position + 100) slicesOfContent.push(this.mergeIntoSlice(start, end, indexOfContent)) } // Sort slices in content by included keywords' count and hits' count slicesOfContent.sort((left, right) => { if (left.count !== right.count) { return right.count - left.count } else if (left.hits.length !== right.hits.length) { return right.hits.length - left.hits.length } return left.start - right.start }) // Select top N slices in content const upperBound = parseInt(this.top_n_per_article, 10) if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound) } let resultItem = '' url = new URL(url, location.origin) url.searchParams.append('highlight', keywords.join(' ')) if (slicesOfTitle.length !== 0) { resultItem += `${this.highlightKeyword(title, slicesOfTitle[0])}` } else { resultItem += `${title}` } resultItem += '' if (slicesOfTags.filter(slice => slice).length !== 0) { resultItem += `[Tags] ` slicesOfTags.forEach((slice, index) => { if (slice) { resultItem += `${this.highlightKeyword(tags[index], slice)}, ` } }) resultItem = resultItem.slice(0, -2) + '' } if (slicesOfCategories.filter(slice => slice).length !== 0) { resultItem += `[Categories] ` slicesOfCategories.forEach((slice, index) => { if (slice) { resultItem += `${this.highlightKeyword(categories[index], slice)}, ` } }) resultItem = resultItem.slice(0, -2) + '' } resultItem += '' slicesOfContent.forEach(slice => { resultItem += `${this.highlightKeyword(content, slice)}...` }) resultItem += '' resultItems.push({ item: resultItem, id: resultItems.length, hitCount, includedCount, language }) }) return resultItems } fetchData () { const isXml = !this.path.endsWith('json') fetch(this.path) .then(response => response.text()) .then(res => { // Get the contents from search data this.isfetched = true this.datas = isXml ? [...new DOMParser().parseFromString(res, 'text/xml').querySelectorAll('entry')].map(element => ({ title: element.querySelector('title').textContent, language: element.querySelector('language').textContent, tags: (element.querySelector('tags') !== null && element.querySelector('tags').textContent) || '', categories: (element.querySelector('categories') !== null && element.querySelector('categories').textContent) || '', content: element.querySelector('content').textContent, url: element.querySelector('url').textContent })) : JSON.parse(res) // Only match articles with non-empty titles this.datas = this.datas.filter(data => data.title).map(data => { data.title = data.title.trim() data.tags = data.tags ? data.tags.trim().replace(/\\n[\\s]+/g, '\\n').split('\\n') : [] data.categories = data.categories ? data.categories.trim().replace(/\\n[\\s]+/g, '\\n').split('\\n') : [] data.content = data.content ? data.content.trim().replace(/]+>/g, '') : '' data.url = decodeURIComponent(data.url).replace(/\\/{2,}/g, '/') return data }) // Remove loading animation window.dispatchEvent(new Event('search:loaded')) }) } // Highlight by wrapping node in mark elements with the given class name highlightText (node, slice, className) { const val = node.nodeValue let index = slice.start const children = [] for (const { position, length } of slice.hits) { const text = document.createTextNode(val.substring(index, position)) index = position + length const mark = document.createElement('mark') mark.className = className mark.appendChild(document.createTextNode(val.substr(position, length))) children.push(text, mark) } node.nodeValue = val.substring(index, slice.end) children.forEach(element => { node.parentNode.insertBefore(element, node) }) } // Highlight the search words provided in the url in the text highlightSearchWords (body) { const params = new URL(location.href).searchParams.get('highlight') const keywords = params ? params.split(' ') : [] if (!keywords.length || !body) return const walk = document.createTreeWalker(body, NodeFilter.SHOW_TEXT, null) const allNodes = [] while (walk.nextNode()) { if (!walk.currentNode.parentNode.matches('button, select, textarea, .mermaid')) allNodes.push(walk.currentNode) } allNodes.forEach(node => { const [indexOfNode] = this.getIndexByWord(keywords, node.nodeValue) if (!indexOfNode.length) return const slice = this.mergeIntoSlice(0, node.nodeValue.length, indexOfNode) this.highlightText(node, slice, 'search-keyword') }) } } window.addEventListener('load', () => { // Search const { path, top_n_per_article, unescape, languages } = GLOBAL_CONFIG.localSearch const localSearch = new LocalSearch({ path, top_n_per_article, unescape }) const currentLanguage = document.documentElement.getAttribute('page-lang') === 'default' ? document.documentElement.getAttribute('lang') : document.documentElement.getAttribute('page-lang') const input = document.querySelector('#local-search-input input') const statsItem = document.getElementById('local-search-stats-wrap') const $loadingStatus = document.getElementById('loading-status') const isXml = !path.endsWith('json') const inputEventFunction = () => { if (!localSearch.isfetched) return let searchText = input.value.trim().toLowerCase() isXml && (searchText = searchText.replace(//g, '&gt;')) if (searchText !== '') $loadingStatus.innerHTML = '' const keywords = searchText.split(/[-\\s]+/) const container = document.getElementById('local-search-results') const siteLang = document.querySelector('html').getAttribute('lang') || document.querySelector('html').getAttribute('page-lang') let resultItems = [] if (searchText.length > 0) { // Perform local searching resultItems = localSearch.getResultItems(keywords) } if (keywords.length === 1 && keywords[0] === '') { container.textContent = '' statsItem.textContent = '' } else if (resultItems.length === 0) { container.textContent = '' const statsDiv = document.createElement('div') statsDiv.className = 'search-result-stats' // statsDiv.textContent = languages.hits_empty.replace(/\\$\\{query}/, searchText) statsDiv.innerHTML = languages.map((item) => { if (item.lang === currentLanguage) { return `${item.hits_empty.replace(/\\$\\{query}/, searchText)}` } else { return `${item.hits_empty.replace(/\\$\\{query}/, searchText)}` } }).join('') statsItem.innerHTML = statsDiv.outerHTML } else { resultItems.sort((left, right) => { left_count = (siteLang === left.language) || left.language === 'default' ? left.includedCount + 10000 : left.includedCount right_count = (siteLang === right.language) || right.language === 'default' ? right.includedCount + 10000 : right.includedCount // console.log(siteLang, left.language, left_count, right.language, right_count) if (left_count !== right_count) { return right_count - left_count } else if (left.hitCount !== right.hitCount) { return right.hitCount - left.hitCount } return right.id - left.id }) // const stats = languages.hits_stats.replace(/\\$\\{hits}/, resultItems.length) const stats = languages.map((item) => { if (item.lang === currentLanguage) { return `${item.hits_stats.replace(/\\$\\{hits}/, resultItems.length)}` } else { return `${item.hits_stats.replace(/\\$\\{hits}/, resultItems.length)}` } }).join('') container.innerHTML = `${resultItems.map(result => result.item).join('')}` statsItem.innerHTML = `${stats}` window.pjax && window.pjax.refresh(container) } $loadingStatus.textContent = '' } let loadFlag = false const $searchMask = document.getElementById('search-mask') const $searchDialog = document.querySelector('#local-search .search-dialog') // fix safari const fixSafariHeight = () => { if (window.innerWidth < 768) { $searchDialog.style.setProperty('--search-height', window.innerHeight + 'px') } } const openSearch = () => { const bodyStyle = document.body.style bodyStyle.width = '100%' bodyStyle.overflow = 'hidden' btf.animateIn($searchMask, 'to_show 0.5s') btf.animateIn($searchDialog, 'titleScale 0.5s') setTimeout(() => { input.focus() }, 300) if (!loadFlag) { !localSearch.isfetched && localSearch.fetchData() input.addEventListener('input', inputEventFunction) loadFlag = true } // shortcut: ESC document.addEventListener('keydown', function f (event) { if (event.code === 'Escape') { closeSearch() document.removeEventListener('keydown', f) } }) fixSafariHeight() window.addEventListener('resize', fixSafariHeight) } const closeSearch = () => { const bodyStyle = document.body.style bodyStyle.width = '' bodyStyle.overflow = '' btf.animateOut($searchDialog, 'search_close .5s') btf.animateOut($searchMask, 'to_hide 0.5s') window.removeEventListener('resize', fixSafariHeight) } const searchClickFn = () => { btf.addEventListenerPjax(document.querySelector('#search-button > .search'), 'click', openSearch) } const searchFnOnce = () => { document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch) $searchMask.addEventListener('click', closeSearch) if (GLOBAL_CONFIG.localSearch.preload) { localSearch.fetchData() } localSearch.highlightSearchWords(document.getElementById('article-container')) } window.addEventListener('search:loaded', () => { const $loadDataItem = document.getElementById('loading-database') $loadDataItem.nextElementSibling.style.display = 'block' $loadDataItem.remove() }) searchClickFn() searchFnOnce() // pjax window.addEventListener('pjax:complete', () => { !btf.isHidden($searchMask) && closeSearch() localSearch.highlightSearchWords(document.getElementById('article-container')) searchClickFn() }) })","link":"/js/hexo-generator-searchdb-custom/dist/local-search.js"},{"title":"","text":"/** * Generate search database in JSON format * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * No Changes */ 'use strict'; module.exports = function(locals) { const config = this.config; const database = require('./database')(locals, config); return { path: config.search.path, data: JSON.stringify(database) }; };","link":"/js/hexo-generator-searchdb-custom/lib/json_generator.js"},{"title":"","text":"/** * Generate search database * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * Modify w/ adding `language` to search database */ 'use strict'; const { stripHTML } = require('hexo-util'); function savedb(article, config, isPost) { const data = {}; if (article.title) { data.title = article.title; } data.language = article.lang || article.language || 'default'; if (article.path) { data.url = encodeURI(config.root + article.path); } if (config.search.content !== false) { if (config.search.format === 'raw') { data.content = article._content; } else { data.content = article.content.replace(/.*?/g, ''); if (config.search.format === 'striptags') { data.content = stripHTML(data.content); } } } else { data.content = ''; } if (!isPost) { return data; } if (article.categories && article.categories.length > 0) { data.categories = article.categories.map(category => category.name); } if (article.tags && article.tags.length > 0) { data.tags = article.tags.map(tag => tag.name); } return data; } module.exports = function(locals, config) { const searchfield = config.search.field; const database = []; if (searchfield === 'all' || searchfield === 'post') { locals.posts.filter( (post) => post.categories.filter((category) => category.name === 'private').length === 0 ) .each(post => { const data = savedb(post, config, true); database.push(data); }); } if (searchfield === 'all' || searchfield === 'page') { locals.pages.each(page => { const data = savedb(page, config); database.push(data); }); } return database; };","link":"/js/hexo-generator-searchdb-custom/lib/database.js"},{"title":"","text":"/** * Generate search.xml * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * No Changes */ 'use strict'; const path = require('path'); const fs = require('fs'); const nunjucks = require('nunjucks'); const env = new nunjucks.Environment(); const searchTmplSrc = path.join(__dirname, '../templates/search.xml'); const searchTmpl = nunjucks.compile(fs.readFileSync(searchTmplSrc, 'utf8'), env); module.exports = function(locals) { const config = this.config; const database = require('./database')(locals, config); const xml = searchTmpl.render({ articles: database, config : config.search }); return { path: config.search.path, data: xml }; };","link":"/js/hexo-generator-searchdb-custom/lib/xml_generator.js"},{"title":"","text":"'use strict'; const micromatch = require('micromatch'); const template = require('./template'); module.exports = function(locals) { const { config } = this; const { sitemap, skip_render } = config; const { tags: tagsCfg, categories: catsCfg } = sitemap; const skipRenderList = [ '**/*.js', '**/*.css' ]; if (Array.isArray(skip_render)) { skipRenderList.push(...skip_render); } else if (typeof skip_render === 'string') { if (skip_render.length > 0) { skipRenderList.push(skip_render); } } const posts = [].concat(locals.posts.toArray(), locals.pages.toArray()) .filter(post => { return post.sitemap !== false && !isMatch(post.source, skipRenderList); }) .sort((a, b) => { return b.updated - a.updated; }); if (posts.length { return { name: tag.name, slug: tag.slug, length: tag.length, langs: tag.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang), path: tag.path, paths: tag.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang).map(lang => { return `${config.url}/${lang}/${tag.path}`; }), permalink: tag.permalink }; }); // console.log(tags); const categories = locals.categories.toArray().map(category => { return { name: category.name, slug: category.slug, length: category.length, langs: category.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang), path: category.path, paths: category.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang).map(lang => { return `${config.url}/${lang}/${category.path}`; }), permalink: category.permalink }; }); // console.log(categories); const res = template(config); for (const i in res) { res[i].data = res[i].data.render({ config, posts, sNow: new Date(), tags: tagsCfg ? tags : [], categories: catsCfg ? categories : [] }); } return res; }; function isMatch(path, patterns) { return micromatch.isMatch(path, patterns); }","link":"/js/hexo-generator-sitemap-custom/lib/generator.js"},{"title":"","text":"'use strict'; const { url_for } = require('hexo-util'); function relSitemapInject(data) { const { path, rel } = this.config.sitemap; if (!rel || data.match(/rel=['|\"]?sitemap['|\"]?/i)) return; const relSitemap = ``; return data.replace(/(?!).+?/, str => str.replace('', `${relSitemap}`)); } module.exports = relSitemapInject;","link":"/js/hexo-generator-sitemap-custom/lib/rel.js"},{"title":"","text":"'use strict'; const { join, extname } = require('path'); const { readFileSync } = require('fs'); let sitemapTmpl; const { encodeURL } = require('hexo-util'); module.exports = function(config) { const path = config.sitemap.path; const nunjucks = require('nunjucks'); const env = new nunjucks.Environment(null, { autoescape: false, watch: false }); env.addFilter('uriencode', str => { return encodeURL(str); }); // Extract date from datetime env.addFilter('formatDate', input => { return input.toISOString().substring(0, 10); }); function temp(p) { let sitemapSrc; switch (extname(p)) { case '.xml': sitemapSrc = config.sitemap.template || join(__dirname, '../sitemap.xml'); break; case '.txt': sitemapSrc = config.sitemap.template_txt || join(__dirname, '../sitemap.txt'); break; } sitemapTmpl = nunjucks.compile(readFileSync(sitemapSrc, 'utf8'), env); return { path: p, data: sitemapTmpl }; } const res = []; switch (typeof path) { case 'string': res.push(temp(path)); break; case 'object': for (const p of path) { res.push(temp(p)); } break; } return res; };","link":"/js/hexo-generator-sitemap-custom/lib/template.js"}],"posts":[{"title":"Highlight.js Test Code","text":"이 게시물은 한글과 영어로 동시에 작성되어 있습니다. To see in English, please change the language via the right-bottom cog button. This post is written in both Korean and English. 한글로 보시려면 페이지 우측 하단의 톱니바퀴 버튼을 눌러 언어를 변경하세요. references[1][2] This article is for testing my blog’s customized highlight color scheme. All the example source codes are scratched from highlight.js official site. Supported languages and their abbreviations can be found from highlight.js github page. If you want to test for your own blog, use this markdown file rather than copying it manually. 이 게시물은 제 블로그의 highlight color scheme을 테스트하기 위한 목적으로 작성되었습니다. 모든 예제 코드는 highlight.js 공식 사이트에서 그대로 긁어온 자료입니다. 지원하는 프로그래밍 언어의 종류와 줄임말은 highlight.js 깃헙 페이지에서 확인할 수 있습니다. 만일 직접 테스트해보고 싶으시다면, 공홈에서 수동으로 복붙하지 마시고 이 마크다운 파일을 다운받아 사용하세요. HTML, XML 12345678910111213&lt;!DOCTYPE html&gt;&lt;title&gt;Title&lt;/title&gt;&lt;style&gt;body {width: 500px;}&lt;/style&gt;&lt;script type=&quot;application/javascript&quot;&gt; function $init() {return true;}&lt;/script&gt;&lt;body&gt; &lt;p checked class=&quot;title&quot; id='title'&gt;Title&lt;/p&gt; &lt;!-- here goes the rest of the page --&gt;&lt;/body&gt; Bash 1234567891011121314151617#!/bin/bash###### CONFIGACCEPTED_HOSTS=&quot;/root/.hag_accepted.conf&quot;BE_VERBOSE=falseif [ &quot;$UID&quot; -ne 0 ]then echo &quot;Superuser rights required&quot; exit 2figenApacheConf(){ echo -e &quot;# Host ${HOME_DIR}$1/$2 :&quot;}echo '&quot;quoted&quot;' | tr -d \\&quot; &gt; text.txt C++ 1234567891011121314#include &lt;iostream&gt;int main(int argc, char *argv[]) { /* An annoying &quot;Hello World&quot; example */ for (auto i = 0; i &lt; 0xFFFF; i++) cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; endl; char c = '\\n'; unordered_map &lt;string, vector&lt;string&gt; &gt; m; m[&quot;key&quot;] = &quot;\\\\\\\\&quot;; // this is an error return -2e3 + 12l;} C# 1234567891011121314151617using System.IO.Compression;#pragma warning disable 414, 3021namespace MyApplication{ [Obsolete(&quot;...&quot;)] class Program : IInterface { public static List&lt;int&gt; JustDoIt(int count) { Span&lt;int&gt; numbers = stackalloc int[length]; Console.WriteLine($&quot;Hello {Name}!&quot;); return new List&lt;int&gt;(new int[] { 1, 2, 3 }) } }} CSS 12345678910111213141516@font-face { font-family: Chunkfive; src: url('Chunkfive.otf');}body, .usertext { color: #F0F0F0; background: #600; font-family: Chunkfive, sans; --heading-1: 30px/32px Helvetica, sans-serif;}@import url(print.css);@media print { a[href^=http]::after { content: attr(href) }} Markdown 12345678910111213141516171819202122# hello worldyou can write text [with links](http://example.com) inline or [link references][1].* one _thing_ has *em*phasis* two __things__ are **bold**[1]: http://example.com---hello world===========&lt;this_is inline=&quot;xml&quot;&gt;&lt;/this_is&gt;&gt; markdown is so cool so are code segments1. one thing (yeah!)2. two thing `i can write code`, and `more` wipee! Diff 123456789101112131415161718192021222324252627282930Index: languages/ini.js===================================================================--- languages/ini.js (revision 199)+++ languages/ini.js (revision 200)@@ -1,8 +1,7 @@ hljs.LANGUAGES.ini = { case_insensitive: true,- defaultMode:- {+ defaultMode: { contains: ['comment', 'title', 'setting'], illegal: '[^\\\\s]' },*** /path/to/original timestamp--- /path/to/new timestamp****************** 1,3 ****--- 1,9 ----+ This is an important+ notice! It should+ therefore be located at+ the beginning of this+ document!! compress the size of the! changes. It is important to spell Ruby 12345678910111213# The Greeter classclass Greeter def initialize(name) @name = name.capitalize end def salute puts &quot;Hello #{@name}!&quot; endendg = Greeter.new(&quot;world&quot;)g.salute Go 123456789101112package mainimport &quot;fmt&quot;func main() { ch := make(chan float64) ch &lt;- 1.0e10 // magic number x, ok := &lt;- ch defer fmt.Println(`exitting now\\`) go println(len(&quot;hello world!&quot;)) return} TOML, INI 123456789101112; boilerplate[package]name = &quot;some_name&quot;authors = [&quot;Author&quot;]description = &quot;This is \\a description&quot;[[lib]]name = ${NAME}default = Trueauto = nocounter = 1_000 Java 12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract strictfp class L2Char extends L2Object { public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) { _ai = null; log(&quot;Should not be called&quot;); if (1 &gt; 5) { // wtf!? return; } }} JavaScript 123456789101112131415161718192021function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=&quot;${cls}&quot;`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i &lt; classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log('undefined'); } return ( &lt;div&gt; &lt;web-component&gt;{block}&lt;/web-component&gt; &lt;/div&gt; )}export $initHighlight; JSON 123456789101112[ { &quot;title&quot;: &quot;apples&quot;, &quot;count&quot;: [12000, 20000], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }, { &quot;title&quot;: &quot;oranges&quot;, &quot;count&quot;: [17500, null], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }] Kotlin 1234567891011121314151617181920212223242526272829import kotlinx.serialization.Serializableimport kotlin.random.Randominterface Building@Serializableclass House( private val rooms: Int? = 3, val name: String = &quot;Palace&quot;) : Building { var residents: Int = 4 get() { println(&quot;Current residents: $field&quot;) return field } fun burn(evacuation: (people: Int) -&gt; Boolean) { rooms ?: return if (evacuation((0..residents).random())) residents = 0 }}fun main() { val house = House(name = &quot;Skyscraper 1&quot;) house.burn { Random.nextBoolean() }} Less 123456789101112131415161718192021222324252627@import &quot;fruits&quot;;@rhythm: 1.5em;@media screen and (min-resolution: 2dppx) { body {font-size: 125%}}section &gt; .foo + #bar:hover [href*=&quot;less&quot;] { margin: @rhythm 0 0 @rhythm; padding: calc(5% + 20px); background: #f00ba7 url(http://placehold.alpha-centauri/42.png) no-repeat; background-image: linear-gradient(-135deg, wheat, fuchsia) !important ; background-blend-mode: multiply;}@font-face { font-family: /* ? */ 'Omega'; src: url('../fonts/omega-webfont.woff?v=2.0.2');}.icon-baz::before { display: inline-block; font-family: &quot;Omega&quot;, Alpha, sans-serif; content: &quot;\\f085&quot;; color: rgba(98, 76 /* or 54 */, 231, .75);} Lua 1234567891011121314151617181920212223242526272829303132--[[Simple signal/slot implementation]]local signal_mt = { __index = { register = table.insert }}function signal_mt.__index:emit(... --[[ Comment in params ]]) for _, slot in ipairs(self) do slot(self, ...) endendlocal function create_signal() return setmetatable({}, signal_mt)end-- Signal testlocal signal = create_signal()signal:register(function(signal, ...) print(...)end)signal:emit('Answer to Life, the Universe, and Everything:', 42)--[==[ [=[ [[Nested ]]multi-line ]=]comment ]==][==[ Nested[=[ multi-line[[ string]] ]=] ]==] Makefile 12345678910111213# MakefileBUILDDIR = _buildEXTRAS ?= $(BUILDDIR)/extras.PHONY: main cleanmain: @echo &quot;Building main facility...&quot; build_main $(BUILDDIR)clean: rm -rf $(BUILDDIR)/* Perl 1234567891011121314151617181920212223242526272829303132333435363738394041# loads objectsub load{ my $flds = $c-&gt;db_load($id,@_) || do { Carp::carp &quot;Can`t load (class: $c, id: $id): '$!'&quot;; return undef }; my $o = $c-&gt;_perl_new(); $id12 = $id / 24 / 3600; $o-&gt;{'ID'} = $id12 + 123; #$o-&gt;{'SHCUT'} = $flds-&gt;{'SHCUT'}; my $p = $o-&gt;props; my $vt; $string =~ m/^sought_text$/; $items = split //, 'abc'; $string //= &quot;bar&quot;; for my $key (keys %$p) { if(${$vt.'::property'}) { $o-&gt;{$key . '_real'} = $flds-&gt;{$key}; tie $o-&gt;{$key}, 'CMSBuilder::Property', $o, $key; } } $o-&gt;save if delete $o-&gt;{'_save_after_load'}; # GH-117 my $g = glob(&quot;/usr/bin/*&quot;); return $o;}__DATA__@@ layouts/default.html.ep&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt;&lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;%= content %&gt;&lt;/body&gt;&lt;/html&gt;__END__=head1 NAMEPOD till the end of file Objective-C 12345678910111213#import &lt;UIKit/UIKit.h&gt;#import &quot;Dependency.h&quot;@protocol WorldDataSource@optional- (NSString*)worldName;@required- (BOOL)allowsToLive;@end@property (nonatomic, readonly) NSString *title;- (IBAction) show;@end PHP 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172require_once 'Zend/Uri/Http.php';namespace Location\\Web;interface Factory{ static function _factory();}abstract class URI extends BaseURI implements Factory{ abstract function test(); public static $st1 = 1; const ME = &quot;Yo&quot;; var $list = NULL; private $var; /** * Returns a URI * * @return URI */ static public function _factory($stats = array(), $uri = 'http') { echo __METHOD__; $uri = explode(':', $uri, 0b10); $schemeSpecific = isset($uri[1]) ? $uri[1] : ''; $desc = 'Multiline description'; // Security check if (!ctype_alnum($scheme)) { throw new Zend_Uri_Exception('Illegal scheme'); } $this-&gt;var = 0 - self::$st; $this-&gt;list = list(Array(&quot;1&quot;=&gt; 2, 2=&gt;self::ME, 3 =&gt; \\Location\\Web\\URI::class)); return [ 'uri' =&gt; $uri, 'value' =&gt; null, ]; }}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};enum Foo: string { case Test = 'test';}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};echo URI::ME . URI::$st1;__halt_compiler () ; dataheredataheredatahere */datahere Python 123456789101112@requires_authorization(roles=[&quot;ADMIN&quot;])def somefunc(param1='', param2=0): r'''A docstring''' if param1 &gt; param2: # interesting print 'Gre\\'ater' return (param2 - param1 + 1 + 0b10l) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' R 12345678910111213141516171819202122232425262728293031323334353637383940414243444546require(stats)#' Compute different averages#'#' @param x \\code{numeric} vector of sample data#' @param type \\code{character} vector of length 1 specifying the average type#' @return \\code{centre} returns the sample average according to the chosen method.#' @examples#' centre(rcauchy(10), &quot;mean&quot;)#' @exportcentre &lt;- function(x, type) { switch(type, mean = mean(x), median = median(x), trimmed = mean(x, trim = .1))}x &lt;- rcauchy(10)centre(x, &quot;mean&quot;)library(ggplot2)models &lt;- tibble::tribble( ~model_name, ~ formula, &quot;length-width&quot;, Sepal.Length ~ Petal.Width + Petal.Length, &quot;interaction&quot;, Sepal.Length ~ Petal.Width * Petal.Length)iris %&gt;% nest_by(Species) %&gt;% left_join(models, by = character()) %&gt;% rowwise(Species, model_name) %&gt;% mutate(model = list(lm(formula, data = data))) %&gt;% summarise(broom::glance(model))#&gt; `summarise()` regrouping output by 'Species', 'model_name' (override with `.groups` argument)#&gt; # A tibble: 6 x 13#&gt; # Groups: Species, model_name [6]#&gt; Species model_name r.squared adj.r.squared sigma statistic p.value df#&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;#&gt; 1 setosa length-wi… 0.112 0.0739 0.339 2.96 6.18e- 2 3#&gt; 2 setosa interacti… 0.133 0.0760 0.339 2.34 8.54e- 2 4#&gt; 3 versic… length-wi… 0.574 0.556 0.344 31.7 1.92e- 9 3#&gt; 4 versic… interacti… 0.577 0.549 0.347 20.9 1.11e- 8 4#&gt; 5 virgin… length-wi… 0.747 0.736 0.327 69.3 9.50e-15 3#&gt; 6 virgin… interacti… 0.757 0.741 0.323 47.8 3.54e-14 4#&gt; # … with 5 more variables: logLik &lt;dbl&gt;, AIC &lt;dbl&gt;, BIC &lt;dbl&gt;, deviance &lt;dbl&gt;,#&gt; # df.residual &lt;int&gt; Rust 12345678910111213141516#[derive(Debug)]pub enum State { Start, Transient, Closed,}impl From&lt;&amp;'a str&gt; for State { fn from(s: &amp;'a str) -&gt; Self { match s { &quot;start&quot; =&gt; State::Start, &quot;closed&quot; =&gt; State::Closed, _ =&gt; unreachable!(), } }} SCSS 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273@import &quot;compass/reset&quot;;// variables$colorGreen: #008000;$colorGreenDark: darken($colorGreen, 10);@mixin container { max-width: 980px;}// mixins with parameters@mixin button($color:green) { @if ($color == green) { background-color: #008000; } @else if ($color == red) { background-color: #B22222; }}button { @include button(red);}div,.navbar,#header,input[type=&quot;input&quot;] { font-family: &quot;Helvetica Neue&quot;, Arial, sans-serif; width: auto; margin: 0 auto; display: block;}.row-12 &gt; [class*=&quot;spans&quot;] { border-left: 1px solid #B5C583;}// nested definitionsul { width: 100%; padding: { left: 5px; right: 5px; } li { float: left; margin-right: 10px; .home { background: url('http://placehold.it/20') scroll no-repeat 0 0; } }}.banner { @extend .container;}a { color: $colorGreen; &amp;:hover { color: $colorGreenDark; } &amp;:visited { color: #c458cb; }}@for $i from 1 through 5 { .span#{$i} { width: 20px*$i; }}@mixin mobile { @media screen and (max-width : 600px) { @content; }} Shell Session 1234567891011$ echo $EDITORvim$ git checkout mainSwitched to branch 'main'Your branch is up-to-date with 'origin/main'.$ git pushEverything up-to-date$ echo 'All&gt; done!'Alldone! SQL 123456789101112CREATE TABLE &quot;topic&quot; ( &quot;id&quot; integer NOT NULL PRIMARY KEY, &quot;forum_id&quot; integer NOT NULL, &quot;subject&quot; varchar(255) NOT NULL);ALTER TABLE &quot;topic&quot;ADD CONSTRAINT forum_id FOREIGN KEY (&quot;forum_id&quot;)REFERENCES &quot;forum&quot; (&quot;id&quot;);-- Initialsinsert into &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)values (2, 'D''artagnian'); Swift 123456789101112131415import Foundation@objc class Person: Entity { var name: String! var age: Int! init(name: String, age: Int) { /* /* ... */ */ } // Return a descriptive string for this person func description(offset: Int = 0) -&gt; String { return &quot;\\(name) is \\(age + offset) years old&quot; }} YAML 123456789101112131415161718192021222324252627282930313233343536373839---# commentstring_1: &quot;Bar&quot;string_2: 'bar'string_3: barinline_keys_ignored: sompath/name/file.jpgkeywords_in_yaml: - true - false - TRUE - FALSE - 21 - 21.0 - !!str 123&quot;quoted_key&quot;: &amp;foobar bar: foo foo: &quot;foo&quot;: barreference: *foobarmultiline_1: | Multiline Stringmultiline_2: &gt; Multiline Stringmultiline_3: &quot; Multiline string &quot;ansible_variables: &quot;foo {{variable}}&quot;array_nested:- a- b: 1 c: 2- b- comment TypeScript 1234567891011121314class MyClass { public static myValue: string; constructor(init: string) { this.myValue = init; }}import fs = require(&quot;fs&quot;);module MyModule { export interface MyInterface extends Other { myProperty: any; }}declare magicNumber number;myArray.forEach(() =&gt; { }); // fat arrow syntax Visual Basic .NET 123456789101112131415161718192021222324252627282930313233343536373839404142Imports SystemImports System.IO#Const DEBUG = TrueNamespace Highlighter.Test ''' &lt;summary&gt;This is an example class.&lt;/summary&gt; Public Class Program Protected Shared hello As Integer = 3 Private Const ABC As Boolean = False#Region &quot;Code&quot; ' Cheers! &lt;STAThread()&gt; _ Public Shared Sub Main(ByVal args() As String, ParamArray arr As Object) Handles Form1.Click On Error Resume Next If ABC Then While ABC : Console.WriteLine() : End While For i As Long = 0 To 1000 Step 123 Try System.Windows.Forms.MessageBox.Show(CInt(&quot;1&quot;).ToString()) Catch ex As Exception ' What are you doing? Well... Dim exp = CType(ex, IOException) REM ORZ Return End Try Next Else Dim l As New System.Collections.List&lt;String&gt;() SyncLock l If TypeOf l Is Decimal And l IsNot Nothing Then RemoveHandler button1.Paint, delegate End If Dim d = New System.Threading.Thread(AddressOf ThreadProc) Dim a = New Action(Sub(x, y) x + y) Static u = From x As String In l Select x.Substring(2, 4) Where x.Length &gt; 0 End SyncLock Do : Laugh() : Loop Until hello = 4 End If End Sub#End Region End ClassEnd Namespace Highlight.js official site (link) ↩︎ Highlight.js supported languages (link) ↩︎","link":"/posts/en-ko/highlight-test-code/"},{"title":"Solving `punycode` DeprecationWarning in Hexo","text":"Introduction I started seeing punycode DeprecationWarnings whenever I served or deployed my Hexo blog from some time: (node:39714) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead. After some digging, I found that this issue occurs when using Node.js version 21. I wasn’t keen on downgrading, so I fought my way through and managed to resolve it. Conclusion Long story short, the issue was caused by outdated dependencies in some plugins used in my Hexo. [Case 1] A manually created package had an outdated devDependency [Solution 1-1] Update the dependencies manually in the package’s package.json [Solution 1-2] If devDependencies are unnecessary, remove them entirely EX) A customized hexo-generator-searchdb plugin [Case]I had made several modifications to my blog’s setup to support a bilingual (English/Korean) environment. One of these tweaks was modifying the search.xml generation to store the post’s language, and use it for search. If the current site language is Korean, Korean-written posts have highest search priority.To achieve this, I copied the entire hexo-generator-searchdb source code into source/js/ and used it as a local package under the name hexo-generator-searchdb-custom.Then change the package setting like this:123&quot;dependencies&quot;: { &quot;hexo-generator-searchdb&quot;: &quot;file:source/js/hexo-generator-searchdb-custom&quot;}[Problem]The problem was that running npm install also installed devDependencies of the local package.IDK why, but the default --production flag which prevents devDependencies from being installed when using external packages didn’t seem to apply to local packages.Anywhy, this package included eslint@7.32.0, which still used punycode in the old fashion.[Solution]Since I didn’t actually need the devDependencies, I simply deleted them all from the local package.Alternatively, I could have updated hexo-generator-searchdb-custom/package.json as follows:1234&quot;devDependencies&quot;: { &quot;eslint&quot;: &quot;^9.18.0&quot;, &quot;@next-theme/eslint-config&quot;: &quot;^0.0.4&quot;} [Case 2] An outdated package in dependencies within installed package [Solution 2-1] Use override to enforce a newer dependency version [Solution 2-2] Modify the punycode-related code in node_modulesNot ideal, but sometimes there's no other way... EX) hexo-renderer-markdown-it plugin [Case] Right now, my blog renders Markdown using the hexo-renderer-markdown-it plugin. Since I use KaTex for math rendering, this plugin is recommended over the default hexo-renderer-markdown[1]. And the hexo-renderer-markdown-it plugin uses markdown-it@13.0.2. [Problem] markdown-it@13.0.2 loads punycode in old way: Instead of const punycode = require('punycode'), it should use const punycode = require('punycode/')[2]. Thus I should override the dependency to a newer version, or update the punycode-related code in node_modules by myself. The real problem was that updating markdown-it to version 14.0.0+ broke hexo-renderer-markdown-it… I didn't want to spend time fixing it.. bc I've never studied Node.js...;-; [Solution] So I manually edited node_modules/hexo-renderer-markdown-it/node_modules/markdown-it/lib/index.js: 12// const punycode = require('punycode'); // Originalconst punycode = require('punycode/'); // Fixed What is the authors feeling when the problem solved only with a single slash? (1000) Since the above code use punycode in node_modules, you’ll need to run npm install punycode --save if you haven’t already. To avoid manually editing it every time, you can automate it using a postinstall script (see below). How I Got Resolved The conclusion is just a conclusion, and I’m sure that most will get the deprecation issue from the other packages. Therefore, I wrote down the process of how I solved the problem in the stream of consciousness. Check Status If I remember correctly, the first thing I did was to check the version of Node.js. 12$ node -vv21.7.3 Downgrading might have fixed it, but my pride wouldn’t allow it. (Not at all actually. I just thought the latter will be better since I don’t have any knowledge about the difference between v20 and v21 in Node.js) punycode vs. punycode/ Googling “npm punycode deprecation” and so on led me to realize that some packages that use punycode cause the warning due to the old way of importing it. So, if you read the punycode GitHub readme[2:1], it roughly says: Install punycode Use require('punycode/'), not require('punycode') to avoid the warning. Honestly, the two lines aren’t that different in my eyes. I just thought as they’re similar to a gap between from.utils import * and from.utils import * in python. Then I skipped it. haha punycode dependency Anyway, for that reason, I tried to find all modules that use punycode in my project. Let’s go to the root directory and look for the inheritance of the punycode with npm ls punycode. 1234567$ npm ls punycodehexo-blog@0.0.1 /root/directory/├─┬ hexo-generator-searchdb-custom@1.4.1 -&gt; /root/directory/node_modules/hexo-generator-searchdb-custom│ └─┬ eslint@7.32.0│ └─┬ ajv@cant.remember.0│ └─┬ uri-js@cant.remember.0│ └── punycode@cant.remember.0 I roughly got those results. (I don’t remember the exact version numbers) As you can see, hexo-generator-searchdb-custom that uses eslint that uses uri-js that uses punycode was the problem. lol Since I already had found lots of googling results about eslint, ajv, or uri-js packages, I also runned npm ls [package-name] for them to find the punycode dependency. In sum, I found the old-versioned eslint dependency in two packages: hexo-generator-searchdb-custom hexo-generator-sitemap-custom Fix (1) At first, I opened the package.json of each package because I thought I could update the versions of these packages to the latest. But what I found was that both of them had eslint as a devDependencies, not dependencies. As you can imagine from its name, both packages are the local packages that I customized from the original plugins. I had to fix almost all of the existing packages overall, so I just replicated them locally, modified them, and used them as below, and that caused the problem. 1234&quot;dependencies&quot;: { &quot;hexo-generator-searchdb&quot;: &quot;file:source/js/hexo-generator-searchdb-custom&quot;, &quot;hexo-generator-sitemap&quot;: &quot;file:source/js/hexo-generator-sitemap-custom&quot;} IDK why but when I run npm install, it also installed the devDependencies of the local package. I guess the --production option of npm install doesn’t work for local packages. Gave up on finding the exact reason nor the proper solution I didn’t actually need the devDependencies since I just copied the original package for convenience. So I just deleted devDependencies inside package.json from each local package. Then run below commands to reinstall whole packages: 123$ rm -r node_modules$ rm package-lock.json$ npm install Fix (2) I thought it would be solved then… but Warning appeared again, and I was about to throw my laptop away for real since it took me two days until here… So I just emptied my mind and decided to find all js files that use punycode with find command. its quite ignorant, but I didn’t have any other ideas:D 12$ cd node_modules$ find . -type f -name &quot;*.js&quot; -exec grep -H &quot;punycode&quot; {} \\; In the middle of bunch of results, there was a code like this: ./hexo-renderer-markdown-it/node_modules/markdown-it/lib/index.js: var punycode = require('punycode'); x Since I found one, I opened the file with the intention of modifying it one by one from here. The file lib/index.js of markdown-it@13.0.2 installed inside hexo-renderer-markdown-it seemed to use punycode the old way. So I just add a slash to the end and saved it: 12// const punycode = require('punycode'); // Originalconst punycode = require('punycode/'); // Fixed Then I ran hexo server -o again, and this time, it said punycode is not installed. This is because punycode/ implies the punycode in the node_modules, so I installed it with npm i punycode --save. Finally, I ran the server again, and the DeprecationWarning didn’t appear anymore. Phew! I don’t have to throw my laptop away anymore! Postinstall Script By the way, modifying the code in node_modules was a bit annoying, and also was not seem to be a good practice. So I searched a little and soon found the usage of postinstall script. It is reallllllly simple. Install the patch-package package. 1$ npm install patch-package --save-dev Find the code that you want to fix in node_modules and fix it. Already fixed, so skip Add the postinstall script to package.json. 123&quot;scripts&quot;: { &quot;postinstall&quot;: &quot;patch-package&quot;} Save the modified file as a patch 1$ npx patch-package [package-name] Caution) Since I modified the package inside the package, if I run npx patch-package hexo-renderer-markdown-it, a message saying that ⁉️ There don't appear to be any changes. will appear. In this case, you should run something like npx patch-package hexo-renderer-markdown-it/markdown-it instead. Done! During the 4, the patch file will be created in patches directory. Now you don’t need to manually modify it anymore since the patches in that folder will be applied automatically when you run npm install. P.S. Can’t believe to had such a long and hard time just for a single warning message… I really shouldn’t dig up Node.js. No talent.🫠 I also tried the “overrides” method to update the markdown-it version later, but it didn’t work. It’ll be good to try overriding since the method is really easy[3]. Butterfly document - Theme Configuration # Math (link) ↩︎ Github - mathiasbynens/punycode.js (link) ↩︎ ↩︎ npm Docs - package.json (link) ↩︎","link":"/posts/en/Solving-DeprecationWarning-in-Hexo/"},{"title":"KaTeX Test Code","text":"Introduction Why KaTeX KaTeX\\KaTeXKATE​X is a fast, easy-to-use JavaScript library for TeX math rendering on the web. hexo-theme-butterfly recommends to use KaTeX rather than MathJax for better performance. KaTex supports copy and paste of the rendered math expressions. Reference All the #Supported Functions content is copied from upupming’s blog[1][2]. The auther[1:1] states that this is the revised version of the original content from KaTeX Supported Functions[3]. Note I made some changes to the original content[2:1] Change #Macros, #HTML, and #Color section to avoid the conflict with markdown syntax. Read the note block for more information in each section. Change some expressions according to the KaTeX official site[3:1]. Add some expressions that is not included in the original content[2:2].Probably because the upgraded KaTex Documentation was not reflected. Supported Functions Accents a′a'a′ a' a~\\tilde{a}a~ \\tilde{a} g˚\\mathring{g}g˚​ \\mathring{g} a′′a''a′′ a'' ac~\\widetilde{ac}ac \\widetilde{ac} AB⏠\\overgroup{AB}AB \\overgroup{AB} a′a^{\\prime}a′ a^{\\prime} AB~\\utilde{AB}AB​ \\utilde{AB} AB⏡\\undergroup{AB}AB​ \\undergroup{AB} aˊ\\acute{a}aˊ \\acute{a} F⃗\\vec{F}F \\vec{F} AB⇒\\Overrightarrow{AB}AB \\Overrightarrow{AB} yˉ\\bar{y}yˉ​ \\bar{y} AB←\\overleftarrow{AB}AB \\overleftarrow{AB} AB→\\overrightarrow{AB}AB \\overrightarrow{AB} a˘\\breve{a}a˘ \\breve{a} AB←\\underleftarrow{AB}AB​ \\underleftarrow{AB} AB→\\underrightarrow{AB}AB​ \\underrightarrow{AB} aˇ\\check{a}aˇ \\check{a} ac↼\\overleftharpoon{ac}ac \\overleftharpoon{ac} ac⇀\\overrightharpoon{ac}ac \\overrightharpoon{ac} a˙\\dot{a}a˙ \\dot{a} AB↔\\overleftrightarrow{AB}AB \\overleftrightarrow{AB} AB⏞\\overbrace{AB}AB \\overbrace{AB} a¨\\ddot{a}a¨ \\ddot{a} AB↔\\underleftrightarrow{AB}AB​ \\underleftrightarrow{AB} AB⏟\\underbrace{AB}AB​ \\underbrace{AB} aˋ\\grave{a}aˋ \\grave{a} AB‾\\overline{AB}AB \\overline{AB} ABundefined\\overlinesegment{AB}AB \\overlinesegment{AB} θ^\\hat{\\theta}θ^ \\hat{\\theta} AB‾\\underline{AB}AB​ \\underline{AB} ABundefined\\underlinesegment{AB}AB​ \\underlinesegment{AB} ac^\\widehat{ac}ac \\widehat{ac} acˇ\\widecheck{ac}ac \\widecheck{ac} X‾\\underbar{X}X​ \\underbar{X} Accent functions inside \\text{…} aˊ\\text{\\'{a}}aˊ \\'{a} a˜\\text{\\~{a}}a˜ \\~{a} a˙\\text{\\.{a}}a˙ \\.{a} a˝\\text{\\H{a}}a˝ \\H{a} aˋ\\text{\\`{a}}aˋ \\`{a} aˉ\\text{\\={a}}aˉ \\={a} a¨\\text{\\&quot;{a}}a¨ \\&quot;{a} aˇ\\text{\\v{a}}aˇ \\v{a} aˆ\\text{\\^{a}}aˆ \\^{a} a˘\\text{\\u{a}}a˘ \\u{a} a˚\\text{\\r{a}}a˚ \\r{a} See also letters Delimiters ( )(~)( ) ( ) ( )\\lparen~\\rparen( ) \\lparen ~~~~ \\rparen ⌈ ⌉⌈~⌉⌈ ⌉ ⌈ ⌉ ⌈ ⌉\\lceil~\\rceil⌈ ⌉ \\lceil ~~~~~ \\rceil ↑\\uparrow↑ \\uparrow [ ][~][ ] [ ] [ ]\\lbrack~\\rbrack[ ] \\lbrack ~~~~ \\rbrack ⌊ ⌋⌊~⌋⌊ ⌋ ⌊ ⌋ ⌊ ⌋\\lfloor~\\rfloor⌊ ⌋ \\lfloor ~~~~~ \\rfloor ↓\\downarrow↓ \\downarrow {}\\{ \\}{} \\{ \\} {}\\lbrace \\rbrace{} \\lbrace ~~~~ \\rbrace ⎰⎱⎰⎱⎰⎱ ⎰⎱ ⎰⎱\\lmoustache \\rmoustache⎰⎱ \\lmoustache ~~~~ \\rmoustache ↕\\updownarrow↕ \\updownarrow ⟨ ⟩⟨~⟩⟨ ⟩ ⟨ ⟩ ⟨ ⟩\\langle~\\rangle⟨ ⟩ \\langle ~~~~ \\rangle ⟮ ⟯⟮~⟯⟮ ⟯ ⟮ ⟯ ⟮ ⟯\\lgroup~\\rgroup⟮ ⟯ \\lgroup ~~~~~ \\rgroup ⇑\\Uparrow⇑ \\Uparrow ∣\\vert∣ | ∣\\vert∣ \\vert ┌┐┌ ┐┌┐ ┌ ┐ ⌜⌝\\ulcorner \\urcorner┌┐ \\ulcorner ~~~~~ \\urcorner ⇓\\Downarrow⇓ \\Downarrow ∥\\Vert∥ \\| ∥\\Vert∥ \\Vert └┘└ ┘└┘ └ ┘ ⌞⌟\\llcorner \\lrcorner└┘ \\llcorner ~~~~~ \\lrcorner ⇕\\Updownarrow⇕ \\Updownarrow ∣ ∣\\lvert~\\rvert∣ ∣ \\lvert ~~~~ \\rvert ∥ ∥\\lVert~\\rVert∥ ∥ \\lVert ~~~~~~ \\rVert \\left. \\right. \\\\backslash\\ \\backslash ⟨ ⟩\\lang~\\rang⟨ ⟩ \\lang ~~~~~ \\rang &lt; &gt;\\lt~\\gt&lt; &gt; \\lt \\gt [[]][[ ]][[]] ⟦ ⟧ ⟦ ⟧\\llbracket~\\rrbracket[[ ]] \\llbracket ~~~~~ \\rrbracket ⦃ ⦄\\lBrace~\\rBrace{[ ]} \\lBrace ~~~~~~~ \\rBrace Delimiter Sizing (AB)\\left(\\LARGE{AB}\\right)(AB) \\left(\\LARGE{AB}\\right) (((((( \\big( \\Big( \\bigg( \\Bigg(((((( ( \\big( \\Big( \\bigg( \\Bigg( \\left \\big \\bigl \\bigm \\bigr \\middle \\Big \\Bigl \\Bigm \\Bigr \\right \\bigg \\biggl \\biggm \\biggr \\Bigg \\Biggl \\Biggm \\Biggr Environments abcd\\begin{matrix} a &amp; b \\\\ c &amp; d \\end{matrix}ac​bd​ \\begin{matrix} a &amp; b \\\\ c &amp; d\\end{matrix} abcd\\begin{array}{cc}a &amp; b\\\\c &amp; d\\end{array}ac​bd​ \\begin{array}{cc} a &amp; b \\\\ c &amp; d\\end{array} (abcd)\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix}(ac​bd​) \\begin{pmatrix} a &amp; b \\\\ c &amp; d\\end{pmatrix} [abcd]\\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix}[ac​bd​] \\begin{bmatrix} a &amp; b \\\\ c &amp; d\\end{bmatrix} ∣abcd∣\\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix}​ac​bd​​ \\begin{vmatrix} a &amp; b \\\\ c &amp; d\\end{vmatrix} ∥abcd∥\\begin{Vmatrix} a &amp; b \\\\ c &amp; d \\end{Vmatrix}​ac​bd​​ \\begin{Vmatrix} a &amp; b \\\\ c &amp; d\\end{Vmatrix} {abcd}\\begin{Bmatrix} a &amp; b \\\\ c &amp; d \\end{Bmatrix}{ac​bd​} \\begin{Bmatrix} a &amp; b \\\\ c &amp; d\\end{Bmatrix} abcdefghi\\def\\arraystretch{1.5}\\begin{array}{c:c:c} a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i \\end{array}adg​beh​cfi​​ \\def\\arraystretch{1.5} \\begin{array}{c:c:c} a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i\\end{array} x={aif bcif dx = \\begin{cases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d \\end{cases}x={ac​if bif d​ \\begin{cases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d\\end{cases} aif bcif d}⇒…\\begin{rcases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d \\end{rcases}⇒…ac​if bif d​}⇒… \\begin{rcases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d\\end{rcases}⇒… abcd\\begin{smallmatrix} a &amp; b \\\\ c &amp; d \\end{smallmatrix}ac​bd​ \\begin{smallmatrix} a &amp; b \\\\ c &amp; d\\end{smallmatrix} ∑i∈Λ0&lt;j&lt;n\\sum_{\\begin{subarray}{l} i\\in\\Lambda \\\\ 0&lt;j&lt;n \\end{subarray}}∑i∈Λ0&lt;j&lt;n​​ \\sum_{\\begin{subarray}{l} i\\in\\Lambda \\\\ 0&lt;j&lt;n\\end{subarray}} a=b+cd+e=f\\begin{aligned} a&amp;=b+c \\\\ d+e&amp;=f \\end{aligned}ad+e​=b+c=f​ \\begin{aligned} a&amp;=b+c \\\\ d+e&amp;=f\\end{aligned} 10x+3y=23x+13y=4\\begin{alignedat}{2}10&amp;x+&amp;3&amp;y=2\\\\3&amp;x+&amp;13&amp;y=4\\end{alignedat}103​x+x+​313​y=2y=4​ \\begin{alignedat}{2} 10&amp;x+ &amp;3&amp;y = 2 \\\\ 3&amp;x+&amp;13&amp;y = 4\\end{alignedat} a=be=b+c\\begin{gathered} a=b \\\\ e=b+c \\end{gathered}a=be=b+c​ \\begin{gathered} a=b \\\\ e=b+c\\end{gathered} … … KaTeX also supports darray and dcases. Acceptable line separators include: \\\\, \\cr, \\\\[distance], and \\cr[distance]. Distance can be written with any of the KaTeX units. The {array} environment supports | and : vertical separators. The {array} environment does not yet support \\cline or \\multicolumn. HTML NOT WORKING IN HEXO \\href\\href{https://katex.org/}{\\KaTeX}\\href \\href{https://katex.org/}{\\KaTeX} \\url\\url{https://katex.org/}\\url \\url{https://katex.org/} Letters and Unicode Greek Letters A\\AlphaA \\Alpha B\\BetaB \\Beta Γ\\GammaΓ \\Gamma Δ\\DeltaΔ \\Delta E\\EpsilonE \\Epsilon Z\\ZetaZ \\Zeta H\\EtaH \\Eta Θ\\ThetaΘ \\Theta I\\IotaI \\Iota K\\KappaK \\Kappa Λ\\LambdaΛ \\Lambda M\\MuM \\Mu N\\NuN \\Nu Ξ\\XiΞ \\Xi O\\OmicronO \\Omicron Π\\PiΠ \\Pi P\\RhoP \\Rho Σ\\SigmaΣ \\Sigma T\\TauT \\Tau Υ\\UpsilonΥ \\Upsilon Φ\\PhiΦ \\Phi X\\ChiX \\Chi Ψ\\PsiΨ \\Psi Ω\\OmegaΩ \\Omega Γ\\varGammaΓ \\varGamma Δ\\varDeltaΔ \\varDelta Θ\\varThetaΘ \\varTheta Λ\\varLambdaΛ \\varLambda Ξ\\varXiΞ \\varXi Π\\varPiΠ \\varPi Σ\\varSigmaΣ \\varSigma Υ\\varUpsilonΥ \\varUpsilon Φ\\varPhiΦ \\varPhi Ψ\\varPsiΨ \\varPsi Ω\\varOmegaΩ \\varOmega α\\alphaα \\alpha β\\betaβ \\beta γ\\gammaγ \\gamma δ\\deltaδ \\delta ϵ\\epsilonϵ \\epsilon ζ\\zetaζ \\zeta η\\etaη \\eta θ\\thetaθ \\theta ι\\iotaι \\iota κ\\kappaκ \\kappa λ\\lambdaλ \\lambda μ\\muμ \\mu ν\\nuν \\nu ξ\\xiξ \\xi ο\\omicronο \\omicron π\\piπ \\pi ρ\\rhoρ \\rho σ\\sigmaσ \\sigma τ\\tauτ \\tau υ\\upsilonυ \\upsilon ϕ\\phiϕ \\phi χ\\chiχ \\chi ψ\\psiψ \\psi ω\\omegaω \\omega ε\\varepsilonε \\varepsilon ϰ\\varkappaϰ \\varkappa ϑ\\varthetaϑ \\vartheta ϑ\\thetasymϑ \\thetasym ϖ\\varpiϖ \\varpi ϱ\\varrhoϱ \\varrho ς\\varsigmaς \\varsigma φ\\varphiφ \\varphi ϝ\\digammaϝ \\digamma Direct Input : Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο Π Ρ Σ Τ Υ Φ Χ Ψ Ω α β γ δ ϵ ζ η θ ι κ λ μ ν ξ o π ρ σ τ υ ϕ χ ψ ω ε ϑ ϖ ϱ ς φ ϝ Other Letters ı\\imath \\imath ∇\\nabla∇ \\nabla ℑ\\Imℑ \\Im R\\RealsR \\Reals Œ\\text{\\OE}Œ \\text{\\OE} ȷ\\jmath \\jmath ∂\\partial∂ \\partial ℑ\\imageℑ \\image ℘\\wp℘ \\wp ø\\text{\\o}ø \\text{\\o} ℵ\\alephℵ \\aleph ⅁\\Game⅁ \\Game k\\Bbbkk \\Bbbk ℘\\weierp℘ \\weierp Ø\\text{\\O}Ø \\text{\\O} ℵ\\alefℵ \\alef Ⅎ\\FinvℲ \\Finv N\\NN \\N Z\\ZZ \\Z ß\\text{\\ss}ß \\text{\\ss} ℵ\\alefsymℵ \\alefsym C\\cnumsC \\cnums N\\natnumsN \\natnums a˚\\text{\\aa}a˚ \\text{\\aa} ı\\text{\\i}ı \\text{\\i} ℶ\\bethℶ \\beth C\\ComplexC \\Complex R\\RR \\R A˚\\text{\\AA}A˚ \\text{\\AA} ȷ\\text{\\j}ȷ \\text{\\j} ℷ\\gimelℷ \\gimel ℓ\\ellℓ \\ell ℜ\\Reℜ \\Re æ\\text{\\ae}æ \\text{\\ae} ℸ\\dalethℸ \\daleth ℏ\\hbarℏ \\hbar ℜ\\realℜ \\real Æ\\text{\\AE}Æ \\text{\\AE} ð\\ethð \\eth ℏ\\hslashℏ \\hslash R\\realsR \\reals œ\\text{\\oe}œ \\text{\\oe} Direct Input : ∂ ∇ ℑ Ⅎ ℵ ℶ ℷ ℸ ⅁ ℏ ð − ∗ ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖÙÚÛÜÝÞßàáâãäåçèéêëìíîïðñòóôöùúûüýþÿ ₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ⁺⁻⁼⁽⁾⁰¹²³⁴⁵⁶⁷⁸⁹ᵃᵇᶜᵈᵉᵍʰⁱʲᵏˡᵐⁿᵒᵖʳˢᵗᵘʷˣʸᶻᵛᵝᵞᵟᵠᵡ Unicode Mathematical Alphanumeric Symbols Item Range Item Range Bold 𝐀-𝐙 𝐚-𝐳 𝟎-𝟗\\text{𝐀-𝐙 𝐚-𝐳 𝟎-𝟗}A-Z a-z 0-9 Double-struck 𝔸-Z 𝕜\\text{𝔸-}ℤ\\ 𝕜A-Z k Italic 𝐴-𝑍 𝑎-𝑧\\text{𝐴-𝑍 𝑎-𝑧}A-Z a-z Sans serif 𝖠-𝖹 𝖺-𝗓 𝟢-𝟫\\text{𝖠-𝖹 𝖺-𝗓 𝟢-𝟫}A-Z a-z 0-9 Bold Italic 𝑨-𝒁 𝒂-𝒛\\text{𝑨-𝒁 𝒂-𝒛}A-Z a-z Sans serif bold 𝗔-𝗭 𝗮-𝘇 𝟬-𝟵\\text{𝗔-𝗭 𝗮-𝘇 𝟬-𝟵}A-Z a-z 0-9 Script 𝒜-𝒵\\text{𝒜-𝒵}A-Z Sans serif italic 𝘈-𝘡 𝘢-𝘻\\text{𝘈-𝘡 𝘢-𝘻}A-Z a-z Fractur 𝔄-Z 𝔞-𝔷\\text{𝔄-}ℨ\\text{ 𝔞-𝔷}A-Z a-z Monospace 𝙰-𝚉 𝚊-𝚣 𝟶-𝟿\\text{𝙰-𝚉 𝚊-𝚣 𝟶-𝟿}A-Z a-z 0-9 Bold Fractur 𝕬-𝖅 𝖆-𝖟\\text{𝕬-}𝖅\\text{ 𝖆-}𝖟A-Z a-z Unicode The letters listed above will render in any KaTeX rendering mode. If the KaTeX rendering mode is set to strict: false or strict:&quot;warn&quot; (default), then KaTeX will accept all Unicode letters. The letters not listed above will be rendered from system fonts, not KaTeX-supplied fonts, so their typography may clash. They may also cause small vertical alignment issues. KaTeX has detailed metrics for glyphs in Latin, Greek, and Cyrillic, but other glyphs are treated as if they are each as tall as the letter M. For Persian composite characters, a user-supplied plug-in is under development. Layout Annotation 5\\cancel{5}5​ \\cancel{5} a+b+c⏞note\\overbrace{a+b+c}^{\\text{note}}a+b+c​note​ \\overbrace{a+b+c}^{\\text{note}} 5\\bcancel{5}5​ \\bcancel{5} a+b+c⏟note\\underbrace{a+b+c}_{\\text{note}}notea+b+c​​ \\underbrace{a+b+c}_{\\text{note}} ABC\\xcancel{ABC}ABC \\xcancel{ABC} ≠\\not == \\not = abc\\sout{abc}abc \\sout{abc} π=cd\\boxed{\\pi=\\frac c d}π=dc​​ \\boxed{\\pi=\\frac c d} ana_{\\angl n}an​​ a_{\\angl n} ana_\\anglnan​​ a_\\angln −78∘\\phase{-78^\\circ}−78∘​ \\phase{-78^\\circ} \\tag{hi} x+y^{2x} x+y2x(hi)\\tag{hi} x+y^{2x} x+y2x(hi) \\tag*{hi} x+y^{2x} x+y2xhi\\tag*{hi} x+y^{2x} x+y2xhi Line Breaks KaTeX 0.10.0+ will insert automatic line breaks in inline math after relations or binary operators such as “=” or “+”. These can be suppressed by \\nobreak or by placing math inside a pair of braces, as in {F=ma}. \\allowbreak will allow automatic line breaks at locations other than relations or operators. Hard line breaks are \\\\ and \\newline. In display math, KaTeX does not insert automatic line breaks. It ignores display math hard line breaks when rendering option strict: true. Vertical Layout xnx_nxn​ x_n =!\\stackrel{!}{=}=! \\stackrel{!}{=} aba \\atop bba​ a \\atop b exe^xex e^x =!\\overset{!}{=}=! \\overset{!}{=} abca\\raisebox{0.25em}{b}cabc a\\raisebox{0.25em}{b}c uo_u^ouo​ _u^o =!\\underset{!}{=}!=​ \\underset{!}{=} xnx_nxn​ x_n =!\\stackrel{!}{=}=! \\stackrel{!}{=} aba \\atop bba​ a \\atop b exe^xex e^x =!\\overset{!}{=}=! \\overset{!}{=} a\\raisebox{0.25em}{b}c a\\raisebox{0.25em}{$b$}c uo_u^ouo​ _u^o =!\\underset{!}{=}!=​ \\underset{!}{=} a+(abc)a+\\left(\\vcenter{\\frac{\\frac a b}c}\\right)a+(cba​​​) a+\\left(\\vcenter{\\hbox{$\\frac{\\frac a b}c$}}\\right) $$\\sum_{\\substack{0&lt;i&lt;m\\0&lt;j&lt;n}}$$ \\sum_{\\substack{0&lt;i&lt;m\\\\0&lt;j&lt;n}} \\raisebox and \\hbox put their argument into text mode. To raise math, nest $…$ delimiters inside the argument as shown above. \\vcenter can be written without an \\hbox if the strict rendering option is false. In that case, omit the nested $…$ delimiters. The second argument of \\raisebox can contain math if it is nested within $…$ delimiters, as in \\raisebox{0.25em}{$\\frac a b$} Overlap and Spacing =/ {=}\\mathllap{/\\,}=/ {=}\\mathllap{/\\,} (x2)\\left(x^{\\smash{2}}\\right)(x2) \\left(x^{\\smash{2}}\\right) /=\\mathrlap{\\,/}{=}/= \\mathrlap{\\,/}{=} y\\sqrt{\\smash[b]{y}}y​ \\sqrt{\\smash[b]{y}} ∑1≤i≤j≤nxij\\displaystyle\\sum_{\\mathclap{1\\le i\\le j\\le n}} x_{ij}1≤i≤j≤n∑​xij​ \\sum_{\\mathclap{1\\le i\\le j\\le n}} x_{ij} KaTeX also supports \\llap, \\rlap, and \\clap, but they will take only text, not math, as arguments. Spacing Function Produces Function Produces \\, ³∕₁₈ em space \\kern{distance} space, width = distance \\thinspace ³∕₁₈ em space \\mkern{distance} space, width = distance \\: ⁴∕₁₈ em space \\mskip{distance} space, width = distance \\medspace ⁴∕₁₈ em space \\hskip{distance} space, width = distance \\; ⁵∕₁₈ em space \\hspace{distance} space, width = distance \\thickspace ⁵∕₁₈ em space \\hspace*{distance} space, width = distance \\enspace ½ em space \\phantom{content} space the width and height of content \\quad 1 em space \\hphantom{content} space the width of content \\qquad 2 em space \\vphantom{content} space the height of content ~ non-breaking space \\! – ³∕₁₈ em space \\&lt;space&gt; space \\negthinspace – ³∕₁₈ em space \\nobreakspace non-breaking space \\negmedspace – ⁴∕₁₈ em space \\space space \\negthickspace – ⁵∕₁₈ em space Notes: distance will accept any of the KaTeX units. \\kern, \\mkern, \\mskip, and \\hspace accept unbraced distances, as in: \\kern1em. \\mkern and \\mskip will not work in text mode and both will write a console warning for any unit except mu. Logic and Set Theory ∀\\forall∀ \\forall ∁\\complement∁ \\complement ∴\\therefore∴ \\therefore ∅\\emptyset∅ \\emptyset ∃\\exists∃ \\exists ⊂\\subset⊂ \\subset ∵\\because∵ \\because ∅\\empty∅ \\empty ∃\\exist∃ \\exist ⊃\\supset⊃ \\supset ↦\\mapsto↦ \\mapsto ∅\\varnothing∅ \\varnothing ∄\\nexists∄ \\nexists ∣\\mid∣ \\mid →\\to→ \\to ⟹ \\implies⟹ \\implies ∈\\in∈ \\in ∧\\land∧ \\land ←\\gets← \\gets ⟸ \\impliedby⟸ \\impliedby ∈\\isin∈ \\isin ∨\\lor∨ \\lor ↔\\leftrightarrow↔ \\leftrightarrow ⟺ \\iff⟺ \\iff ∉\\notin∈/ \\notin ∋\\ni∋ \\ni ∌\\notni∋ \\notni ¬\\neg¬ \\neg or \\lnot { x | x&lt;12 } \\Set{ x | x&lt;\\frac 1 2 }~~~~~~{x​x&lt;21​} \\Set{ x | x&lt;\\frac 1 2 } { x∣x&lt;5 } \\set{x|x&lt;5}~~~{x∣x&lt;5} \\set{x|x&lt;5} Direct Input : ∀ ∴ ∁ ∵ ∃ ∣ ∈ ∉ ∋ ⊂ ⊃ ∧ ∨ ↦ → ← ↔ ¬ ℂ ℍ ℕ ℙ ℚ ℝ Macros There shold be a space between { and # to avoid the conflict with the markdown syntax. OR use {% raw %} and {% endraw %} to avoid the conflict. $\\gdef\\bar#1{#1^2} \\bar{x} + \\bar{y}$ (X) $\\gdef\\bar#1{ #1^2} \\bar{x} + \\bar{y}$ (O) {% raw %}$\\gdef\\bar#1{#1^2} \\bar{x} + \\bar{y}${% endraw %} (O) x2+x2\\def\\foo{x^2} \\foo + \\foox2+x2 \\def\\foo{x^2} \\foo + \\foo x2+y2\\gdef\\bar#1{ #1^2} \\bar{x} + \\bar{y}x2+y2 \\gdef\\bar#1{ #1^2} \\bar{x} + \\bar{y} \\global\\def\\macroname#1#2…{definition} \\newcommand\\macroname[numargs]{definition} \\renewcommand\\macroname[numargs]{definition} \\providecommand\\macroname[numargs]{definition} Macros can also be defined in the KaTeX rendering options. Macros accept up to nine arguments: #1, #2, etc. \\gdef and \\global\\def macros will persist between math expressions. Available functions include: \\char \\mathchoice \\TextOrMath \\@ifstar \\@ifnextchar \\@firstoftwo \\@secondoftwo \\relax @ is a valid character for commands, as if \\makeatletter were in effect. Operators Big Operators ∑\\sum∑ \\sum ∏\\prod∏ \\prod ⨂\\bigotimes⨂ \\bigotimes ⋁\\bigvee⋁ \\bigvee ∫\\int∫ \\int ∐\\coprod∐ \\coprod ⨁\\bigoplus⨁ \\bigoplus ⋀\\bigwedge⋀ \\bigwedge ∬\\iint∬ \\iint ∫\\intop∫ \\intop ⨀\\bigodot⨀ \\bigodot ⋂\\bigcap⋂ \\bigcap ∭\\iiint∭ \\iiint ∫\\smallint∫ \\smallint ⨄\\biguplus⨄ \\biguplus ⋃\\bigcup⋃ \\bigcup ∮\\oint∮ \\oint ∯\\oiint∬​ \\oiint ∰\\oiiint∭​ \\oiiint ⨆\\bigsqcup⨆ \\bigsqcup Direct Input : ∫ ∬ ∭ ∮ ∏ ∐ ∑ ⋀ ⋁ ⋂ ⋃ ⨀ ⨁ ⨂ ⨄ ⨆ Binary Operators +++ + ⋅\\cdot⋅ \\cdot ⋗\\gtrdot⋗ \\gtrdot x(moda)x \\pmod ax(moda) x \\pmod a −-− - ⋅\\cdotp⋅ \\cdotp ⊺\\intercal⊺ \\intercal x(a)x \\pod ax(a) x \\pod a /// / ⋅\\centerdot⋅ \\centerdot ∧\\land∧ \\land ⊳\\rhd⊳ \\rhd ∗*∗ * ∘\\circ∘ \\circ ⋋\\leftthreetimes⋋ \\leftthreetimes ⋌\\rightthreetimes⋌ \\rightthreetimes ⨿\\amalg⨿ \\amalg ⊛\\circledast⊛ \\circledast .\\ldotp. \\ldotp ⋊\\rtimes⋊ \\rtimes &amp;\\And&amp; \\And ⊚\\circledcirc⊚ \\circledcirc ∨\\lor∨ \\lor ∖\\setminus∖ \\setminus ∗\\ast∗ \\ast ⊝\\circleddash⊝ \\circleddash ⋖\\lessdot⋖ \\lessdot ∖\\smallsetminus∖ \\smallsetminus ⊼\\barwedge⊼ \\barwedge ⋓\\Cup⋓ \\Cup ⊲\\lhd⊲ \\lhd ⊓\\sqcap⊓ \\sqcap ◯\\bigcirc◯ \\bigcirc ∪\\cup∪ \\cup ⋉\\ltimes⋉ \\ltimes ⊔\\sqcup⊔ \\sqcup mod \\bmodmod \\bmod ⋎\\curlyvee⋎ \\curlyvee xmod ax \\mod axmoda x\\mod a ×\\times× \\times ⊡\\boxdot⊡ \\boxdot ⋏\\curlywedge⋏ \\curlywedge ∓\\mp∓ \\mp ⊴\\unlhd⊴ \\unlhd ⊟\\boxminus⊟ \\boxminus ÷\\div÷ \\div ⊙\\odot⊙ \\odot ⊵\\unrhd⊵ \\unrhd ⊞\\boxplus⊞ \\boxplus ⋇\\divideontimes⋇ \\divideontimes ⊖\\ominus⊖ \\ominus ⊎\\uplus⊎ \\uplus ⊠\\boxtimes⊠ \\boxtimes ∔\\dotplus∔ \\dotplus ⊕\\oplus⊕ \\oplus ∨\\vee∨ \\vee ∙\\bullet∙ \\bullet ⩞\\doublebarwedge⩞ \\doublebarwedge ⊗\\otimes⊗ \\otimes ⊻\\veebar⊻ \\veebar ⋒\\Cap⋒ \\Cap ⋒\\doublecap⋒ \\doublecap ⊘\\oslash⊘ \\oslash ∧\\wedge∧ \\wedge ∩\\cap∩ \\cap ⋓\\doublecup⋓ \\doublecup ±\\pm± \\pm or \\plusmn ≀\\wr≀ \\wr Direct Input : / * ⋅ ± × ÷ ∓ ∔ ∧ ∨ ∩ ∪ ≀ ⊎ ⊓ ⊔ ⊕ ⊖ ⊗ ⊘ ⊙ ⊚ ⊛ ⊝ Fractions and Binomials ab\\frac{a}{b}ba​ \\frac{a}{b} ab\\tfrac{a}{b}ba​ \\tfrac{a}{b} (aa+1]\\genfrac ( ] {2pt}{1}a{a+1}(a+1a​] \\genfrac ( ] {2pt}{1}a{a+1} ab{a \\over b}ba​ {a \\over b} ab\\dfrac{a}{b}ba​ \\dfrac{a}{b} ab+1{a \\above{2pt} b+1}b+1a​ {a \\above{2pt} b+1} a/ba/ba/b a/b a1+1b\\cfrac{a}{1 + \\cfrac{1}{b}}1+b1​a​ \\cfrac{a}{1 + \\cfrac{1}{b}} (nk)\\binom{n}{k}(kn​) \\binom{n}{k} (nk)\\dbinom{n}{k}(kn​) \\dbinom{n}{k} {nk}{n\\brace k}{kn​} {n\\brace k} (nk){n \\choose k}(kn​) {n \\choose k} (nk)\\tbinom{n}{k}(kn​) \\tbinom{n}{k} [nk]{n\\brack k}[kn​] {n\\brack k} Math Operators arcsin⁡\\arcsinarcsin \\arcsin cosec⁡\\coseccosec \\cosec deg⁡\\degdeg \\deg sec⁡\\secsec \\sec arccos⁡\\arccosarccos \\arccos cosh⁡\\coshcosh \\cosh dim⁡\\dimdim \\dim sin⁡\\sinsin \\sin arctan⁡\\arctanarctan \\arctan cot⁡\\cotcot \\cot exp⁡\\expexp \\exp sinh⁡\\sinhsinh \\sinh arctg⁡\\arctgarctg \\arctg cotg⁡\\cotgcotg \\cotg hom⁡\\homhom \\hom sh⁡\\shsh \\sh arcctg⁡\\arcctgarcctg \\arcctg coth⁡\\cothcoth \\coth ker⁡\\kerker \\ker tan⁡\\tantan \\tan arg⁡\\argarg \\arg csc⁡\\csccsc \\csc lg⁡\\lglg \\lg tanh⁡\\tanhtanh \\tanh ch⁡\\chch \\ch ctg⁡\\ctgctg \\ctg ln⁡\\lnln \\ln tg⁡\\tgtg \\tg cos⁡\\coscos \\cos cth⁡\\cthcth \\cth log⁡\\loglog \\log th⁡\\thth \\th f⁡\\operatorname{f}f \\operatorname{f} arg max⁡\\argmaxargmax \\argmax inj lim⁡\\injliminjlim \\injlim min⁡\\minmin \\min lim→⁡\\varinjlimlim​ \\varinjlim arg min⁡\\argminargmin \\argmin lim⁡\\limlim \\lim plim⁡\\plimplim \\plim lim‾⁡\\varliminflim​ \\varliminf det⁡\\detdet \\det lim inf⁡\\liminfliminf \\liminf Pr⁡\\PrPr \\Pr lim‾⁡\\varlimsuplim \\varlimsup gcd⁡\\gcdgcd \\gcd lim sup⁡\\limsuplimsup \\limsup proj lim⁡\\projlimprojlim \\projlim lim←⁡\\varprojlimlim​ \\varprojlim inf⁡\\infinf \\inf max⁡\\maxmax \\max sup⁡\\supsup \\sup f⁡\\operatorname*{f}f \\operatorname*{f}f⁡\\operatornamewithlimits{f}f \\operatornamewithlimits{f} Functions in the bottom six rows of this table can take \\limits. Square Root x\\sqrt{x}x​ \\sqrt{x} x3\\sqrt[3]{x}3x​ \\sqrt[3]{x} Relations =!\\stackrel{!}{=}=! \\stackrel{!}{=} === = ≑\\doteqdot≑ \\doteqdot ⪅\\lessapprox⪅ \\lessapprox ⌣\\smile⌣ \\smile &lt;&lt;&lt; &lt; ≖\\eqcirc≖ \\eqcirc ⋚\\lesseqgtr⋚ \\lesseqgtr ⊏\\sqsubset⊏ \\sqsubset &gt;&gt;&gt; &gt; ∹\\eqcolon−: \\eqcolon or \\minuscolon ⪋\\lesseqqgtr⪋ \\lesseqqgtr ⊑\\sqsubseteq⊑ \\sqsubseteq ::: : −∷\\Eqcolon−:: \\Eqcolon or \\minuscoloncolon ≶\\lessgtr≶ \\lessgtr ⊐\\sqsupset⊐ \\sqsupset ≈\\approx≈ \\approx ≕\\eqqcolon=: \\eqqcolon or \\equalscolon ≲\\lesssim≲ \\lesssim ⊒\\sqsupseteq⊒ \\sqsupseteq ≈:\\approxcolon≈: \\approxcolon =∷\\Eqqcolon=:: \\Eqqcolon or \\equalscoloncolon ≪\\ll≪ \\ll ⋐\\Subset⋐ \\Subset ≈∷\\approxcoloncolon≈:: \\approxcoloncolon ≂\\eqsim≂ \\eqsim ⋘\\lll⋘ \\lll ⊂\\subset⊂ \\subset or \\sub ≊\\approxeq≊ \\approxeq ⪖\\eqslantgtr⪖ \\eqslantgtr ⋘\\llless⋘ \\llless ⊆\\subseteq⊆ \\subseteq or \\sube ≍\\asymp≍ \\asymp ⪕\\eqslantless⪕ \\eqslantless &lt;\\lt&lt; \\lt ⫅\\subseteqq⫅ \\subseteqq ∍\\backepsilon∍ \\backepsilon ≡\\equiv≡ \\equiv ∣\\mid∣ \\mid ≻\\succ≻ \\succ ∽\\backsim∽ \\backsim ≒\\fallingdotseq≒ \\fallingdotseq ⊨\\models⊨ \\models ⪸\\succapprox⪸ \\succapprox ⋍\\backsimeq⋍ \\backsimeq ⌢\\frown⌢ \\frown ⊸\\multimap⊸ \\multimap ≽\\succcurlyeq≽ \\succcurlyeq ≬\\between≬ \\between ≥\\ge≥ \\ge ⊶\\origof⊶ \\origof ⪰\\succeq⪰ \\succeq ⋈\\bowtie⋈ \\bowtie ≥\\geq≥ \\geq ∋\\owns∋ \\owns ≿\\succsim≿ \\succsim ≏\\bumpeq≏ \\bumpeq ≧\\geqq≧ \\geqq ∥\\parallel∥ \\parallel ⋑\\Supset⋑ \\Supset ≎\\Bumpeq≎ \\Bumpeq ⩾\\geqslant⩾ \\geqslant ⊥\\perp⊥ \\perp ⊃\\supset⊃ \\supset ≗\\circeq≗ \\circeq ≫\\gg≫ \\gg ⋔\\pitchfork⋔ \\pitchfork ⊇\\supseteq⊇ \\supseteq or \\supe :≈\\colonapprox:≈ \\colonapprox ⋙\\ggg⋙ \\ggg ≺\\prec≺ \\prec ⫆\\supseteqq⫆ \\supseteqq ∷≈\\Colonapprox::≈ \\Colonapprox or \\coloncolonapprox ⋙\\gggtr⋙ \\gggtr ⪷\\precapprox⪷ \\precapprox ≈\\thickapprox≈ \\thickapprox :−\\coloneq:− \\coloneq or \\colonminus &gt;\\gt&gt; \\gt ≼\\preccurlyeq≼ \\preccurlyeq ∼\\thicksim∼ \\thicksim ∷−\\Coloneq::− \\Coloneq or \\coloncolonminus ⪆\\gtrapprox⪆ \\gtrapprox ⪯\\preceq⪯ \\preceq ⊴\\trianglelefteq⊴ \\trianglelefteq ≔\\coloneqq:= \\coloneqq or \\colonequals ⋛\\gtreqless⋛ \\gtreqless ≾\\precsim≾ \\precsim ≜\\triangleq≜ \\triangleq ∷=\\Coloneqq::= \\Coloneqq or \\coloncolonequals ⪌\\gtreqqless⪌ \\gtreqqless ∝\\propto∝ \\propto ⊵\\trianglerighteq⊵ \\trianglerighteq :∼\\colonsim:∼ \\colonsim ≷\\gtrless≷ \\gtrless ≓\\risingdotseq≓ \\risingdotseq ∝\\varpropto∝ \\varpropto ∷∼\\Colonsim::∼ \\Colonsim or \\coloncolonsim ≳\\gtrsim≳ \\gtrsim ∣\\shortmid∣ \\shortmid △\\vartriangle△ \\vartriangle ≅\\cong≅ \\cong ⊷\\imageof⊷ \\imageof ∥\\shortparallel∥ \\shortparallel ⊲\\vartriangleleft⊲ \\vartriangleleft ⋞\\curlyeqprec⋞ \\curlyeqprec ∈\\in∈ \\in or \\isin ∼\\sim∼ \\sim ⊳\\vartriangleright⊳ \\vartriangleright ⋟\\curlyeqsucc⋟ \\curlyeqsucc ⋈\\Join⋈ \\Join ∼:\\simcolon∼: \\simcolon :\\vcentcolon: \\vcentcolon or \\ratio ⊣\\dashv⊣ \\dashv ≤\\le≤ \\le ∼∷\\simcoloncolon∼:: \\simcoloncolon ⊢\\vdash⊢ \\vdash ∷\\dblcolon:: \\dblcolon or \\coloncolon ≤\\leq≤ \\leq ≃\\simeq≃ \\simeq ⊨\\vDash⊨ \\vDash ≐\\doteq≐ \\doteq ≦\\leqq≦ \\leqq ⌢\\smallfrown⌢ \\smallfrown ⊩\\Vdash⊩ \\Vdash ≑\\Doteq≑ \\Doteq ⩽\\leqslant⩽ \\leqslant ⌣\\smallsmile⌣ \\smallsmile ⊪\\Vvdash⊪ \\Vvdash Direct Input : = &lt; &gt; : ∈ ∋ ∝ ∼ ∽ ≂ ≃ ≅ ≈ ≊ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≖ ≗ ≜ ≡ ≤ ≥ ≦ ≧ ≫ ≬ ≳ ≷ ≺ ≻ ≼ ≽ ≾ ≿ ⊂ ⊃ ⊆ ⊇ ⊏ ⊐ ⊑ ⊒ ⊢ ⊣ ⊩ ⊪ ⊸ ⋈ ⋍ ⋐ ⋑ ⋔ ⋙ ⋛ ⋞ ⋟ ⌢ ⌣ ⩾ ⪆ ⪌ ⪕ ⪖ ⪯ ⪰ ⪷ ⪸ ⫅ ⫆ ≲ ⩽ ⪅ ≶ ⋚ ⪋ ⟂ ⊨ ⊶ ⊷ ≔ ≕ ⩴ Negated Relations ≠\\not == \\not = ⪊\\gnapprox⪊ \\gnapprox ≱\\ngeqslant \\ngeqslant ⊈\\nsubseteq⊈ \\nsubseteq ⪵\\precneqq⪵ \\precneqq ⪈\\gneq⪈ \\gneq ≯\\ngtr≯ \\ngtr ⊈\\nsubseteqq \\nsubseteqq ⋨\\precnsim⋨ \\precnsim ≩\\gneqq≩ \\gneqq ≰\\nleq≰ \\nleq ⊁\\nsucc⊁ \\nsucc ⊊\\subsetneq⊊ \\subsetneq ⋧\\gnsim⋧ \\gnsim ≰\\nleqq \\nleqq ⋡\\nsucceq⋡ \\nsucceq ⫋\\subsetneqq⫋ \\subsetneqq ≩\\gvertneqq \\gvertneqq ≰\\nleqslant \\nleqslant ⊉\\nsupseteq⊉ \\nsupseteq ⪺\\succnapprox⪺ \\succnapprox ⪉\\lnapprox⪉ \\lnapprox ≮\\nless≮ \\nless ⊉\\nsupseteqq \\nsupseteqq ⪶\\succneqq⪶ \\succneqq ⪇\\lneq⪇ \\lneq ∤\\nmid∤ \\nmid ⋪\\ntriangleleft⋪ \\ntriangleleft ⋩\\succnsim⋩ \\succnsim ≨\\lneqq≨ \\lneqq ∉\\notin∈/ \\notin ⋬\\ntrianglelefteq⋬ \\ntrianglelefteq ⊋\\supsetneq⊋ \\supsetneq ⋦\\lnsim⋦ \\lnsim ∌\\notni∋ \\notni ⋫\\ntriangleright⋫ \\ntriangleright ⫌\\supsetneqq⫌ \\supsetneqq ≨\\lvertneqq \\lvertneqq ∦\\nparallel∦ \\nparallel ⋭\\ntrianglerighteq⋭ \\ntrianglerighteq ⊊\\varsubsetneq \\varsubsetneq ≆\\ncong≆ \\ncong ⊀\\nprec⊀ \\nprec ⊬\\nvdash⊬ \\nvdash ⫋\\varsubsetneqq \\varsubsetneqq ≠\\ne= \\ne ⋠\\npreceq⋠ \\npreceq ⊭\\nvDash⊭ \\nvDash ⊋\\varsupsetneq \\varsupsetneq ≠\\neq= \\neq ∤\\nshortmid \\nshortmid ⊯\\nVDash⊯ \\nVDash ⫌\\varsupsetneqq \\varsupsetneqq ≱\\ngeq≱ \\ngeq ∦\\nshortparallel \\nshortparallel ⊮\\nVdash⊮ \\nVdash ≱\\ngeqq \\ngeqq ≁\\nsim≁ \\nsim ⪹\\precnapprox⪹ \\precnapprox Direct Input : ∉ ∌ ∤ ∦ ≁ ≆ ≠ ≨ ≩ ≮ ≯ ≰ ≱ ⊀ ⊁ ⊈ ⊉ ⊊ ⊋ ⊬ ⊭ ⊮ ⊯ ⋠ ⋡ ⋦ ⋧ ⋨ ⋩ ⋬ ⋭ ⪇ ⪈ ⪉ ⪊ ⪵ ⪶ ⪹ ⪺ ⫋ ⫌ Arrows ↺\\circlearrowleft↺ \\circlearrowleft ↼\\leftharpoonup↼ \\leftharpoonup ⇒\\rArr⇒ \\rArr ↻\\circlearrowright↻ \\circlearrowright ⇇\\leftleftarrows⇇ \\leftleftarrows →\\rarr→ \\rarr ↶\\curvearrowleft↶ \\curvearrowleft ↔\\leftrightarrow↔ \\leftrightarrow ↾\\restriction↾ \\restriction ↷\\curvearrowright↷ \\curvearrowright ⇔\\Leftrightarrow⇔ \\Leftrightarrow →\\rightarrow→ \\rightarrow ⇓\\Darr⇓ \\Darr ⇆\\leftrightarrows⇆ \\leftrightarrows ⇒\\Rightarrow⇒ \\Rightarrow ⇓\\dArr⇓ \\dArr ⇋\\leftrightharpoons⇋ \\leftrightharpoons ↣\\rightarrowtail↣ \\rightarrowtail ↓\\darr↓ \\darr ↭\\leftrightsquigarrow↭ \\leftrightsquigarrow ⇁\\rightharpoondown⇁ \\rightharpoondown ⇠\\dashleftarrow⇠ \\dashleftarrow ⇚\\Lleftarrow⇚ \\Lleftarrow ⇀\\rightharpoonup⇀ \\rightharpoonup ⇢\\dashrightarrow⇢ \\dashrightarrow ⟵\\longleftarrow⟵ \\longleftarrow ⇄\\rightleftarrows⇄ \\rightleftarrows ↓\\downarrow↓ \\downarrow ⟸\\Longleftarrow⟸ \\Longleftarrow ⇌\\rightleftharpoons⇌ \\rightleftharpoons ⇓\\Downarrow⇓ \\Downarrow ⟷\\longleftrightarrow⟷ \\longleftrightarrow ⇉\\rightrightarrows⇉ \\rightrightarrows ⇊\\downdownarrows⇊ \\downdownarrows ⟺\\Longleftrightarrow⟺ \\Longleftrightarrow ⇝\\rightsquigarrow⇝ \\rightsquigarrow ⇃\\downharpoonleft⇃ \\downharpoonleft ⟼\\longmapsto⟼ \\longmapsto ⇛\\Rrightarrow⇛ \\Rrightarrow ⇂\\downharpoonright⇂ \\downharpoonright ⟶\\longrightarrow⟶ \\longrightarrow ↱\\Rsh↱ \\Rsh ←\\gets← \\gets ⟹\\Longrightarrow⟹ \\Longrightarrow ↘\\searrow↘ \\searrow ⇔\\Harr⇔ \\Harr ↫\\looparrowleft↫ \\looparrowleft ↙\\swarrow↙ \\swarrow ⇔\\hArr⇔ \\hArr ↬\\looparrowright↬ \\looparrowright →\\to→ \\to ↔\\harr↔ \\harr ⇔\\Lrarr⇔ \\Lrarr ↞\\twoheadleftarrow↞ \\twoheadleftarrow ↩\\hookleftarrow↩ \\hookleftarrow ⇔\\lrArr⇔ \\lrArr ↠\\twoheadrightarrow↠ \\twoheadrightarrow ↪\\hookrightarrow↪ \\hookrightarrow ↔\\lrarr↔ \\lrarr ⇑\\Uarr⇑ \\Uarr ⟺ \\iff⟺ \\iff ↰\\Lsh↰ \\Lsh ⇑\\uArr⇑ \\uArr ⟸ \\impliedby⟸ \\impliedby ↦\\mapsto↦ \\mapsto ↑\\uarr↑ \\uarr ⟹ \\implies⟹ \\implies ↗\\nearrow↗ \\nearrow ↑\\uparrow↑ \\uparrow ⇐\\Larr⇐ \\Larr ↚\\nleftarrow↚ \\nleftarrow ⇑\\Uparrow⇑ \\Uparrow ⇐\\lArr⇐ \\lArr ⇍\\nLeftarrow⇍ \\nLeftarrow ↕\\updownarrow↕ \\updownarrow ←\\larr← \\larr ↮\\nleftrightarrow↮ \\nleftrightarrow ⇕\\Updownarrow⇕ \\Updownarrow ⇝\\leadsto⇝ \\leadsto ⇎\\nLeftrightarrow⇎ \\nLeftrightarrow ↿\\upharpoonleft↿ \\upharpoonleft ←\\leftarrow← \\leftarrow ↛\\nrightarrow↛ \\nrightarrow ↾\\upharpoonright↾ \\upharpoonright ⇐\\Leftarrow⇐ \\Leftarrow ⇏\\nRightarrow⇏ \\nRightarrow ⇈\\upuparrows⇈ \\upuparrows ↢\\leftarrowtail↢ \\leftarrowtail ↖\\nwarrow↖ \\nwarrow ↽\\leftharpoondown↽ \\leftharpoondown ⇒\\Rarr⇒ \\Rarr Direct Input : ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↞ ↠ ↢ ↣ ↦ ↩ ↪ ↫ ↬ ↭ ↮ ↰ ↱↶ ↷ ↺ ↻ ↼ ↽ ↾ ↾ ↿ ⇀ ⇁ ⇂ ⇃ ⇄ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇚ ⇛ ⇝ ⇠ ⇢ ⟵ ⟶ ⟷ ⟸ ⟹ ⟺ ⟼ ↽ Extensible Arrows ←abc\\xleftarrow{abc}abc​ \\xleftarrow{abc} →underover\\xrightarrow[under]{over}overunder​ \\xrightarrow[under]{over} ⇐abc\\xLeftarrow{abc}abc​ \\xLeftarrow{abc} ⇒abc\\xRightarrow{abc}abc​ \\xRightarrow{abc} ↔abc\\xleftrightarrow{abc}abc​ \\xleftrightarrow{abc} ⇔abc\\xLeftrightarrow{abc}abc​ \\xLeftrightarrow{abc} ↩abc\\xhookleftarrow{abc}abc​ \\xhookleftarrow{abc} ↪abc\\xhookrightarrow{abc}abc​ \\xhookrightarrow{abc} ↞abc\\xtwoheadleftarrow{abc}abc \\xtwoheadleftarrow{abc} ↠abc\\xtwoheadrightarrow{abc}abc \\xtwoheadrightarrow{abc} ↼abc\\xleftharpoonup{abc}abc​ \\xleftharpoonup{abc} ⇀abc\\xrightharpoonup{abc}abc​ \\xrightharpoonup{abc} ↽abc\\xleftharpoondown{abc}abc​ \\xleftharpoondown{abc} ⇁abc\\xrightharpoondown{abc}abc​ \\xrightharpoondown{abc} ⇋abc\\xleftrightharpoons{abc}abc​ \\xleftrightharpoons{abc} ⇌abc\\xrightleftharpoons{abc}abc​ \\xrightleftharpoons{abc} ⇄abc\\xtofrom{abc}abc​ \\xtofrom{abc} ↦abc\\xmapsto{abc}abc​ \\xmapsto{abc} =abc\\xlongequal{abc}abc \\xlongequal{abc} Extensible arrows all can take an optional argument in the same manner as \\xrightarrow[under]{over}. Style, Color, Size, and Font Class Assignment \\mathbin \\mathclose \\mathinner \\mathop \\mathopen \\mathord \\mathpunct \\mathrel Color Using # inside $$ will cause a conflict with the markdown syntax. To avoid this, use six-digit CSS hexadecimal style without the #, OR use {% raw %} and {% endraw %} tags. $\\textcolor{#FF0000}{F=ma}$ (X) $\\textcolor{FF0000}{F=ma}$ (O) {% raw %}$\\textcolor{#FF0000}{F=ma}${% endraw %} (O) Using $ inside $$ will cause a conflict with the markdown syntax. To avoid this, use \\textit{} instead of $…$. $\\textcolor{red}{$F=ma$}$ (X) $\\textcolor{red}{\\textit{F=ma}}$ (O) F=ma\\color{blue} F=maF=ma \\color{blue} F=ma Note that KaTeX \\color acts like a switch. This aligns with LaTeX and differs from MathJax. Other KaTeX color functions expect the content to be a function argument: F=ma\\textcolor{blue}{F=ma}F=ma \\textcolor{blue}{F=ma} F=ma\\textcolor{228B22}{F=ma}F=ma \\textcolor{228B22}{F=ma} F=ma\\colorbox{aqua}{\\textit{F=ma}}F=ma​ \\colorbox{aqua}{\\textit{F=ma}} F=ma\\fcolorbox{red}{aqua}{\\textit{F=ma}}F=ma​ \\fcolorbox{red}{aqua}{\\textit{F=ma}} For color definition, KaTeX color functions will accept the standard HTML predefined color names. They will also accept an RGB argument in CSS hexa­decimal style. The “#” is optional before a six-digit specification. Font Ab0\\mathrm{Ab0}Ab0 \\mathrm{Ab0} Ab0\\mathbf{Ab0}Ab0 \\mathbf{Ab0} Ab\\mathit{Ab}Ab \\mathit{Ab} Ab0\\mathnormal{Ab0}Ab0 \\mathnormal{Ab0} Ab0\\textbf{Ab0}Ab0 \\textbf{Ab0} Ab\\textit{Ab}Ab \\textit{Ab} Ab0\\textrm{Ab0}Ab0 \\textrm{Ab0} Ab0\\bf Ab0Ab0 \\bf Ab0 Ab\\it AbAb \\it Ab Ab0\\rm Ab0Ab0 \\rm Ab0 Ab0\\bold{Ab0}Ab0 \\bold{Ab0} AB\\Bbb{AB}AB \\Bbb{AB} Ab0\\textnormal{Ab0}Ab0 \\textnormal{Ab0} Ab\\boldsymbol{Ab}Ab \\boldsymbol{Ab} AB\\mathbb{AB}AB \\mathbb{AB} Ab0\\text{Ab0}Ab0 \\text{Ab0} Ab\\bm{Ab}Ab \\bm{Ab} Ab0\\frak{Ab0}Ab0 \\frak{Ab0} Ab0\\mathsf{Ab0}Ab0 \\mathsf{Ab0} Ab0\\mathtt{Ab0}Ab0 \\mathtt{Ab0} Ab0\\mathfrak{Ab0}Ab0 \\mathfrak{Ab0} Ab0\\textsf{Ab0}Ab0 \\textsf{Ab0} Ab0\\texttt{Ab0}Ab0 \\texttt{Ab0} AB0\\mathcal{AB0}AB0 \\mathcal{AB0} Ab0\\sf Ab0Ab0 \\sf Ab0 Ab0\\tt Ab0Ab0 \\tt Ab0 AB\\mathscr{AB}AB \\mathscr{AB} One can stack font family, font weight, and font shape by using the \\textXX versions of the font functions. So \\textsf{\\textbf{H}} will produce H\\textsf{\\textbf{H}}H. The other versions do not stack, e.g., \\mathsf{\\mathbf{H}} will produce H\\mathsf{\\mathbf{H}}H. In cases where KaTeX fonts do not have a bold glyph, \\pmb can simulate one. For example, \\pmb{\\mu} renders as : μ\\pmb{\\mu}μ Size AB\\Huge ABAB \\Huge AB AB\\normalsize ABAB \\normalsize AB AB\\huge ABAB \\huge AB AB\\small ABAB \\small AB AB\\LARGE ABAB \\LARGE AB AB\\footnotesize ABAB \\footnotesize AB AB\\Large ABAB \\Large AB AB\\scriptsize ABAB \\scriptsize AB AB\\large ABAB \\large AB AB\\tiny ABAB \\tiny AB Style ∑i=1n\\displaystyle\\sum_{i=1}^ni=1∑n​ \\displaystyle\\sum_{i=1}^n ∑i=1n\\textstyle\\sum_{i=1}^n∑i=1n​ \\textstyle\\sum_{i=1}^n x\\scriptstyle xx \\scriptstyle x (The size of a first sub/superscript) x\\scriptscriptstyle xx \\scriptscriptstyle x (The size of subsequent sub/superscripts) lim⁡x\\lim\\limits_xxlim​ \\lim\\limits_x lim⁡x\\lim\\nolimits_xlimx​ \\lim\\nolimits_x x^2\\verb!x^2!x^2 \\verb!x^2! \\text{…} will accept nested $…$ fragments and render them in math mode. Symbols and Punctuation % comment …\\dots… \\dots KaTeX\\KaTeXKATE​X \\KaTeX %\\%% \\% ⋯\\cdots⋯ \\cdots LaTeX\\LaTeXLATE​X \\LaTeX #\\## \\# ⋱\\ddots⋱ \\ddots TeX\\TeXTE​X \\TeX &amp;\\&amp;&amp; \\&amp; …\\ldots… \\ldots ∇\\nabla∇ \\nabla _\\__ \\_ ⋮\\vdots⋮ \\vdots ∞\\infty∞ \\infty _\\text{\\textunderscore}_ \\text{\\textunderscore} ⋯\\dotsb⋯ \\dotsb ∞\\infin∞ \\infin –\\text{--}– \\text{--} …\\dotsc… \\dotsc ✓\\checkmark✓ \\checkmark –\\text{\\textendash}– \\text{\\textendash} ⁣⋯\\dotsi⋯ \\dotsi †\\dag† \\dag —\\text{---}— \\text{---} ⋯\\dotsm⋯ \\dotsm †\\dagger† \\dagger —\\text{\\textemdash}— \\text{\\textemdash} …\\dotso… \\dotso †\\text{\\textdagger}† \\text{\\textdagger} ~\\text{\\textasciitilde}~ \\text{\\textasciitilde} ⋅\\sdot⋅ \\sdot ‡\\ddag‡ \\ddag ^\\text{\\textasciicircum}^ \\text{\\textasciicircum} …\\mathellipsis… \\mathellipsis ‡\\ddagger‡ \\ddagger ‘`‘ ` …\\text{\\textellipsis}… \\text{\\textellipsis} ‡\\text{\\textdaggerdbl}‡ \\text{\\textdaggerdbl} ‘\\text{\\textquoteleft}‘ text{\\textquoteleft} □\\Box□ \\Box ‡\\Dagger‡ \\Dagger ‘\\lq‘ \\lq □\\square□ \\square ∠\\angle∠ \\angle ’\\text{\\textquoteright}’ \\text{\\textquoteright} ■\\blacksquare■ \\blacksquare ∡\\measuredangle∡ \\measuredangle ′\\rq′ \\rq △\\triangle△ \\triangle ∢\\sphericalangle∢ \\sphericalangle “\\text{\\textquotedblleft}“ \\text{\\textquotedblleft} ▽\\triangledown▽ \\triangledown ⊤\\top⊤ \\top &quot;&quot;&quot; &quot; ◃\\triangleleft◃ \\triangleleft ⊥\\bot⊥ \\bot ”\\text{\\textquotedblright}” \\text{\\textquotedblright} ▹\\triangleright▹ \\triangleright $\\$$ \\$ ⁣:\\colon: \\colon ▽\\bigtriangledown▽ \\bigtriangledown $\\text{\\textdollar}$ \\text{\\textdollar} ‵\\backprime‵ \\backprime △\\bigtriangleup△ \\bigtriangleup £\\pounds£ \\pounds ′\\prime′ \\prime ▲\\blacktriangle▲ \\blacktriangle £\\mathsterling£ \\mathsterling &lt;\\text{\\textless}&lt; \\text{\\textless} ▼\\blacktriangledown▼ \\blacktriangledown £\\text{\\textsterling}£ \\text{\\textsterling} &gt;\\text{\\textgreater}&gt; \\text{\\textgreater} ◀\\blacktriangleleft◀ \\blacktriangleleft ¥\\yen¥ \\yen |\\text{\\textbar}| \\text{\\textbar} ▶\\blacktriangleright▶ \\blacktriangleright √\\surd√ \\surd ∥\\text{\\textbardbl}∥ \\text{\\textbardbl} ⋄\\diamond⋄ \\diamond °\\degree° \\degree {\\text{\\textbraceleft}{ \\text{\\textbraceleft} ◊\\Diamond◊ \\Diamond °\\text{\\textdegree}° \\text{\\textdegree} }\\text{\\textbraceright}} \\text{\\textbraceright} ◊\\lozenge◊ \\lozenge ℧\\mho℧ \\mho \\\\text{\\textbackslash}\\ \\text{\\textbackslash} ⧫\\blacklozenge⧫ \\blacklozenge ╲\\diagdown╲ \\diagdown ¶\\text{\\P}¶ \\text{\\P} or \\P ⋆\\star⋆ \\star ╱\\diagup╱ \\diagup §\\text{\\S}§ \\text{\\S} or \\S ★\\bigstar★ \\bigstar ♭\\flat♭ \\flat §\\text{\\sect}§ \\text{\\sect} ♣\\clubsuit♣ \\clubsuit ♮\\natural♮ \\natural ©\\copyrightc◯ \\copyright ♣\\clubs♣ \\clubs ♯\\sharp♯ \\sharp ®\\circledR® \\circledR ♢\\diamondsuit♢ \\diamondsuit ♡\\heartsuit♡ \\heartsuit ®\\text{\\textregistered}R◯ \\text{\\textregistered} ♢\\diamonds♢ \\diamonds ♡\\hearts♡ \\hearts Ⓢ\\circledSⓈ \\circledS ♠\\spadesuit♠ \\spadesuit ♠\\spades♠ \\spades a◯\\text{\\textcircled a}a◯ \\text{\\textcircled a} ✠\\maltese✠ \\maltese ⦵\\minuso∘− \\minuso Direct Input : § ¶ $ £ ¥ ∇ ∞ · ∠ ∡ ∢ ♠ ♡ ♢ ♣ ♭ ♮ ♯ ✓ … ⋮ ⋯ ⋱ ! ‼ ⦵ Units In KaTeX, units are proportioned as they are in TeX. KaTeX units are different than CSS units. KaTeX Unit Value KaTeX Unit Value em CSS em bp 1/72​ inch × F × G ex CSS ex pc 12 KaTeX pt mu 1/18 CSS em dd 1238/1157​ KaTeX pt pt 1/72.27 inch × F × G cc 14856/1157 KaTeX pt mm 1 mm × F × G nd 685/642 KaTeX pt cm 1 cm × F × G nc 1370/107​ KaTeX pt in 1 inch × F × G sp 1/65536 KaTeX pt where: F = (font size of surrounding HTML text)/(10 pt) G = 1.21 by default, because KaTeX font-size is normally 1.21 × the surrounding font size. This value can be overridden by the CSS of an HTML page. The effect of style and size: Unit textstyle scriptscript huge em or ex \\rule{1em}{1em} \\scriptscriptstyle\\rule{1em}{1em} \\huge\\rule{1em}{1em} mu \\rule{18mu}{18mu} \\scriptscriptstyle\\rule{18mu}{18mu} \\huge\\rule{18mu}{18mu} others \\rule{10pt}{10pt} \\scriptscriptstyle\\rule{10pt}{10pt} \\huge\\rule{10pt}{10pt} #post table { min-width: max-content; } /* #post div.table-wrap::-webkit-scrollbar { height: 1rem; } #post div.table-wrap::-webkit-scrollbar-thumb { background: var(--theme-color); background-clip: content-box; border-top: 0.5rem solid transparent; } */ KaTex Test Code - upupming’s blog (link) ↩︎ ↩︎ Original Markdown Code of the blog article (link) ↩︎ ↩︎ ↩︎ Supported Functions - KaTex Official Site (link) ↩︎ ↩︎","link":"/posts/en/KaTeX-Test-Code/"},{"title":"Hello World","text":"This post is the first post generated when you run $ hexo init command. You can find the original source code from hexojs/hexo-starter.[1] Introduction Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment GitHub - hexojs/hexo-starter: Hexo Starter site. (link) ↩︎","link":"/posts/en/hello-world/"}],"tags":[{"name":"markdown","slug":"markdown","link":"en/tags/markdown/"},{"name":"test code","slug":"test-code","link":"en/tags/test-code/"},{"name":"highlight.js","slug":"highlight-js","link":"en/tags/highlight-js/"},{"name":"syntax highlighting","slug":"syntax-highlighting","link":"en/tags/syntax-highlighting/"},{"name":"hexo-renderer-markdown-it","slug":"hexo-renderer-markdown-it","link":"en/tags/hexo-renderer-markdown-it/"},{"name":"punycode","slug":"punycode","link":"en/tags/punycode/"},{"name":"npm update","slug":"npm-update","link":"en/tags/npm-update/"},{"name":"patch-package","slug":"patch-package","link":"en/tags/patch-package/"},{"name":"katex","slug":"katex","link":"en/tags/katex/"},{"name":"latex","slug":"latex","link":"en/tags/latex/"},{"name":"markdown-it","slug":"markdown-it","link":"en/tags/markdown-it/"},{"name":"quick start","slug":"quick-start","link":"en/tags/quick-start/"}],"categories":[{"name":"JavaScript","slug":"JavaScript","link":"en/categories/JavaScript/"},{"name":"Node.js","slug":"JavaScript/Node-js","link":"en/categories/JavaScript/Node-js/"},{"name":"TeX","slug":"JavaScript/TeX","link":"en/categories/JavaScript/TeX/"},{"name":"Hexo","slug":"JavaScript/Node-js/Hexo","link":"en/categories/JavaScript/Node-js/Hexo/"},{"name":"KaTeX","slug":"JavaScript/TeX/KaTeX","link":"en/categories/JavaScript/TeX/KaTeX/"},{"name":"Package Manager","slug":"JavaScript/Node-js/Package-Manager","link":"en/categories/JavaScript/Node-js/Package-Manager/"},{"name":"npm","slug":"JavaScript/Node-js/Package-Manager/npm","link":"en/categories/JavaScript/Node-js/Package-Manager/npm/"}]}