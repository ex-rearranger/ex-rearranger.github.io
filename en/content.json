{"pages":[{"title":"categories","text":"","link":"/en/categories/index.html"},{"title":"About","text":"본 블로그는 Hexo Butterfly 테마를 일부 변형한 것으로, 코드는 여기에서 확인할 수 있습니다. This blog is based on Hexo Butterfly theme with some modifications. You can check the code here. 프론트엔드 쪽 지식이 거의 전무합니다. 고로, 제가 수정한 블로그 코드가 틀린 것 같다는 생각이 든다면 그게 정답ㅎㅎ Almost NO frontend knowledge in my brain. If my code seems wrong, you’re 100% right:) 영어 실력 향상을 위해 영어로도 글을 쓸 생각입니다. 보다 정확한/적절한 표현이 있다면 언제든 알려주세요! Trying to write in both Korean and English to improve english skill. Please let me know for more correct and proper english expressions anytime! #page h1.page-title::before { font-family: \"Font Awesome 6 Free\"; content: \"\\f004\"; padding-right: 0.625em; display: inline-block; -webkit-font-smoothing: antialiased; text-rendering: optimizeLegibility; -moz-osx-font-smoothing: grayscale; font-feature-settings: 'liga'; }","link":"/about/index.html"},{"title":"tags","text":"","link":"/en/tags/index.html"},{"title":"","text":"{\"name\":\"App\",\"icons\":[{\"src\":\"/android-icon-36x36.png\",\"sizes\":\"36x36\",\"type\":\"image/png\",\"density\":\"0.75\"},{\"src\":\"/android-icon-48x48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\",\"density\":\"1.0\"},{\"src\":\"/android-icon-72x72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\",\"density\":\"1.5\"},{\"src\":\"/android-icon-96x96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\",\"density\":\"2.0\"},{\"src\":\"/android-icon-144x144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\",\"density\":\"3.0\"},{\"src\":\"/android-icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"density\":\"4.0\"},{\"src\":\"/android-chrome-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/android-chrome-512x512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}],\"theme_color\":\"#ffffff\",\"background_color\":\"#ffffff\",\"display\":\"standalone\"}","link":"/img/favicon_io/manifest.json"}],"posts":[{"title":"Highlight.js Test Code","text":"이 게시물은 한글과 영어로 동시에 작성되어 있습니다. If you want to see in English, please change the language by clicking the right-bottom gear button. This post is written in both Korean and English. 한글로 보시려면 페이지 우측 하단의 톱니바퀴 버튼을 눌러 언어를 변경하세요. This article is for testing my blog’s customized highlight color scheme. All the example source codes are scratched from highlight.js official site. Supported languages and their abbreviations can be found from highlight.js github page. If you want to test for your own blog, use this markdown file rather than copying it manually. 이 게시물은 제 블로그의 highlight color scheme을 테스트하기 위한 목적으로 작성되었습니다. 모든 예제 코드는 highlight.js 공식 사이트에서 그대로 긁어온 자료입니다. 지원하는 프로그래밍 언어의 종류와 줄임말은 highlight.js 깃헙 페이지에서 확인할 수 있습니다. 만일 직접 테스트해보고 싶으시다면, 공홈에서 수동으로 복붙하지 마시고 이 마크다운 파일을 다운받아 사용하세요. HTML, XML 12345678910111213&lt;!DOCTYPE html&gt;&lt;title&gt;Title&lt;/title&gt;&lt;style&gt;body {width: 500px;}&lt;/style&gt;&lt;script type=&quot;application/javascript&quot;&gt; function $init() {return true;}&lt;/script&gt;&lt;body&gt; &lt;p checked class=&quot;title&quot; id='title'&gt;Title&lt;/p&gt; &lt;!-- here goes the rest of the page --&gt;&lt;/body&gt; Bash 1234567891011121314151617#!/bin/bash###### CONFIGACCEPTED_HOSTS=&quot;/root/.hag_accepted.conf&quot;BE_VERBOSE=falseif [ &quot;$UID&quot; -ne 0 ]then echo &quot;Superuser rights required&quot; exit 2figenApacheConf(){ echo -e &quot;# Host ${HOME_DIR}$1/$2 :&quot;}echo '&quot;quoted&quot;' | tr -d \\&quot; &gt; text.txt C++ 1234567891011121314#include &lt;iostream&gt;int main(int argc, char *argv[]) { /* An annoying &quot;Hello World&quot; example */ for (auto i = 0; i &lt; 0xFFFF; i++) cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; endl; char c = '\\n'; unordered_map &lt;string, vector&lt;string&gt; &gt; m; m[&quot;key&quot;] = &quot;\\\\\\\\&quot;; // this is an error return -2e3 + 12l;} C# 1234567891011121314151617using System.IO.Compression;#pragma warning disable 414, 3021namespace MyApplication{ [Obsolete(&quot;...&quot;)] class Program : IInterface { public static List&lt;int&gt; JustDoIt(int count) { Span&lt;int&gt; numbers = stackalloc int[length]; Console.WriteLine($&quot;Hello {Name}!&quot;); return new List&lt;int&gt;(new int[] { 1, 2, 3 }) } }} CSS 12345678910111213141516@font-face { font-family: Chunkfive; src: url('Chunkfive.otf');}body, .usertext { color: #F0F0F0; background: #600; font-family: Chunkfive, sans; --heading-1: 30px/32px Helvetica, sans-serif;}@import url(print.css);@media print { a[href^=http]::after { content: attr(href) }} Markdown 12345678910111213141516171819202122# hello worldyou can write text [with links](http://example.com) inline or [link references][1].* one _thing_ has *em*phasis* two __things__ are **bold**[1]: http://example.com---hello world===========&lt;this_is inline=&quot;xml&quot;&gt;&lt;/this_is&gt;&gt; markdown is so cool so are code segments1. one thing (yeah!)2. two thing `i can write code`, and `more` wipee! Diff 123456789101112131415161718192021222324252627282930Index: languages/ini.js===================================================================--- languages/ini.js (revision 199)+++ languages/ini.js (revision 200)@@ -1,8 +1,7 @@ hljs.LANGUAGES.ini = { case_insensitive: true,- defaultMode:- {+ defaultMode: { contains: ['comment', 'title', 'setting'], illegal: '[^\\\\s]' },*** /path/to/original timestamp--- /path/to/new timestamp****************** 1,3 ****--- 1,9 ----+ This is an important+ notice! It should+ therefore be located at+ the beginning of this+ document!! compress the size of the! changes. It is important to spell Ruby 12345678910111213# The Greeter classclass Greeter def initialize(name) @name = name.capitalize end def salute puts &quot;Hello #{@name}!&quot; endendg = Greeter.new(&quot;world&quot;)g.salute Go 123456789101112package mainimport &quot;fmt&quot;func main() { ch := make(chan float64) ch &lt;- 1.0e10 // magic number x, ok := &lt;- ch defer fmt.Println(`exitting now\\`) go println(len(&quot;hello world!&quot;)) return} TOML, INI 123456789101112; boilerplate[package]name = &quot;some_name&quot;authors = [&quot;Author&quot;]description = &quot;This is \\a description&quot;[[lib]]name = ${NAME}default = Trueauto = nocounter = 1_000 Java 12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract strictfp class L2Char extends L2Object { public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) { _ai = null; log(&quot;Should not be called&quot;); if (1 &gt; 5) { // wtf!? return; } }} JavaScript 123456789101112131415161718192021function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=&quot;${cls}&quot;`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i &lt; classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log('undefined'); } return ( &lt;div&gt; &lt;web-component&gt;{block}&lt;/web-component&gt; &lt;/div&gt; )}export $initHighlight; JSON 123456789101112[ { &quot;title&quot;: &quot;apples&quot;, &quot;count&quot;: [12000, 20000], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }, { &quot;title&quot;: &quot;oranges&quot;, &quot;count&quot;: [17500, null], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }] Kotlin 1234567891011121314151617181920212223242526272829import kotlinx.serialization.Serializableimport kotlin.random.Randominterface Building@Serializableclass House( private val rooms: Int? = 3, val name: String = &quot;Palace&quot;) : Building { var residents: Int = 4 get() { println(&quot;Current residents: $field&quot;) return field } fun burn(evacuation: (people: Int) -&gt; Boolean) { rooms ?: return if (evacuation((0..residents).random())) residents = 0 }}fun main() { val house = House(name = &quot;Skyscraper 1&quot;) house.burn { Random.nextBoolean() }} Less 123456789101112131415161718192021222324252627@import &quot;fruits&quot;;@rhythm: 1.5em;@media screen and (min-resolution: 2dppx) { body {font-size: 125%}}section &gt; .foo + #bar:hover [href*=&quot;less&quot;] { margin: @rhythm 0 0 @rhythm; padding: calc(5% + 20px); background: #f00ba7 url(http://placehold.alpha-centauri/42.png) no-repeat; background-image: linear-gradient(-135deg, wheat, fuchsia) !important ; background-blend-mode: multiply;}@font-face { font-family: /* ? */ 'Omega'; src: url('../fonts/omega-webfont.woff?v=2.0.2');}.icon-baz::before { display: inline-block; font-family: &quot;Omega&quot;, Alpha, sans-serif; content: &quot;\\f085&quot;; color: rgba(98, 76 /* or 54 */, 231, .75);} Lua 1234567891011121314151617181920212223242526272829303132--[[Simple signal/slot implementation]]local signal_mt = { __index = { register = table.insert }}function signal_mt.__index:emit(... --[[ Comment in params ]]) for _, slot in ipairs(self) do slot(self, ...) endendlocal function create_signal() return setmetatable({}, signal_mt)end-- Signal testlocal signal = create_signal()signal:register(function(signal, ...) print(...)end)signal:emit('Answer to Life, the Universe, and Everything:', 42)--[==[ [=[ [[Nested ]]multi-line ]=]comment ]==][==[ Nested[=[ multi-line[[ string]] ]=] ]==] Makefile 12345678910111213# MakefileBUILDDIR = _buildEXTRAS ?= $(BUILDDIR)/extras.PHONY: main cleanmain: @echo &quot;Building main facility...&quot; build_main $(BUILDDIR)clean: rm -rf $(BUILDDIR)/* Perl 1234567891011121314151617181920212223242526272829303132333435363738394041# loads objectsub load{ my $flds = $c-&gt;db_load($id,@_) || do { Carp::carp &quot;Can`t load (class: $c, id: $id): '$!'&quot;; return undef }; my $o = $c-&gt;_perl_new(); $id12 = $id / 24 / 3600; $o-&gt;{'ID'} = $id12 + 123; #$o-&gt;{'SHCUT'} = $flds-&gt;{'SHCUT'}; my $p = $o-&gt;props; my $vt; $string =~ m/^sought_text$/; $items = split //, 'abc'; $string //= &quot;bar&quot;; for my $key (keys %$p) { if(${$vt.'::property'}) { $o-&gt;{$key . '_real'} = $flds-&gt;{$key}; tie $o-&gt;{$key}, 'CMSBuilder::Property', $o, $key; } } $o-&gt;save if delete $o-&gt;{'_save_after_load'}; # GH-117 my $g = glob(&quot;/usr/bin/*&quot;); return $o;}__DATA__@@ layouts/default.html.ep&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt;&lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;%= content %&gt;&lt;/body&gt;&lt;/html&gt;__END__=head1 NAMEPOD till the end of file Objective-C 12345678910111213#import &lt;UIKit/UIKit.h&gt;#import &quot;Dependency.h&quot;@protocol WorldDataSource@optional- (NSString*)worldName;@required- (BOOL)allowsToLive;@end@property (nonatomic, readonly) NSString *title;- (IBAction) show;@end PHP 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172require_once 'Zend/Uri/Http.php';namespace Location\\Web;interface Factory{ static function _factory();}abstract class URI extends BaseURI implements Factory{ abstract function test(); public static $st1 = 1; const ME = &quot;Yo&quot;; var $list = NULL; private $var; /** * Returns a URI * * @return URI */ static public function _factory($stats = array(), $uri = 'http') { echo __METHOD__; $uri = explode(':', $uri, 0b10); $schemeSpecific = isset($uri[1]) ? $uri[1] : ''; $desc = 'Multiline description'; // Security check if (!ctype_alnum($scheme)) { throw new Zend_Uri_Exception('Illegal scheme'); } $this-&gt;var = 0 - self::$st; $this-&gt;list = list(Array(&quot;1&quot;=&gt; 2, 2=&gt;self::ME, 3 =&gt; \\Location\\Web\\URI::class)); return [ 'uri' =&gt; $uri, 'value' =&gt; null, ]; }}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};enum Foo: string { case Test = 'test';}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};echo URI::ME . URI::$st1;__halt_compiler () ; dataheredataheredatahere */datahere Python 123456789101112@requires_authorization(roles=[&quot;ADMIN&quot;])def somefunc(param1='', param2=0): r'''A docstring''' if param1 &gt; param2: # interesting print 'Gre\\'ater' return (param2 - param1 + 1 + 0b10l) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' R 12345678910111213141516171819202122232425262728293031323334353637383940414243444546require(stats)#' Compute different averages#'#' @param x \\code{numeric} vector of sample data#' @param type \\code{character} vector of length 1 specifying the average type#' @return \\code{centre} returns the sample average according to the chosen method.#' @examples#' centre(rcauchy(10), &quot;mean&quot;)#' @exportcentre &lt;- function(x, type) { switch(type, mean = mean(x), median = median(x), trimmed = mean(x, trim = .1))}x &lt;- rcauchy(10)centre(x, &quot;mean&quot;)library(ggplot2)models &lt;- tibble::tribble( ~model_name, ~ formula, &quot;length-width&quot;, Sepal.Length ~ Petal.Width + Petal.Length, &quot;interaction&quot;, Sepal.Length ~ Petal.Width * Petal.Length)iris %&gt;% nest_by(Species) %&gt;% left_join(models, by = character()) %&gt;% rowwise(Species, model_name) %&gt;% mutate(model = list(lm(formula, data = data))) %&gt;% summarise(broom::glance(model))#&gt; `summarise()` regrouping output by 'Species', 'model_name' (override with `.groups` argument)#&gt; # A tibble: 6 x 13#&gt; # Groups: Species, model_name [6]#&gt; Species model_name r.squared adj.r.squared sigma statistic p.value df#&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;#&gt; 1 setosa length-wi… 0.112 0.0739 0.339 2.96 6.18e- 2 3#&gt; 2 setosa interacti… 0.133 0.0760 0.339 2.34 8.54e- 2 4#&gt; 3 versic… length-wi… 0.574 0.556 0.344 31.7 1.92e- 9 3#&gt; 4 versic… interacti… 0.577 0.549 0.347 20.9 1.11e- 8 4#&gt; 5 virgin… length-wi… 0.747 0.736 0.327 69.3 9.50e-15 3#&gt; 6 virgin… interacti… 0.757 0.741 0.323 47.8 3.54e-14 4#&gt; # … with 5 more variables: logLik &lt;dbl&gt;, AIC &lt;dbl&gt;, BIC &lt;dbl&gt;, deviance &lt;dbl&gt;,#&gt; # df.residual &lt;int&gt; Rust 12345678910111213141516#[derive(Debug)]pub enum State { Start, Transient, Closed,}impl From&lt;&amp;'a str&gt; for State { fn from(s: &amp;'a str) -&gt; Self { match s { &quot;start&quot; =&gt; State::Start, &quot;closed&quot; =&gt; State::Closed, _ =&gt; unreachable!(), } }} SCSS 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273@import &quot;compass/reset&quot;;// variables$colorGreen: #008000;$colorGreenDark: darken($colorGreen, 10);@mixin container { max-width: 980px;}// mixins with parameters@mixin button($color:green) { @if ($color == green) { background-color: #008000; } @else if ($color == red) { background-color: #B22222; }}button { @include button(red);}div,.navbar,#header,input[type=&quot;input&quot;] { font-family: &quot;Helvetica Neue&quot;, Arial, sans-serif; width: auto; margin: 0 auto; display: block;}.row-12 &gt; [class*=&quot;spans&quot;] { border-left: 1px solid #B5C583;}// nested definitionsul { width: 100%; padding: { left: 5px; right: 5px; } li { float: left; margin-right: 10px; .home { background: url('http://placehold.it/20') scroll no-repeat 0 0; } }}.banner { @extend .container;}a { color: $colorGreen; &amp;:hover { color: $colorGreenDark; } &amp;:visited { color: #c458cb; }}@for $i from 1 through 5 { .span#{$i} { width: 20px*$i; }}@mixin mobile { @media screen and (max-width : 600px) { @content; }} Shell Session 1234567891011$ echo $EDITORvim$ git checkout mainSwitched to branch 'main'Your branch is up-to-date with 'origin/main'.$ git pushEverything up-to-date$ echo 'All&gt; done!'Alldone! SQL 123456789101112CREATE TABLE &quot;topic&quot; ( &quot;id&quot; integer NOT NULL PRIMARY KEY, &quot;forum_id&quot; integer NOT NULL, &quot;subject&quot; varchar(255) NOT NULL);ALTER TABLE &quot;topic&quot;ADD CONSTRAINT forum_id FOREIGN KEY (&quot;forum_id&quot;)REFERENCES &quot;forum&quot; (&quot;id&quot;);-- Initialsinsert into &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)values (2, 'D''artagnian'); Swift 123456789101112131415import Foundation@objc class Person: Entity { var name: String! var age: Int! init(name: String, age: Int) { /* /* ... */ */ } // Return a descriptive string for this person func description(offset: Int = 0) -&gt; String { return &quot;\\(name) is \\(age + offset) years old&quot; }} YAML 123456789101112131415161718192021222324252627282930313233343536373839---# commentstring_1: &quot;Bar&quot;string_2: 'bar'string_3: barinline_keys_ignored: sompath/name/file.jpgkeywords_in_yaml: - true - false - TRUE - FALSE - 21 - 21.0 - !!str 123&quot;quoted_key&quot;: &amp;foobar bar: foo foo: &quot;foo&quot;: barreference: *foobarmultiline_1: | Multiline Stringmultiline_2: &gt; Multiline Stringmultiline_3: &quot; Multiline string &quot;ansible_variables: &quot;foo {{variable}}&quot;array_nested:- a- b: 1 c: 2- b- comment TypeScript 1234567891011121314class MyClass { public static myValue: string; constructor(init: string) { this.myValue = init; }}import fs = require(&quot;fs&quot;);module MyModule { export interface MyInterface extends Other { myProperty: any; }}declare magicNumber number;myArray.forEach(() =&gt; { }); // fat arrow syntax Visual Basic .NET 123456789101112131415161718192021222324252627282930313233343536373839404142Imports SystemImports System.IO#Const DEBUG = TrueNamespace Highlighter.Test ''' &lt;summary&gt;This is an example class.&lt;/summary&gt; Public Class Program Protected Shared hello As Integer = 3 Private Const ABC As Boolean = False#Region &quot;Code&quot; ' Cheers! &lt;STAThread()&gt; _ Public Shared Sub Main(ByVal args() As String, ParamArray arr As Object) Handles Form1.Click On Error Resume Next If ABC Then While ABC : Console.WriteLine() : End While For i As Long = 0 To 1000 Step 123 Try System.Windows.Forms.MessageBox.Show(CInt(&quot;1&quot;).ToString()) Catch ex As Exception ' What are you doing? Well... Dim exp = CType(ex, IOException) REM ORZ Return End Try Next Else Dim l As New System.Collections.List&lt;String&gt;() SyncLock l If TypeOf l Is Decimal And l IsNot Nothing Then RemoveHandler button1.Paint, delegate End If Dim d = New System.Threading.Thread(AddressOf ThreadProc) Dim a = New Action(Sub(x, y) x + y) Static u = From x As String In l Select x.Substring(2, 4) Where x.Length &gt; 0 End SyncLock Do : Laugh() : Loop Until hello = 4 End If End Sub#End Region End ClassEnd Namespace","link":"/posts/highlight-test-code/"},{"title":"KaTeX Test Code","text":"Introduction Why KaTeX KaTeX\\KaTeXKATE​X is a fast, easy-to-use JavaScript library for TeX math rendering on the web. hexo-theme-butterfly recommends to use KaTeX rather than MathJax for better performance. KaTex supports copy and paste of the rendered math expressions. Reference All the #Supported Functions content is copied from upupming’s blog[1][2]. The auther[1:1] states that this is the revised version of the original content from KaTeX Supported Functions[3]. I made only one change to the original content Change #Macros section to avoid the conflict with markdown syntax. Supported Functions Accents a′a'a′ a' a~\\tilde{a}a~ \\tilde{a} g˚\\mathring{g}g˚​ \\mathring{g} a′′a''a′′ a'' ac~\\widetilde{ac}ac \\widetilde{ac} AB⏠\\overgroup{AB}AB \\overgroup{AB} a′a^{\\prime}a′ a^{\\prime} AB~\\utilde{AB}AB​ \\utilde{AB} AB⏡\\undergroup{AB}AB​ \\undergroup{AB} aˊ\\acute{a}aˊ \\acute{a} F⃗\\vec{F}F \\vec{F} AB⇒\\Overrightarrow{AB}AB \\Overrightarrow{AB} yˉ\\bar{y}yˉ​ \\bar{y} AB←\\overleftarrow{AB}AB \\overleftarrow{AB} AB→\\overrightarrow{AB}AB \\overrightarrow{AB} a˘\\breve{a}a˘ \\breve{a} AB←\\underleftarrow{AB}AB​ \\underleftarrow{AB} AB→\\underrightarrow{AB}AB​ \\underrightarrow{AB} aˇ\\check{a}aˇ \\check{a} ac↼\\overleftharpoon{ac}ac \\overleftharpoon{ac} ac⇀\\overrightharpoon{ac}ac \\overrightharpoon{ac} a˙\\dot{a}a˙ \\dot{a} AB↔\\overleftrightarrow{AB}AB \\overleftrightarrow{AB} AB⏞\\overbrace{AB}AB \\overbrace{AB} a¨\\ddot{a}a¨ \\ddot{a} AB↔\\underleftrightarrow{AB}AB​ \\underleftrightarrow{AB} AB⏟\\underbrace{AB}AB​ \\underbrace{AB} aˋ\\grave{a}aˋ \\grave{a} AB‾\\overline{AB}AB \\overline{AB} ABundefined\\overlinesegment{AB}AB \\overlinesegment{AB} θ^\\hat{\\theta}θ^ \\hat{\\theta} AB‾\\underline{AB}AB​ \\underline{AB} ABundefined\\underlinesegment{AB}AB​ \\underlinesegment{AB} ac^\\widehat{ac}ac \\widehat{ac} acˇ\\widecheck{ac}ac \\widecheck{ac} Accent functions inside \\text{…} aˊ\\text{\\'{a}}aˊ \\'{a} a˜\\text{\\~{a}}a˜ \\~{a} a˙\\text{\\.{a}}a˙ \\.{a} a˝\\text{\\H{a}}a˝ \\H{a} aˋ\\text{\\`{a}}aˋ \\`{a} aˉ\\text{\\={a}}aˉ \\={a} a¨\\text{\\&quot;{a}}a¨ \\&quot;{a} aˇ\\text{\\v{a}}aˇ \\v{a} aˆ\\text{\\^{a}}aˆ \\^{a} a˘\\text{\\u{a}}a˘ \\u{a} a˚\\text{\\r{a}}a˚ \\r{a} See also letters Delimiters ( )(~)( ) ( ) ( )\\lparen~\\rparen( ) \\lparen ~~~~ \\rparen ⌈ ⌉⌈~⌉⌈ ⌉ ⌈ ⌉ ⌈ ⌉\\lceil~\\rceil⌈ ⌉ \\lceil ~~~~~ \\rceil ↑\\uparrow↑ \\uparrow [ ][~][ ] [ ] [ ]\\lbrack~\\rbrack[ ] \\lbrack ~~~~ \\rbrack ⌊ ⌋⌊~⌋⌊ ⌋ ⌊ ⌋ ⌊ ⌋\\lfloor~\\rfloor⌊ ⌋ \\lfloor ~~~~~ \\rfloor ↓\\downarrow↓ \\downarrow {}\\{ \\}{} \\{ \\} {}\\lbrace \\rbrace{} \\lbrace ~~~~ \\rbrace ⎰⎱⎰⎱⎰⎱ ⎰⎱ ⎰⎱\\lmoustache \\rmoustache⎰⎱ \\lmoustache ~~~~ \\rmoustache ↕\\updownarrow↕ \\updownarrow ⟨ ⟩⟨~⟩⟨ ⟩ ⟨ ⟩ ⟨ ⟩\\langle~\\rangle⟨ ⟩ \\langle ~~~~ \\rangle ⟮ ⟯⟮~⟯⟮ ⟯ ⟮ ⟯ ⟮ ⟯\\lgroup~\\rgroup⟮ ⟯ \\lgroup ~~~~~ \\rgroup ⇑\\Uparrow⇑ \\Uparrow ∣\\vert∣ | ∣\\vert∣ \\vert ┌┐┌ ┐┌┐ ┌ ┐ ⌜⌝\\ulcorner \\urcorner┌┐ \\ulcorner ~~~~ \\urcorner ⇓\\Downarrow⇓ \\Downarrow ∥\\Vert∥ \\| ∥\\Vert∥ \\Vert └┘└ ┘└┘ └ ┘ ⌞⌟\\llcorner \\lrcorner└┘ \\llcorner ~~~~ \\lrcorner ⇕\\Updownarrow⇕ \\Updownarrow ∣ ∣\\lvert~\\rvert∣ ∣ \\lvert ~~~~ \\rvert ∥ ∥\\lVert~\\rVert∥ ∥ \\lVert ~~~~~ \\rVert \\left. \\right. \\\\backslash\\ \\backslash ⟨ ⟩\\lang~\\rang⟨ ⟩ \\lang ~~~~ \\rang &lt; &gt;\\lt~\\gt&lt; &gt; \\lt \\gt Delimiter Sizing (AB)\\left(\\LARGE{AB}\\right)(AB) \\left(\\LARGE{AB}\\right) (((((( \\big( \\Big( \\bigg( \\Bigg(((((( ( \\big( \\Big( \\bigg( \\Bigg( \\left \\big \\bigl \\bigm \\bigr \\middle \\Big \\Bigl \\Bigm \\Bigr \\right \\bigg \\biggl \\biggm \\biggr \\Bigg \\Biggl \\Biggm \\Biggr Environments abcd\\begin{matrix} a &amp; b \\\\ c &amp; d \\end{matrix}ac​bd​ \\begin{matrix} a &amp; b \\\\ c &amp; d\\end{matrix} abcd\\begin{array}{cc}a &amp; b\\\\c &amp; d\\end{array}ac​bd​ \\begin{array}{cc} a &amp; b \\\\ c &amp; d\\end{array} (abcd)\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix}(ac​bd​) \\begin{pmatrix} a &amp; b \\\\ c &amp; d\\end{pmatrix} [abcd]\\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix}[ac​bd​] \\begin{bmatrix} a &amp; b \\\\ c &amp; d\\end{bmatrix} ∣abcd∣\\begin{vmatrix} a &amp; b \\\\ c &amp; d \\end{vmatrix}​ac​bd​​ \\begin{vmatrix} a &amp; b \\\\ c &amp; d\\end{vmatrix} ∥abcd∥\\begin{Vmatrix} a &amp; b \\\\ c &amp; d \\end{Vmatrix}​ac​bd​​ \\begin{Vmatrix} a &amp; b \\\\ c &amp; d\\end{Vmatrix} {abcd}\\begin{Bmatrix} a &amp; b \\\\ c &amp; d \\end{Bmatrix}{ac​bd​} \\begin{Bmatrix} a &amp; b \\\\ c &amp; d\\end{Bmatrix} abcdefghi\\def\\arraystretch{1.5}\\begin{array}{c:c:c} a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i \\end{array}adg​beh​cfi​​ \\def\\arraystretch{1.5} \\begin{array}{c:c:c} a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i\\end{array} a=b+cd+e=f\\begin{aligned} a&amp;=b+c \\\\ d+e&amp;=f \\end{aligned}ad+e​=b+c=f​ \\begin{aligned} a&amp;=b+c \\\\ d+e&amp;=f\\end{aligned} 10x+3y=23x+13y=4\\begin{alignedat}{2}10&amp;x+&amp;3&amp;y=2\\\\3&amp;x+&amp;13&amp;y=4\\end{alignedat}103​x+x+​313​y=2y=4​ \\begin{alignedat}{2} 10&amp;x+ &amp;3&amp;y = 2 \\\\ 3&amp;x+&amp;13&amp;y = 4\\end{alignedat} a=be=b+c\\begin{gathered} a=b \\\\ e=b+c \\end{gathered}a=be=b+c​ \\begin{gathered} a=b \\\\ e=b+c\\end{gathered} x={aif bcif dx = \\begin{cases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d \\end{cases}x={ac​if bif d​ x = \\begin{cases} a &amp;\\text{if } b \\\\ c &amp;\\text{if } d\\end{cases} KaTeX also supports darray and dcases. Acceptable line separators include: \\\\, \\cr, \\\\[distance], and \\cr[distance]. Distance can be written with any of the KaTeX units. The {array} environment supports | and : vertical separators. The {array} environment does not yet support \\cline or \\multicolumn. HTML \\href\\href{https://katex.org/}{\\KaTeX}\\href \\href{https://katex.org/}{\\KaTeX} \\url\\url{https://katex.org/}\\url \\url{https://katex.org/} Letters and Unicode Greek Letters Direct Input: ABΓΔEZHΘIKΛMNΞOΠPΣTΥΦXΨΩΑ Β Γ Δ Ε Ζ Η Θ Ι \\allowbreak Κ Λ Μ Ν Ξ Ο Π Ρ Σ Τ Υ Φ Χ Ψ ΩABΓΔEZHΘIKΛMNΞOΠPΣTΥΦXΨΩ αβγδϵζηθικλμνξoπρστυϕχψωεϑϖϱςφ\\allowbreak α β γ δ ϵ ζ η θ ι κ λ μ ν ξ o π \\allowbreak ρ σ τ υ ϕ χ ψ ω ε ϑ ϖ ϱ ς φαβγδϵζηθικλμνξoπρστυϕχψωεϑϖϱςφ A\\AlphaA \\Alpha B\\BetaB \\Beta Γ\\GammaΓ \\Gamma Δ\\DeltaΔ \\Delta E\\EpsilonE \\Epsilon Z\\ZetaZ \\Zeta H\\EtaH \\Eta Θ\\ThetaΘ \\Theta I\\IotaI \\Iota K\\KappaK \\Kappa Λ\\LambdaΛ \\Lambda M\\MuM \\Mu N\\NuN \\Nu Ξ\\XiΞ \\Xi O\\OmicronO \\Omicron Π\\PiΠ \\Pi Σ\\SigmaΣ \\Sigma T\\TauT \\Tau Υ\\UpsilonΥ \\Upsilon Φ\\PhiΦ \\Phi X\\ChiX \\Chi Ψ\\PsiΨ \\Psi Ω\\OmegaΩ \\Omega Γ\\varGammaΓ \\varGamma Δ\\varDeltaΔ \\varDelta Θ\\varThetaΘ \\varTheta Λ\\varLambdaΛ \\varLambda Ξ\\varXiΞ \\varXi Π\\varPiΠ \\varPi Σ\\varSigmaΣ \\varSigma Υ\\varUpsilonΥ \\varUpsilon Φ\\varPhiΦ \\varPhi Ψ\\varPsiΨ \\varPsi Ω\\varOmegaΩ \\varOmega α\\alphaα \\alpha β\\betaβ \\beta γ\\gammaγ \\gamma δ\\deltaδ \\delta ϵ\\epsilonϵ \\epsilon ζ\\zetaζ \\zeta η\\etaη \\eta θ\\thetaθ \\theta ι\\iotaι \\iota κ\\kappaκ \\kappa λ\\lambdaλ \\lambda μ\\muμ \\mu ν\\nuν \\nu ξ\\xiξ \\xi ο\\omicronο \\omicron π\\piπ \\pi ρ\\rhoρ \\rho σ\\sigmaσ \\sigma τ\\tauτ \\tau υ\\upsilonυ \\upsilon ϕ\\phiϕ \\phi χ\\chiχ \\chi ψ\\psiψ \\psi ω\\omegaω \\omega ε\\varepsilonε \\varepsilon ϰ\\varkappaϰ \\varkappa ϑ\\varthetaϑ \\vartheta ϑ\\thetasymϑ \\thetasym ϖ\\varpiϖ \\varpi ϱ\\varrhoϱ \\varrho ς\\varsigmaς \\varsigma φ\\varphiφ \\varphi $\\digamma $ \\digamma Other Letters ı\\imath \\imath ∇\\nabla∇ \\nabla ℑ\\Imℑ \\Im R\\RealsR \\Reals Œ\\text{\\OE}Œ \\text{\\OE} ȷ\\jmath \\jmath ∂\\partial∂ \\partial ℑ\\imageℑ \\image ℘\\wp℘ \\wp ø\\text{\\o}ø \\text{\\o} ℵ\\alephℵ \\aleph ⅁\\Game⅁ \\Game k\\Bbbkk \\Bbbk ℘\\weierp℘ \\weierp Ø\\text{\\O}Ø \\text{\\O} ℵ\\alefℵ \\alef Ⅎ\\FinvℲ \\Finv N\\NN \\N Z\\ZZ \\Z ß\\text{\\ss}ß \\text{\\ss} ℵ\\alefsymℵ \\alefsym C\\cnumsC \\cnums N\\natnumsN \\natnums a˚\\text{\\aa}a˚ \\text{\\aa} ı\\text{\\i}ı \\text{\\i} ℶ\\bethℶ \\beth C\\ComplexC \\Complex R\\RR \\R A˚\\text{\\AA}A˚ \\text{\\AA} ȷ\\text{\\j}ȷ \\text{\\j} ℷ\\gimelℷ \\gimel ℓ\\ellℓ \\ell ℜ\\Reℜ \\Re æ\\text{\\ae}æ \\text{\\ae} ℸ\\dalethℸ \\daleth ℏ\\hbarℏ \\hbar ℜ\\realℜ \\real Æ\\text{\\AE}Æ \\text{\\AE} ð\\ethð \\eth ℏ\\hslashℏ \\hslash R\\realsR \\reals œ\\text{\\oe}œ \\text{\\oe} Direct Input: ∂∇ℑℲℵℶℷℸ⅁ℏð∂ ∇ ℑ Ⅎ ℵ ℶ ℷ ℸ ⅁ ℏ ð∂∇ℑℲℵℶℷℸ⅁ℏð ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖÙÚÛÜÝÞßàáâãäåçèéêëìíîïðñòóôöùúûüýþÿ Unicode Mathematical Alphanumeric Symbols Item Range Item Range Bold 𝐀-𝐙 𝐚-𝐳 𝟎-𝟗\\text{𝐀-𝐙 𝐚-𝐳 𝟎-𝟗}A-Z a-z 0-9 Double-struck 𝔸-Z 𝕜\\text{𝔸-}ℤ\\ 𝕜A-Z k Italic 𝐴-𝑍 𝑎-𝑧\\text{𝐴-𝑍 𝑎-𝑧}A-Z a-z Sans serif 𝖠-𝖹 𝖺-𝗓 𝟢-𝟫\\text{𝖠-𝖹 𝖺-𝗓 𝟢-𝟫}A-Z a-z 0-9 Bold Italic 𝑨-𝒁 𝒂-𝒛\\text{𝑨-𝒁 𝒂-𝒛}A-Z a-z Sans serif bold 𝗔-𝗭 𝗮-𝘇 𝟬-𝟵\\text{𝗔-𝗭 𝗮-𝘇 𝟬-𝟵}A-Z a-z 0-9 Script 𝒜-𝒵\\text{𝒜-𝒵}A-Z Sans serif italic 𝘈-𝘡 𝘢-𝘻\\text{𝘈-𝘡 𝘢-𝘻}A-Z a-z Fractur 𝔄-Z 𝔞-𝔷\\text{𝔄-}ℨ\\text{ 𝔞-𝔷}A-Z a-z Monospace 𝙰-𝚉 𝚊-𝚣 𝟶-𝟿\\text{𝙰-𝚉 𝚊-𝚣 𝟶-𝟿}A-Z a-z 0-9 Unicode The letters listed above will render in any KaTeX rendering mode. If the KaTeX rendering mode is set to strict: false or strict:&quot;warn&quot; (default), then KaTeX will accept all Unicode letters. The letters not listed above will be rendered from system fonts, not KaTeX-supplied fonts, so their typography may clash. They may also cause small vertical alignment issues. KaTeX has detailed metrics for glyphs in Latin, Greek, and Cyrillic, but other glyphs are treated as if they are each as tall as the letter M. For Persian composite characters, a user-supplied plug-in is under development. Layout Annotation 5\\cancel{5}5​ \\cancel{5} a+b+c⏞note\\overbrace{a+b+c}^{\\text{note}}a+b+c​note​ \\overbrace{a+b+c}^{\\text{note}} 5\\bcancel{5}5​ \\bcancel{5} a+b+c⏟note\\underbrace{a+b+c}_{\\text{note}}notea+b+c​​ \\underbrace{a+b+c}_{\\text{note}} ABC\\xcancel{ABC}ABC \\xcancel{ABC} ≠\\not == \\not = abc\\sout{abc}abc \\sout{abc} π=cd\\boxed{\\pi=\\frac c d}π=dc​​ \\boxed{\\pi=\\frac c d} \\tag{hi} x+y^{2x} x+y2x(hi)\\tag{hi} x+y^{2x} x+y2x(hi) \\tag*{hi} x+y^{2x} x+y2xhi\\tag*{hi} x+y^{2x} x+y2xhi Line Breaks KaTeX 0.10.0+ will insert automatic line breaks in inline math after relations or binary operators such as “=” or “+”. These can be suppressed by \\nobreak or by placing math inside a pair of braces, as in {F=ma}. \\allowbreak will allow automatic line breaks at locations other than relations or operators. Hard line breaks are \\\\ and \\newline. In display math, KaTeX does not insert automatic line breaks. It ignores display math hard line breaks when rendering option strict: true. Vertical Layout xnx_nxn​ x_n =!\\stackrel{!}{=}=! \\stackrel{!}{=} aba \\atop bba​ a \\atop b exe^xex e^x =!\\overset{!}{=}=! \\overset{!}{=} abca\\raisebox{0.25em}{b}cabc a\\raisebox{0.25em}{b}c $_u^o $ _u^o =!\\underset{!}{=}!=​ \\underset{!}{=} The second argument of \\raisebox can contain math if it is nested within $…$ delimiters, as in \\raisebox{0.25em}{$\\frac a b$} Overlap and Spacing =/ {=}\\mathllap{/\\,}=/ {=}\\mathllap{/\\,} (x2)\\left(x^{\\smash{2}}\\right)(x2) \\left(x^{\\smash{2}}\\right) /=\\mathrlap{\\,/}{=}/= \\mathrlap{\\,/}{=} y\\sqrt{\\smash[b]{y}}y​ \\sqrt{\\smash[b]{y}} ∑1≤i≤j≤nxij\\displaystyle\\sum_{\\mathclap{1\\le i\\le j\\le n}} x_{ij}1≤i≤j≤n∑​xij​ \\sum_{\\mathclap{1\\le i\\le j\\le n}} x_{ij} KaTeX also supports \\llap, \\rlap, and \\clap, but they will take only text, not math, as arguments. Spacing Function Produces Function Produces \\, ³∕₁₈ em space \\kern{distance} space, width = distance \\thinspace ³∕₁₈ em space \\mkern{distance} space, width = distance \\: ⁴∕₁₈ em space \\mskip{distance} space, width = distance \\medspace ⁴∕₁₈ em space \\hskip{distance} space, width = distance \\; ⁵∕₁₈ em space \\hspace{distance} space, width = distance \\thickspace ⁵∕₁₈ em space \\hspace*{distance} space, width = distance \\enspace ½ em space \\phantom{content} space the width and height of content \\quad 1 em space \\hphantom{content} space the width of content \\qquad 2 em space \\vphantom{content} a strut the height of content ~ non-breaking space \\! – ³∕₁₈ em space \\&lt;space&gt; space \\negthinspace – ³∕₁₈ em space \\nobreakspace non-breaking space \\negmedspace – ⁴∕₁₈ em space \\space space \\negthickspace – ⁵∕₁₈ em space Notes: distance will accept any of the KaTeX units. \\kern, \\mkern, \\mskip, and \\hspace accept unbraced distances, as in: \\kern1em. \\mkern and \\mskip will not work in text mode and both will write a console warning for any unit except mu. Logic and Set Theory ∀\\forall∀ \\forall ∁\\complement∁ \\complement ∴\\therefore∴ \\therefore ∅\\emptyset∅ \\emptyset ∃\\exists∃ \\exists ⊂\\subset⊂ \\subset ∵\\because∵ \\because ∅\\empty∅ \\empty ∃\\exist∃ \\exist ⊃\\supset⊃ \\supset ↦\\mapsto↦ \\mapsto ∅\\varnothing∅ \\varnothing ∄\\nexists∄ \\nexists ∣\\mid∣ \\mid →\\to→ \\to ⟹ \\implies⟹ \\implies ∈\\in∈ \\in ∧\\land∧ \\land ←\\gets← \\gets ⟸ \\impliedby⟸ \\impliedby ∈\\isin∈ \\isin ∨\\lor∨ \\lor ↔\\leftrightarrow↔ \\leftrightarrow ⟺ \\iff⟺ \\iff ∉\\notin∈/ \\notin ∋\\ni∋ \\ni ∌\\notni∋ \\notni ¬\\neg¬ \\neg or \\lnot Direct Input: ∀∴∁∵∃∣∈∉∋⊂⊃∧∨↦→←↔¬∀ ∴ ∁ ∵ ∃ ∣ ∈ ∉ ∋ ⊂ ⊃ ∧ ∨ ↦ → ← ↔ ¬∀∴∁∵∃∣∈∈/∋⊂⊃∧∨↦→←↔¬ ℂ ℍ ℕ ℙ ℚ ℝ Macros Should be aware to use braces {} to group the arguments. (There shold be a space between { and # to avoid the conflict with the markdown syntax) x2+x2\\def\\foo{x^2} \\foo + \\foox2+x2 \\def\\foo{x^2} \\foo + \\foo x2+y2\\gdef\\bar#1{ #1^2} \\bar{x} + \\bar{y}x2+y2 \\gdef\\bar#1{ #1^2} \\bar{x} + \\bar{y} \\global\\def\\macroname#1#2…{definition} \\newcommand\\macroname[numargs]{definition} \\renewcommand\\macroname[numargs]{definition} \\providecommand\\macroname[numargs]{definition} Macros can also be defined in the KaTeX rendering options. Macros accept up to nine arguments: #1, #2, etc. \\gdef and \\global\\def macros will persist between math expressions. Available functions include: \\char \\mathchoice \\TextOrMath \\@ifstar \\@ifnextchar \\@firstoftwo \\@secondoftwo \\relax @ is a valid character for commands, as if \\makeatletter were in effect. Operators Big Operators ∑\\sum∑ \\sum ∏\\prod∏ \\prod ⨂\\bigotimes⨂ \\bigotimes ⋁\\bigvee⋁ \\bigvee ∫\\int∫ \\int ∐\\coprod∐ \\coprod ⨁\\bigoplus⨁ \\bigoplus ⋀\\bigwedge⋀ \\bigwedge ∬\\iint∬ \\iint ∫\\intop∫ \\intop ⨀\\bigodot⨀ \\bigodot ⋂\\bigcap⋂ \\bigcap ∭\\iiint∭ \\iiint ∫\\smallint∫ \\smallint ⨄\\biguplus⨄ \\biguplus ⋃\\bigcup⋃ \\bigcup ∮\\oint∮ \\oint ∯\\oiint∬​ \\oiint ∰\\oiiint∭​ \\oiiint ⨆\\bigsqcup⨆ \\bigsqcup Direct Input: ∫∬∭∮∏∐∑⋀⋁⋂⋃⨀⨁⨂⨄⨆∫ ∬ ∭ ∮ ∏ ∐ ∑ ⋀ ⋁ ⋂ ⋃ ⨀ ⨁ ⨂ ⨄ ⨆∫∬∭∮∏∐∑⋀⋁⋂⋃⨀⨁⨂⨄⨆ Binary Operators +++ + ⋅\\cdot⋅ \\cdot ⋗\\gtrdot⋗ \\gtrdot x(moda)x \\pmod ax(moda) x \\pmod a −-− - ⋅\\cdotp⋅ \\cdotp ⊺\\intercal⊺ \\intercal x(a)x \\pod ax(a) x \\pod a /// / ⋅\\centerdot⋅ \\centerdot ∧\\land∧ \\land ⊳\\rhd⊳ \\rhd ∗*∗ * ∘\\circ∘ \\circ ⋋\\leftthreetimes⋋ \\leftthreetimes ⋌\\rightthreetimes⋌ \\rightthreetimes ⨿\\amalg⨿ \\amalg ⊛\\circledast⊛ \\circledast .\\ldotp. \\ldotp ⋊\\rtimes⋊ \\rtimes &amp;\\And&amp; \\And ⊚\\circledcirc⊚ \\circledcirc ∨\\lor∨ \\lor ∖\\setminus∖ \\setminus ∗\\ast∗ \\ast ⊝\\circleddash⊝ \\circleddash ⋖\\lessdot⋖ \\lessdot ∖\\smallsetminus∖ \\smallsetminus ⊼\\barwedge⊼ \\barwedge ⋓\\Cup⋓ \\Cup ⊲\\lhd⊲ \\lhd ⊓\\sqcap⊓ \\sqcap ◯\\bigcirc◯ \\bigcirc ∪\\cup∪ \\cup ⋉\\ltimes⋉ \\ltimes ⊔\\sqcup⊔ \\sqcup mod \\bmodmod \\bmod ⋎\\curlyvee⋎ \\curlyvee xmod ax \\mod axmoda x\\mod a ×\\times× \\times ⊡\\boxdot⊡ \\boxdot ⋏\\curlywedge⋏ \\curlywedge ∓\\mp∓ \\mp ⊴\\unlhd⊴ \\unlhd ⊟\\boxminus⊟ \\boxminus ÷\\div÷ \\div ⊙\\odot⊙ \\odot ⊵\\unrhd⊵ \\unrhd ⊞\\boxplus⊞ \\boxplus ⋇\\divideontimes⋇ \\divideontimes ⊖\\ominus⊖ \\ominus ⊎\\uplus⊎ \\uplus ⊠\\boxtimes⊠ \\boxtimes ∔\\dotplus∔ \\dotplus ⊕\\oplus⊕ \\oplus ∨\\vee∨ \\vee ∙\\bullet∙ \\bullet ⩞\\doublebarwedge⩞ \\doublebarwedge ⊗\\otimes⊗ \\otimes ⊻\\veebar⊻ \\veebar ⋒\\Cap⋒ \\Cap ⋒\\doublecap⋒ \\doublecap ⊘\\oslash⊘ \\oslash ∧\\wedge∧ \\wedge ∩\\cap∩ \\cap ⋓\\doublecup⋓ \\doublecup ±\\pm± \\pm or \\plusmn ≀\\wr≀ \\wr Direct Input: +−/∗⋅±×÷∓∔∧∨∩∪≀⊎⊓⊔⊕⊖⊗⊘⊙⊚⊛⊝+ - / * ⋅ ± × ÷ ∓ ∔ ∧ ∨ ∩ ∪ ≀ ⊎ ⊓ ⊔ ⊕ ⊖ ⊗ ⊘ ⊙ ⊚ ⊛ ⊝+−/∗⋅±×÷∓∔∧∨∩∪≀⊎⊓⊔⊕⊖⊗⊘⊙⊚⊛⊝ Fractions and Binomials ab\\frac{a}{b}ba​ \\frac{a}{b} ab\\tfrac{a}{b}ba​ \\tfrac{a}{b} (aa+1]\\genfrac ( ] {2pt}{1}a{a+1}(a+1a​] \\genfrac ( ] {2pt}{1}a{a+1} ab{a \\over b}ba​ {a \\over b} ab\\dfrac{a}{b}ba​ \\dfrac{a}{b} ab+1{a \\above{2pt} b+1}b+1a​ {a \\above{2pt} b+1} a/ba/ba/b a/b a1+1b\\cfrac{a}{1 + \\cfrac{1}{b}}1+b1​a​ \\cfrac{a}{1 + \\cfrac{1}{b}} (nk)\\binom{n}{k}(kn​) \\binom{n}{k} (nk)\\dbinom{n}{k}(kn​) \\dbinom{n}{k} {nk}{n\\brace k}{kn​} {n\\brace k} (nk){n \\choose k}(kn​) {n \\choose k} (nk)\\tbinom{n}{k}(kn​) \\tbinom{n}{k} [nk]{n\\brack k}[kn​] {n\\brack k} Math Operators arcsin⁡\\arcsinarcsin \\arcsin cotg⁡\\cotgcotg \\cotg ln⁡\\lnln \\ln det⁡\\detdet \\det arccos⁡\\arccosarccos \\arccos coth⁡\\cothcoth \\coth log⁡\\loglog \\log gcd⁡\\gcdgcd \\gcd arctan⁡\\arctanarctan \\arctan csc⁡\\csccsc \\csc sec⁡\\secsec \\sec inf⁡\\infinf \\inf arctg⁡\\arctgarctg \\arctg ctg⁡\\ctgctg \\ctg sin⁡\\sinsin \\sin lim⁡\\limlim \\lim arcctg⁡\\arcctgarcctg \\arcctg cth⁡\\cthcth \\cth sinh⁡\\sinhsinh \\sinh lim inf⁡\\liminfliminf \\liminf arg⁡\\argarg \\arg deg⁡\\degdeg \\deg sh⁡\\shsh \\sh lim sup⁡\\limsuplimsup \\limsup ch⁡\\chch \\ch dim⁡\\dimdim \\dim tan⁡\\tantan \\tan max⁡\\maxmax \\max cos⁡\\coscos \\cos exp⁡\\expexp \\exp tanh⁡\\tanhtanh \\tanh min⁡\\minmin \\min cosec⁡\\coseccosec \\cosec hom⁡\\homhom \\hom tg⁡\\tgtg \\tg Pr⁡\\PrPr \\Pr cosh⁡\\coshcosh \\cosh ker⁡\\kerker \\ker th⁡\\thth \\th sup⁡\\supsup \\sup cot⁡\\cotcot \\cot lg⁡\\lglg \\lg f⁡\\operatorname{f}f \\operatorname{f} Functions on the right column of this table can take \\limits. \\sqrt x\\sqrt{x}x​ \\sqrt{x} x3\\sqrt[3]{x}3x​ \\sqrt[3]{x} Relations =!\\stackrel{!}{=}=! \\stackrel{!}{=} === = ≖\\eqcirc≖ \\eqcirc ⋚\\lesseqgtr⋚ \\lesseqgtr ⊐\\sqsupset⊐ \\sqsupset &lt;&lt;&lt; &lt; ∹\\eqcolon−: \\eqcolon ⪋\\lesseqqgtr⪋ \\lesseqqgtr ⊒\\sqsupseteq⊒ \\sqsupseteq &gt;&gt;&gt; &gt; −∷\\Eqcolon−:: \\Eqcolon ≶\\lessgtr≶ \\lessgtr ⋐\\Subset⋐ \\Subset ::: : ≕\\eqqcolon=: \\eqqcolon ≲\\lesssim≲ \\lesssim ⊂\\subset⊂ \\subset or \\sub ≈\\approx≈ \\approx =∷\\Eqqcolon=:: \\Eqqcolon ≪\\ll≪ \\ll ⊆\\subseteq⊆ \\subseteq or \\sube ≊\\approxeq≊ \\approxeq ≂\\eqsim≂ \\eqsim ⋘\\lll⋘ \\lll ⫅\\subseteqq⫅ \\subseteqq ≍\\asymp≍ \\asymp ⪖\\eqslantgtr⪖ \\eqslantgtr ⋘\\llless⋘ \\llless ≻\\succ≻ \\succ ∍\\backepsilon∍ \\backepsilon ⪕\\eqslantless⪕ \\eqslantless &lt;\\lt&lt; \\lt ⪸\\succapprox⪸ \\succapprox ∽\\backsim∽ \\backsim ≡\\equiv≡ \\equiv ∣\\mid∣ \\mid ≽\\succcurlyeq≽ \\succcurlyeq ⋍\\backsimeq⋍ \\backsimeq ≒\\fallingdotseq≒ \\fallingdotseq ⊨\\models⊨ \\models ⪰\\succeq⪰ \\succeq ≬\\between≬ \\between ⌢\\frown⌢ \\frown ⊸\\multimap⊸ \\multimap ≿\\succsim≿ \\succsim ⋈\\bowtie⋈ \\bowtie ≥\\ge≥ \\ge ∋\\owns∋ \\owns ⋑\\Supset⋑ \\Supset ≏\\bumpeq≏ \\bumpeq ≥\\geq≥ \\geq ∥\\parallel∥ \\parallel ⊃\\supset⊃ \\supset ≎\\Bumpeq≎ \\Bumpeq ≧\\geqq≧ \\geqq ⊥\\perp⊥ \\perp ⊇\\supseteq⊇ \\supseteq or \\supe ≗\\circeq≗ \\circeq ⩾\\geqslant⩾ \\geqslant ⋔\\pitchfork⋔ \\pitchfork ⫆\\supseteqq⫆ \\supseteqq :≈\\colonapprox:≈ \\colonapprox ≫\\gg≫ \\gg ≺\\prec≺ \\prec ≈\\thickapprox≈ \\thickapprox ∷≈\\Colonapprox::≈ \\Colonapprox ⋙\\ggg⋙ \\ggg ⪷\\precapprox⪷ \\precapprox ∼\\thicksim∼ \\thicksim :−\\coloneq:− \\coloneq ⋙\\gggtr⋙ \\gggtr ≼\\preccurlyeq≼ \\preccurlyeq ⊴\\trianglelefteq⊴ \\trianglelefteq ∷−\\Coloneq::− \\Coloneq &gt;\\gt&gt; \\gt ⪯\\preceq⪯ \\preceq ≜\\triangleq≜ \\triangleq ≔\\coloneqq:= \\coloneqq ⪆\\gtrapprox⪆ \\gtrapprox ≾\\precsim≾ \\precsim ⊵\\trianglerighteq⊵ \\trianglerighteq ∷=\\Coloneqq::= \\Coloneqq ⋛\\gtreqless⋛ \\gtreqless ∝\\propto∝ \\propto ∝\\varpropto∝ \\varpropto :∼\\colonsim:∼ \\colonsim ⪌\\gtreqqless⪌ \\gtreqqless ≓\\risingdotseq≓ \\risingdotseq △\\vartriangle△ \\vartriangle ∷∼\\Colonsim::∼ \\Colonsim ≷\\gtrless≷ \\gtrless ∣\\shortmid∣ \\shortmid ⊲\\vartriangleleft⊲ \\vartriangleleft ≅\\cong≅ \\cong ≳\\gtrsim≳ \\gtrsim ∥\\shortparallel∥ \\shortparallel ⊳\\vartriangleright⊳ \\vartriangleright ⋞\\curlyeqprec⋞ \\curlyeqprec ∈\\in∈ \\in or \\isin ∼\\sim∼ \\sim :\\vcentcolon: \\vcentcolon ⋟\\curlyeqsucc⋟ \\curlyeqsucc ⋈\\Join⋈ \\Join ≃\\simeq≃ \\simeq ⊢\\vdash⊢ \\vdash ⊣\\dashv⊣ \\dashv ≤\\le≤ \\le ⌢\\smallfrown⌢ \\smallfrown ⊨\\vDash⊨ \\vDash ∷\\dblcolon:: \\dblcolon ≤\\leq≤ \\leq ⌣\\smallsmile⌣ \\smallsmile ⊩\\Vdash⊩ \\Vdash ≐\\doteq≐ \\doteq ≦\\leqq≦ \\leqq ⌣\\smile⌣ \\smile ⊪\\Vvdash⊪ \\Vvdash ≑\\Doteq≑ \\Doteq ⩽\\leqslant⩽ \\leqslant ⊏\\sqsubset⊏ \\sqsubset ≑\\doteqdot≑ \\doteqdot ⪅\\lessapprox⪅ \\lessapprox ⊑\\sqsubseteq⊑ \\sqsubseteq Direct Input: =&lt;&gt;:∈∋∝∼∽≂≃≅≈≊≍≎≏≐≑≒≓≖≗≜≡≤≥≦≧≫≬≳≷≺≻≼≽≾≿⊂⊃⊆⊇⊏⊐⊑⊒⊢⊣⊩⊪⊸⋈⋍⋐⋑⋔⋙⋛⋞⋟⌢⌣⩾⪆⪌⪕⪖⪯⪰⪷⪸⫅⫆≲⩽⪅≶⋚⪋⊥⊨= &lt; &gt; : ∈ ∋ ∝ ∼ ∽ ≂ ≃ ≅ ≈ ≊ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≖ ≗ ≜ ≡ ≤ ≥ ≦ ≧ ≫ ≬ ≳ ≷ ≺ ≻ ≼ ≽ ≾ ≿ ⊂ ⊃ ⊆ ⊇ ⊏ ⊐ ⊑ ⊒ ⊢ ⊣ ⊩ ⊪ ⊸ ⋈ ⋍ ⋐ ⋑ ⋔ ⋙ ⋛ ⋞ ⋟ ⌢ ⌣ ⩾ ⪆ ⪌ ⪕ ⪖ ⪯ ⪰ ⪷ ⪸ ⫅ ⫆ ≲ ⩽ ⪅ ≶ ⋚ ⪋ ⟂ ⊨=&lt;&gt;:∈∋∝∼∽≂≃≅≈≊≍≎≏≐≑≒≓≖≗≜≡≤≥≦≧≫≬≳≷≺≻≼≽≾≿⊂⊃⊆⊇⊏⊐⊑⊒⊢⊣⊩⊪⊸⋈⋍⋐⋑⋔⋙⋛⋞⋟⌢⌣⩾⪆⪌⪕⪖⪯⪰⪷⪸⫅⫆≲⩽⪅≶⋚⪋⊥⊨ ≔ ≕ ⩴ Negated Relations ≠\\not == \\not = ⪊\\gnapprox⪊ \\gnapprox ≱\\ngeqslant \\ngeqslant ⊈\\nsubseteq⊈ \\nsubseteq ⪵\\precneqq⪵ \\precneqq ⪈\\gneq⪈ \\gneq ≯\\ngtr≯ \\ngtr ⊈\\nsubseteqq \\nsubseteqq ⋨\\precnsim⋨ \\precnsim ≩\\gneqq≩ \\gneqq ≰\\nleq≰ \\nleq ⊁\\nsucc⊁ \\nsucc ⊊\\subsetneq⊊ \\subsetneq ⋧\\gnsim⋧ \\gnsim ≰\\nleqq \\nleqq ⋡\\nsucceq⋡ \\nsucceq ⫋\\subsetneqq⫋ \\subsetneqq ≩\\gvertneqq \\gvertneqq ≰\\nleqslant \\nleqslant ⊉\\nsupseteq⊉ \\nsupseteq ⪺\\succnapprox⪺ \\succnapprox ⪉\\lnapprox⪉ \\lnapprox ≮\\nless≮ \\nless ⊉\\nsupseteqq \\nsupseteqq ⪶\\succneqq⪶ \\succneqq ⪇\\lneq⪇ \\lneq ∤\\nmid∤ \\nmid ⋪\\ntriangleleft⋪ \\ntriangleleft ⋩\\succnsim⋩ \\succnsim ≨\\lneqq≨ \\lneqq ∉\\notin∈/ \\notin ⋬\\ntrianglelefteq⋬ \\ntrianglelefteq ⊋\\supsetneq⊋ \\supsetneq ⋦\\lnsim⋦ \\lnsim ∌\\notni∋ \\notni ⋫\\ntriangleright⋫ \\ntriangleright ⫌\\supsetneqq⫌ \\supsetneqq ≨\\lvertneqq \\lvertneqq ∦\\nparallel∦ \\nparallel ⋭\\ntrianglerighteq⋭ \\ntrianglerighteq ⊊\\varsubsetneq \\varsubsetneq ≆\\ncong≆ \\ncong ⊀\\nprec⊀ \\nprec ⊬\\nvdash⊬ \\nvdash ⫋\\varsubsetneqq \\varsubsetneqq ≠\\ne= \\ne ⋠\\npreceq⋠ \\npreceq ⊭\\nvDash⊭ \\nvDash ⊋\\varsupsetneq \\varsupsetneq ≠\\neq= \\neq ∤\\nshortmid \\nshortmid ⊯\\nVDash⊯ \\nVDash ⫌\\varsupsetneqq \\varsupsetneqq ≱\\ngeq≱ \\ngeq ∦\\nshortparallel \\nshortparallel ⊮\\nVdash⊮ \\nVdash ≱\\ngeqq \\ngeqq ≁\\nsim≁ \\nsim ⪹\\precnapprox⪹ \\precnapprox Direct Input: ∉∌∤∦≁≆≠≨≩≮≯≰≱⊀⊁⊈⊉⊊⊋⊬⊭⊮⊯⋠⋡⋦⋧⋨⋩⋬⋭⪇⪈⪉⪊⪵⪶⪹⪺⫋⫌∉ ∌ ∤ ∦ ≁ ≆ ≠ ≨ ≩ ≮ ≯ ≰ ≱ ⊀ ⊁ ⊈ ⊉ ⊊ ⊋ ⊬ ⊭ ⊮ ⊯ ⋠ ⋡ ⋦ ⋧ ⋨ ⋩ ⋬ ⋭ ⪇ ⪈ ⪉ ⪊ ⪵ ⪶ ⪹ ⪺ ⫋ ⫌∈/∋∤∦≁≆=≨≩≮≯≰≱⊀⊁⊈⊉⊊⊋⊬⊭⊮⊯⋠⋡⋦⋧⋨⋩⋬⋭⪇⪈⪉⪊⪵⪶⪹⪺⫋⫌ Arrows ↺\\circlearrowleft↺ \\circlearrowleft ↼\\leftharpoonup↼ \\leftharpoonup ⇒\\rArr⇒ \\rArr ↻\\circlearrowright↻ \\circlearrowright ⇇\\leftleftarrows⇇ \\leftleftarrows →\\rarr→ \\rarr ↶\\curvearrowleft↶ \\curvearrowleft ↔\\leftrightarrow↔ \\leftrightarrow ↾\\restriction↾ \\restriction ↷\\curvearrowright↷ \\curvearrowright ⇔\\Leftrightarrow⇔ \\Leftrightarrow →\\rightarrow→ \\rightarrow ⇓\\Darr⇓ \\Darr ⇆\\leftrightarrows⇆ \\leftrightarrows ⇒\\Rightarrow⇒ \\Rightarrow ⇓\\dArr⇓ \\dArr ⇋\\leftrightharpoons⇋ \\leftrightharpoons ↣\\rightarrowtail↣ \\rightarrowtail ↓\\darr↓ \\darr ↭\\leftrightsquigarrow↭ \\leftrightsquigarrow ⇁\\rightharpoondown⇁ \\rightharpoondown ⇠\\dashleftarrow⇠ \\dashleftarrow ⇚\\Lleftarrow⇚ \\Lleftarrow ⇀\\rightharpoonup⇀ \\rightharpoonup ⇢\\dashrightarrow⇢ \\dashrightarrow ⟵\\longleftarrow⟵ \\longleftarrow ⇄\\rightleftarrows⇄ \\rightleftarrows ↓\\downarrow↓ \\downarrow ⟸\\Longleftarrow⟸ \\Longleftarrow ⇌\\rightleftharpoons⇌ \\rightleftharpoons ⇓\\Downarrow⇓ \\Downarrow ⟷\\longleftrightarrow⟷ \\longleftrightarrow ⇉\\rightrightarrows⇉ \\rightrightarrows ⇊\\downdownarrows⇊ \\downdownarrows ⟺\\Longleftrightarrow⟺ \\Longleftrightarrow ⇝\\rightsquigarrow⇝ \\rightsquigarrow ⇃\\downharpoonleft⇃ \\downharpoonleft ⟼\\longmapsto⟼ \\longmapsto ⇛\\Rrightarrow⇛ \\Rrightarrow ⇂\\downharpoonright⇂ \\downharpoonright ⟶\\longrightarrow⟶ \\longrightarrow ↱\\Rsh↱ \\Rsh ←\\gets← \\gets ⟹\\Longrightarrow⟹ \\Longrightarrow ↘\\searrow↘ \\searrow ⇔\\Harr⇔ \\Harr ↫\\looparrowleft↫ \\looparrowleft ↙\\swarrow↙ \\swarrow ⇔\\hArr⇔ \\hArr ↬\\looparrowright↬ \\looparrowright →\\to→ \\to ↔\\harr↔ \\harr ⇔\\Lrarr⇔ \\Lrarr ↞\\twoheadleftarrow↞ \\twoheadleftarrow ↩\\hookleftarrow↩ \\hookleftarrow ⇔\\lrArr⇔ \\lrArr ↠\\twoheadrightarrow↠ \\twoheadrightarrow ↪\\hookrightarrow↪ \\hookrightarrow ↔\\lrarr↔ \\lrarr ⇑\\Uarr⇑ \\Uarr ⟺ \\iff⟺ \\iff ↰\\Lsh↰ \\Lsh ⇑\\uArr⇑ \\uArr ⟸ \\impliedby⟸ \\impliedby ↦\\mapsto↦ \\mapsto ↑\\uarr↑ \\uarr ⟹ \\implies⟹ \\implies ↗\\nearrow↗ \\nearrow ↑\\uparrow↑ \\uparrow ⇐\\Larr⇐ \\Larr ↚\\nleftarrow↚ \\nleftarrow ⇑\\Uparrow⇑ \\Uparrow ⇐\\lArr⇐ \\lArr ⇍\\nLeftarrow⇍ \\nLeftarrow ↕\\updownarrow↕ \\updownarrow ←\\larr← \\larr ↮\\nleftrightarrow↮ \\nleftrightarrow ⇕\\Updownarrow⇕ \\Updownarrow ⇝\\leadsto⇝ \\leadsto ⇎\\nLeftrightarrow⇎ \\nLeftrightarrow ↿\\upharpoonleft↿ \\upharpoonleft ←\\leftarrow← \\leftarrow ↛\\nrightarrow↛ \\nrightarrow ↾\\upharpoonright↾ \\upharpoonright ⇐\\Leftarrow⇐ \\Leftarrow ⇏\\nRightarrow⇏ \\nRightarrow ⇈\\upuparrows⇈ \\upuparrows ↢\\leftarrowtail↢ \\leftarrowtail ↖\\nwarrow↖ \\nwarrow ↽\\leftharpoondown↽ \\leftharpoondown ⇒\\Rarr⇒ \\Rarr Direct Input: ←↑→↓↔↕↖↗↘↙↚↛↞↠↢↣↦↩↪↫↬↭↮↰↱↶↷↺↻↼↽↾↾↿⇀⇁⇂⇃⇄⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕⇚⇛⇝⇠⇢⟵⟶⟷⟸⟹⟺⟼← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↞ ↠ ↢ ↣ ↦ ↩ ↪ ↫ ↬ ↭ ↮ ↰ ↱↶ ↷ ↺ ↻ ↼ ↽ ↾ ↾ ↿ ⇀ ⇁ ⇂ ⇃ ⇄ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇚ ⇛ ⇝ ⇠ ⇢ ⟵ ⟶ ⟷ ⟸ ⟹ ⟺ ⟼←↑→↓↔↕↖↗↘↙↚↛↞↠↢↣↦↩↪↫↬↭↮↰↱↶↷↺↻↼↽↾↾↿⇀⇁⇂⇃⇄⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕⇚⇛⇝⇠⇢⟵⟶⟷⟸⟹⟺⟼ ↽ Extensible Arrows ←abc\\xleftarrow{abc}abc​ \\xleftarrow{abc} →underover\\xrightarrow[under]{over}overunder​ \\xrightarrow[under]{over} ⇐abc\\xLeftarrow{abc}abc​ \\xLeftarrow{abc} ⇒abc\\xRightarrow{abc}abc​ \\xRightarrow{abc} ↔abc\\xleftrightarrow{abc}abc​ \\xleftrightarrow{abc} ⇔abc\\xLeftrightarrow{abc}abc​ \\xLeftrightarrow{abc} ↩abc\\xhookleftarrow{abc}abc​ \\xhookleftarrow{abc} ↪abc\\xhookrightarrow{abc}abc​ \\xhookrightarrow{abc} ↞abc\\xtwoheadleftarrow{abc}abc \\xtwoheadleftarrow{abc} ↠abc\\xtwoheadrightarrow{abc}abc \\xtwoheadrightarrow{abc} ↼abc\\xleftharpoonup{abc}abc​ \\xleftharpoonup{abc} ⇀abc\\xrightharpoonup{abc}abc​ \\xrightharpoonup{abc} ↽abc\\xleftharpoondown{abc}abc​ \\xleftharpoondown{abc} ⇁abc\\xrightharpoondown{abc}abc​ \\xrightharpoondown{abc} ⇋abc\\xleftrightharpoons{abc}abc​ \\xleftrightharpoons{abc} ⇌abc\\xrightleftharpoons{abc}abc​ \\xrightleftharpoons{abc} ⇄abc\\xtofrom{abc}abc​ \\xtofrom{abc} ↦abc\\xmapsto{abc}abc​ \\xmapsto{abc} =abc\\xlongequal{abc}abc \\xlongequal{abc} Extensible arrows all can take an optional argument in the same manneras \\xrightarrow[under]{over}. Style, Color, Size, and Font Class Assignment \\mathbin \\mathclose \\mathinner \\mathop \\mathopen \\mathord \\mathpunct \\mathrel Color F=ma\\color{blue} F=maF=ma \\color{blue} F=ma Note that KaTeX \\color acts like a switch. This aligns with LaTeX and differs from MathJax. Other KaTeX color functions expect the content to be a function argument: F=ma\\textcolor{blue}{F=ma}F=ma \\textcolor{blue}{F=ma} \\textcolor{#228B22}{F=ma} \\textcolor{#228B22}{F=ma} A\\colorbox{aqua}{A}A​ \\colorbox{aqua}{A} A\\fcolorbox{red}{aqua}{A}A​ \\fcolorbox{red}{aqua}{A} For color definition, KaTeX color functions will accept the standard HTML predefined color names. They will also accept an RGB argument in CSS hexa­decimal style. The “#” is optional before a six-digit specification. Font Ab0\\mathrm{Ab0}Ab0 \\mathrm{Ab0} Ab0\\mathbf{Ab0}Ab0 \\mathbf{Ab0} Ab\\mathit{Ab}Ab \\mathit{Ab} Ab0\\mathnormal{Ab0}Ab0 \\mathnormal{Ab0} Ab0\\textbf{Ab0}Ab0 \\textbf{Ab0} Ab\\textit{Ab}Ab \\textit{Ab} Ab0\\textrm{Ab0}Ab0 \\textrm{Ab0} Ab0\\bf Ab0Ab0 \\bf Ab0 Ab\\it AbAb \\it Ab Ab0\\rm Ab0Ab0 \\rm Ab0 Ab0\\bold{Ab0}Ab0 \\bold{Ab0} AB\\Bbb{AB}AB \\Bbb{AB} Ab0\\textnormal{Ab0}Ab0 \\textnormal{Ab0} Ab\\boldsymbol{Ab}Ab \\boldsymbol{Ab} AB\\mathbb{AB}AB \\mathbb{AB} Ab0\\text{Ab0}Ab0 \\text{Ab0} Ab\\bm{Ab}Ab \\bm{Ab} Ab0\\frak{Ab0}Ab0 \\frak{Ab0} Ab0\\mathsf{Ab0}Ab0 \\mathsf{Ab0} Ab0\\mathtt{Ab0}Ab0 \\mathtt{Ab0} Ab0\\mathfrak{Ab0}Ab0 \\mathfrak{Ab0} Ab0\\textsf{Ab0}Ab0 \\textsf{Ab0} Ab0\\texttt{Ab0}Ab0 \\texttt{Ab0} AB0\\mathcal{AB0}AB0 \\mathcal{AB0} Ab0\\sf Ab0Ab0 \\sf Ab0 Ab0\\tt Ab0Ab0 \\tt Ab0 AB\\mathscr{AB}AB \\mathscr{AB} One can stack font family, font weight, and font shape by using the \\textXX versions of the font functions. So \\textsf{\\textbf{H}} will produce H\\textsf{\\textbf{H}}H. The other versions do not stack, e.g., \\mathsf{\\mathbf{H}} will produce H\\mathsf{\\mathbf{H}}H. In cases where KaTeX fonts do not have a bold glyph, \\pmb can simulate one. For example, \\pmb{\\mu} renders as : μ\\pmb{\\mu}μ Size AB\\Huge ABAB \\Huge AB AB\\normalsize ABAB \\normalsize AB AB\\huge ABAB \\huge AB AB\\small ABAB \\small AB AB\\LARGE ABAB \\LARGE AB AB\\footnotesize ABAB \\footnotesize AB AB\\Large ABAB \\Large AB AB\\scriptsize ABAB \\scriptsize AB AB\\large ABAB \\large AB AB\\tiny ABAB \\tiny AB Style ∑i=1n\\displaystyle\\sum_{i=1}^ni=1∑n​ \\displaystyle\\sum_{i=1}^n ∑i=1n\\textstyle\\sum_{i=1}^n∑i=1n​ \\textstyle\\sum_{i=1}^n x\\scriptstyle xx \\scriptstyle x (The size of a first sub/superscript) x\\scriptscriptstyle xx \\scriptscriptstyle x (The size of subsequent sub/superscripts) lim⁡x\\lim\\limits_xxlim​ \\lim\\limits_x lim⁡x\\lim\\nolimits_xlimx​ \\lim\\nolimits_x x^2\\verb!x^2!x^2 \\verb!x^2! \\text{…} will accept nested $…$ fragments and render them in math mode. Symbols and Punctuation % comment …\\dots… \\dots KaTeX\\KaTeXKATE​X \\KaTeX %\\%% \\% ⋯\\cdots⋯ \\cdots LaTeX\\LaTeXLATE​X \\LaTeX #\\## \\# ⋱\\ddots⋱ \\ddots TeX\\TeXTE​X \\TeX &amp;\\&amp;&amp; \\&amp; …\\ldots… \\ldots ∇\\nabla∇ \\nabla _\\__ \\_ ⋮\\vdots⋮ \\vdots ∞\\infty∞ \\infty _\\text{\\textunderscore}_ \\text{\\textunderscore} ⋯\\dotsb⋯ \\dotsb ∞\\infin∞ \\infin –\\text{--}– \\text{--} …\\dotsc… \\dotsc ✓\\checkmark✓ \\checkmark –\\text{\\textendash}– \\text{\\textendash} ⁣⋯\\dotsi⋯ \\dotsi †\\dag† \\dag —\\text{---}— \\text{---} ⋯\\dotsm⋯ \\dotsm †\\dagger† \\dagger —\\text{\\textemdash}— \\text{\\textemdash} …\\dotso… \\dotso †\\text{\\textdagger}† \\text{\\textdagger} ~\\text{\\textasciitilde}~ \\text{\\textasciitilde} ⋅\\sdot⋅ \\sdot ‡\\ddag‡ \\ddag ‘`‘ ` …\\mathellipsis… \\mathellipsis ‡\\ddagger‡ \\ddagger ‘\\text{\\textquoteleft}‘ text{\\textquoteleft} …\\text{\\textellipsis}… \\text{\\textellipsis} ‡\\text{\\textdaggerdbl}‡ \\text{\\textdaggerdbl} ‘\\lq‘ \\lq □\\Box□ \\Box ‡\\Dagger‡ \\Dagger ’\\text{\\textquoteright}’ \\text{\\textquoteright} □\\square□ \\square ∠\\angle∠ \\angle ′\\rq′ \\rq ■\\blacksquare■ \\blacksquare ∡\\measuredangle∡ \\measuredangle “\\text{\\textquotedblleft}“ \\text{\\textquotedblleft} △\\triangle△ \\triangle ∢\\sphericalangle∢ \\sphericalangle &quot;&quot;&quot; &quot; ▽\\triangledown▽ \\triangledown ⊤\\top⊤ \\top ”\\text{\\textquotedblright}” \\text{\\textquotedblright} ◃\\triangleleft◃ \\triangleleft ⊥\\bot⊥ \\bot ⁣:\\colon: \\colon ▹\\triangleright▹ \\triangleright $\\$$ \\$ ‵\\backprime‵ \\backprime ▽\\bigtriangledown▽ \\bigtriangledown $\\text{\\textdollar}$ \\text{\\textdollar} ′\\prime′ \\prime △\\bigtriangleup△ \\bigtriangleup £\\pounds£ \\pounds &lt;\\text{\\textless}&lt; \\text{\\textless} ▲\\blacktriangle▲ \\blacktriangle £\\mathsterling£ \\mathsterling &gt;\\text{\\textgreater}&gt; \\text{\\textgreater} ▼\\blacktriangledown▼ \\blacktriangledown £\\text{\\textsterling}£ \\text{\\textsterling} |\\text{\\textbar}| \\text{\\textbar} ◀\\blacktriangleleft◀ \\blacktriangleleft ¥\\yen¥ \\yen ∥\\text{\\textbardbl}∥ \\text{\\textbardbl} ▶\\blacktriangleright▶ \\blacktriangleright √\\surd√ \\surd {\\text{\\textbraceleft}{ \\text{\\textbraceleft} ⋄\\diamond⋄ \\diamond °\\degree° \\degree }\\text{\\textbraceright}} \\text{\\textbraceright} ◊\\Diamond◊ \\Diamond °\\text{\\textdegree}° \\text{\\textdegree} ¶\\text{\\P}¶ \\text{\\P} ◊\\lozenge◊ \\lozenge ℧\\mho℧ \\mho §\\text{\\S}§ \\text{\\S} ⧫\\blacklozenge⧫ \\blacklozenge ╲\\diagdown╲ \\diagdown §\\text{\\sect}§ \\text{\\sect} ⋆\\star⋆ \\star ╱\\diagup╱ \\diagup ©\\copyrightc◯ \\copyright ★\\bigstar★ \\bigstar ♭\\flat♭ \\flat ®\\circledR® \\circledR ♣\\clubsuit♣ \\clubsuit ♮\\natural♮ \\natural ®\\text{\\textregistered}R◯ \\text{\\textregistered} ♣\\clubs♣ \\clubs ♯\\sharp♯ \\sharp Ⓢ\\circledSⓈ \\circledS ♢\\diamondsuit♢ \\diamondsuit ♡\\heartsuit♡ \\heartsuit a◯\\text{\\textcircled a}a◯ \\text{\\textcircled a} ♢\\diamonds♢ \\diamonds ♡\\hearts♡ \\hearts ✠\\maltese✠ \\maltese ♠\\spadesuit♠ \\spadesuit ♠\\spades♠ \\spades Direct Input: £¥∇∞⋅∠∡∢♠♡♢♣♭♮♯✓…⋮⋯⋱!£ ¥ ∇ ∞ · ∠ ∡ ∢ ♠ ♡ ♢ ♣ ♭ ♮ ♯ ✓ … ⋮ ⋯ ⋱ !£¥∇∞⋅∠∡∢♠♡♢♣♭♮♯✓…⋮⋯⋱! ‼ Units In KaTeX, units are proportioned as they are in TeX. KaTeX units are different than CSS units. KaTeX Unit Value KaTeX Unit Value em CSS em bp 1/72​ inch × F × G ex CSS ex pc 12 KaTeX pt mu 1/18 CSS em dd 1238/1157​ KaTeX pt pt 1/72.27 inch × F × G cc 14856/1157 KaTeX pt mm 1 mm × F × G nd 685/642 KaTeX pt cm 1 cm × F × G nc 1370/107​ KaTeX pt in 1 inch × F × G sp 1/65536 KaTeX pt where: F = (font size of surrounding HTML text)/(10 pt) G = 1.21 by default, because KaTeX font-size is normally 1.21 × the surrounding font size. This value can be overridden by the CSS of an HTML page. The effect of style and size: Unit textstyle scriptscript huge em or ex \\rule{1em}{1em} \\scriptscriptstyle\\rule{1em}{1em} \\huge\\rule{1em}{1em} mu \\rule{18mu}{18mu} \\scriptscriptstyle\\rule{18mu}{18mu} \\huge\\rule{18mu}{18mu} others \\rule{10pt}{10pt} \\scriptscriptstyle\\rule{10pt}{10pt} \\huge\\rule{10pt}{10pt} KaTex Test Code - upupming’s blog (link) ↩︎ ↩︎ Original Markdown Code of the blog article (link) ↩︎ Supported Functions - KaTex Official Site (link) ↩︎","link":"/posts/en/KaTeX-Test-Code/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","link":"/posts/en/hello-world/"}],"tags":[{"name":"markdown","slug":"markdown","link":"en/tags/markdown/"},{"name":"test code","slug":"test-code","link":"en/tags/test-code/"},{"name":"highlight.js","slug":"highlight-js","link":"en/tags/highlight-js/"},{"name":"syntax highlighting","slug":"syntax-highlighting","link":"en/tags/syntax-highlighting/"},{"name":"katex","slug":"katex","link":"en/tags/katex/"},{"name":"latex","slug":"latex","link":"en/tags/latex/"},{"name":"hexo-renderer-markdown-it","slug":"hexo-renderer-markdown-it","link":"en/tags/hexo-renderer-markdown-it/"},{"name":"quick start","slug":"quick-start","link":"en/tags/quick-start/"}],"categories":[{"name":"JavaScript","slug":"JavaScript","link":"en/categories/JavaScript/"},{"name":"Node.js","slug":"JavaScript/Node-js","link":"en/categories/JavaScript/Node-js/"},{"name":"Hexo","slug":"JavaScript/Node-js/Hexo","link":"en/categories/JavaScript/Node-js/Hexo/"}]}