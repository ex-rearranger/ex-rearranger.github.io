{"pages":[{"title":"About","text":"본 블로그는 Hexo Butterfly 테마를 일부 변형한 것으로, 코드는 여기에서 확인할 수 있습니다. This blog is based on Hexo Butterfly theme with some modifications. You can check the entire source code here. 프론트엔드 쪽 지식이 거의 전무합니다. 고로, 제가 수정한 코드가 틀린 것 같다는 생각이 든다면 그게 정답ㅎㅎ Almost no frontend knowledge in my brain. If my code seems wrong, you’re 100% right:) 중국어 전혀 못합니다. Hexo가 Jekyll보다 외관이 더 취향이라 선택했을 뿐 I can’t speak Chinese at all. I just chose Hexo for its appearance over Jekyll. That’s all. 영어 실력 향상을 위해 영어로도 글을 쓸 생각이지만, 평범한 수준의 영어 실력으로 쓰기 때문에 오역이나 문법 실수가 있을 수 있습니다. I’m planning to write in English to improve my English skills. However, there may be some errors due to my common level of English. #page h1.page-title::before { font-family: \"Font Awesome 6 Free\"; content: \"\\f004\"; padding-right: 0.625em; padding-bottom: 0.25em; display: inline-block; -webkit-font-smoothing: antialiased; text-rendering: optimizeLegibility; -moz-osx-font-smoothing: grayscale; font-feature-settings: 'liga'; }","link":"/about/index.html"},{"title":"Carousel Demo","text":"Carousel Default Strike Freedom Gundamcarouselinit('SF-none'); Carousel + MediumZoom Strike Freedom Gundamcarouselinit('SF-default'); Carousel + MediumZoom (Edited) 기존 medium zoom에서는 보이는 상태 그대로 이미지를 확대해서 해당 이미지의 화질 저하 및 왜곡이 발생하는 것처럼 보였습니다. 일부 코드를 수정하여 이 부분을 개선하였습니다만, 그 부작용으로 이미지 확대 애니메이션의 느낌이 덜 부드럽게 바뀌었습니다. The original medium zoom plugin seemed to enlarge the image as it is, causing quality degradation and distortion of the zoomed image. I modified some code to improve this issue, and as a side effect, the zooming animation became less seamless than before. Strike Freedom Gundamcarouselinit('SF-edited'); [data-theme=\"light\"] .carousel { background-color: aliceblue; } [data-theme=\"dark\"] .carousel { background-color: #333; } @media screen and (max-width: 600px) { .carousel { min-height: 390px; } .carousel > .drag-container { scale: 0.8; top: calc(390px / 2 - 170px * 0.9); } } @media screen and (max-width: 500px) { .carousel { min-height: 250px; } .carousel > .drag-container { scale: 0.6; top: calc(250px / 2 - 170px * 0.8); } } .carousel img { user-select: none; }","link":"/gallery/carousel.html"},{"title":"","text":"/* 404 */ .error404 #error-wrap .error-content { height: min(360px, 100vh - 120px); } .error404 #error-wrap .error-content .error-img { background-color: #CBE3FF; } .error404 #error-wrap .error-content .error-info .error_title { margin: 0 0 2em; } .error404 #error-wrap .error-content .error-info .error_subtitle { margin: -3em 0 1.5em 0; } .error404 #error-wrap .error-content .error-img img { width: auto; margin: 0 auto; display: block; } @media screen and (max-width: 768px) { .error404 #error-wrap { top: 20px; margin: 20px auto; transform: translate(0, -20px); } .error404 #error-wrap .error-content { height: 110vw; } .error404 #error-wrap .error-content .error-img { height: 60% } .error404 #error-wrap .error-content .error-info { height: 38%; } }","link":"/css/page/404@0.0.1.css"},{"title":"","text":".container figure.highlight table td.gutter { position: fixed; width: 3em; border-right-style: dashed; border-right-width: 1px; border-right-color: var(--hltools-bg); } .container figure.highlight table td.code { padding-left: 2.8em; } .container figure.highlight table { scrollbar-width: none; } .container figure.highlight table::-webkit-scrollbar-thumb { display: none; }","link":"/css/page/highlight@0.0.1.css"},{"title":"","text":"/* Theme: one dark theme */ [data-theme=light] { --base00 : #fdfdff; /* --hl-bg, --hlnumber-bg */ --base005 : #f4f6f8; /* */ --base01 : #e6ebf1; /* --hltools-bg, --hlscrollbar-bg */ --base02 : #b0b9c4; /* --hltools-color */ --base03 : #9aa3bd; /* box-shadow */ --base04 : #898ea4; --base05 : #6b7394; --base06 : #5e6687; --base07 : #4b5068; /* --hl-color */ --base08 : #c94922; --base09 : #c76b29; --base0A : #c08b30; --base0B : #529030; --base0C : #22a2c9; --base0D : #3d8fd1; --base0E : #6966cc; --base0F : #9c637a; --highlight-deletion: #BF42BF; --highlight-addition: #105EDE; --hlnumber-color: #898ea480; --hlexpand-bg: linear-gradient(#e6ebf100, #e6ebf180); } [data-theme=dark] { --base00: #101012; /* --hl-bg, --hlnumber-bg */ --base005: #1e1e21; --base01: #26272a; /* --hltools-bg, --hlscrollbar-bg */ --base02: #595d63; /* --hltools-color */ --base03: #74787d; /* box-shadow */ --base04: #898ea4; /**/ --base05: #9ca1b4; /**/ --base06: #abb2bf; /**/ --base07: #c3c7ce; --base08: #e06c75; --base09: #f99157; --base0A: #e5c07b; --base0B: #98c379; --base0C: #56b6c2; --base0D: #61afef; --base0E : #c678dd; --base0F : #9c637a; --hlnumber-color: #979db480; --hlexpand-bg: linear-gradient(#23242800, #2324287F); } :root { --hl-bg: var(--base00); --hlnumber-bg: var(--base00); --hltools-bg: var(--base01); --hlscrollbar-bg: var(--base01); --hltools-color: var(--base02); --hl-color: var(--base07); } #article-container figure.highlight { box-shadow: 0px 0px 5px -2px var(--base03) !important; } #article-container figure.highlight .gutter pre { border-right: 1px solid var(--base005); } #article-container figure.highlight .code { /* padding-left: 3em; */ background-color: var(--base00); } .hljs { color: var(--base07); background: var(--base01); } code.hljs ::selection { color: var(--hl-color); } .hljs-comment , .hljs-operator, .hljs-punctuation, .hljs-subst { color: var(--base03); } .hljs-tag { color: var(--base05); } .hljs-operator { opacity: .7 } .hljs-bullet, .hljs-deletion, .hljs-name, .hljs-selector-tag, .hljs-template-variable, .hljs-variable { color: var(--base08); } .hljs-attr, .hljs-link, .hljs-literal, .hljs-number, .hljs-symbol, .hljs-variable.constant_ { color: var(--base09); } .hljs-class .hljs-title, .hljs-title, .hljs-title.class_ { color: var(--base0A); } .hljs-strong { font-weight: 700; color: var(--base0A); } .hljs-addition, .hljs-code, .hljs-string, .hljs-title.class_.inherited__ { color: var(--base0B); } .hljs-built_in, .hljs-doctag, .hljs-keyword.hljs-atrule, .hljs-quote, .hljs-regexp { color: var(--base0C); } .hljs-attribute, .hljs-function .hljs-title, .hljs-section, .hljs-title.function_, .ruby .hljs-property { color: var(--base0D); } .diff .hljs-meta, .hljs-keyword, .hljs-template-tag, .hljs-type, .hljs-emphasis { color: var(--base0E); } .hljs-meta, .hljs-meta .hljs-keyword, .hljs-meta .hljs-string { color: var(--base0F); } .hljs-comment, .hljs-quote, .hljs-emphasis { font-style: italic } .hljs-meta .hljs-keyword, .hljs-meta-keyword { font-weight: 700 } .hljs-section, .hljs-name, .hljs-strong { font-weight: bold; } figure.highlight pre .deletion { color: var(--highlight-deletion); } figure.highlight pre .addition { color: var(--highlight-addition); } figure.highlight pre .variable, figure.highlight pre .attribute, figure.highlight pre .regexp, figure.highlight pre .ruby .constant, figure.highlight pre .xml .tag .title, figure.highlight pre .xml .pi, figure.highlight pre .xml .doctype, figure.highlight pre .html .doctype, figure.highlight pre .css .id, figure.highlight pre .tag .name, figure.highlight pre .css .class, figure.highlight pre .css .pseudo { color: var(--base08); } figure.highlight pre .number, figure.highlight pre .preprocessor, figure.highlight pre .literal, figure.highlight pre .params, figure.highlight pre .constant, figure.highlight pre .command { color: var(--base09); } figure.highlight pre .built_in { color: var(--base0A); } figure.highlight pre .ruby .class .title, figure.highlight pre .css .rules .attribute, figure.highlight pre .string, figure.highlight pre .value, figure.highlight pre .inheritance, figure.highlight pre .header, figure.highlight pre .ruby .symbol, figure.highlight pre .xml .cdata, figure.highlight pre .special, figure.highlight pre .number, figure.highlight pre .formula { color: var(--base0B); } figure.highlight pre .keyword, figure.highlight pre .title, figure.highlight pre .css .hexcolor, figure.highlight pre .tag { color: var(--base0C); } figure.highlight pre .function, figure.highlight pre .python .decorator, figure.highlight pre .python .title, figure.highlight pre .ruby .function .title, figure.highlight pre .ruby .title .keyword, figure.highlight pre .perl .sub, figure.highlight pre .javascript .title, figure.highlight pre .coffeescript .title { color: var(--base0D); } figure.highlight pre .tag .attr, figure.highlight pre .javascript .function, figure.highlight pre .meta { color: var(--base0E); } figure.highlight pre .comment { color: var(--base03); } #article-container figure.highlight .line.marked { background-color: var(--base01); }","link":"/css/page/highlight_one_dark@0.0.1.css"},{"title":"","text":"span.post-meta-lang { margin-right: -4px; } span.post-meta-lang i { padding-bottom: 0.125em; } @media screen and (max-width: 600px) { span.article-meta.tags { display: none; } }","link":"/css/page/indexPostUI@0.0.1.css"},{"title":"","text":"/* H1-H6 아이콘 색상 및 크기 조정 및 위치 조정 */ h1, h2, h3, h4, h5, h6 { margin: 1.2em 0 0.3em 0; } #article-container > *:nth-child(2) { margin-top: 0; } #article-container h1 { font-size: 1.65em; font-weight: 500; } #article-container h1::before, #article-container h1 i::before { font-size: 0.9em; margin-top: -0.2em; color: #fc3775cc; } h1.page-title { margin-top: .67em; } h1.page-title::before, h1.page-title i::before { font-size: 1.1em; } #article-container h2 { font-size: 1.5em; font-weight: 500; } #article-container h2::before { font-size: 0.9em; margin-top: -0.16em; color: #fc741dcc; } #article-container h3 { font-size: 1.35em; font-weight: 500; } #article-container h3::before { font-size: 0.9em; margin-top: -0.1em; color: #ffc000cc; } #article-container h4 { font-size: 1.25em; font-weight: 500; } #article-container h4::before { font-size: 0.9em; margin-top: -0.05em; color: #afee00cc; } #article-container h5 { font-size: 1.1em; font-weight: 500; } #article-container h5::before { font-size: 0.9em; color: #56d271cc; } #article-container h6 { font-size: 1em; font-weight: 600; } #article-container h6::before { font-size: 0.9em; color: #58c3e7cc; } [data-theme=dark] #article-container h1::before, [data-theme=dark] #article-container h1 i::before, [data-theme=dark] #article-container h2::before, [data-theme=dark] #article-container h3::before, [data-theme=dark] #article-container h4::before, [data-theme=dark] #article-container h5::before, [data-theme=dark] #article-container h6::before { filter: brightness(0.7); } /* link underline */ #article-container a { text-decoration: underline; text-decoration-style: dashed; } #article-container a:hover { text-decoration-style: solid; } #article-container a:active { color: var(--sub-theme-color); } /* word break */ #article-container { word-break: keep-all; text-align: start; } /* language notice */ .language-notice.note.modern { background: #dbe6f7bf; color: #566786ff; } .language-notice.language-all::before { font-family: 'fontagon-icons' !important; content: \"\\f105\" !important; } .language-notice.language-kor::before { font-family: 'fontagon-icons' !important; content: \"\\f103\" !important; } /* post - pagination */ [data-theme=light] #pagination.pagination-post { background: linear-gradient(-130deg, #e3949c, #8c96e2); } [data-theme=dark] #pagination.pagination-post { background: linear-gradient(-130deg, #030b55, #450309); } #pagination { padding: 0 !important; } /* post - related posts */ [data-theme=light] .relatedPosts > .relatedPosts-list > a { background: #6699cccf; } [data-theme=dark] .relatedPosts > .relatedPosts-list > a { background: #2b2b2d82; } /* post - comment */ #post-comment.card-widget { margin-bottom: 20px; } @media screen and (max-width: 600px) { #post-meta > .meta-secondline { display: none; } } /* post meta - category list */ #post-meta span { white-space: nowrap; height: fit-content; width: fit-content; } #post-meta span.post-meta-separator { display: inline-block; } #post-meta span > i { display: inline; } #post-meta .meta-thirdline ul { list-style-type: none; padding: 0; margin: 0; } #post-meta .meta-thirdline > ul.category-list { display: inline-table; } #post-meta > .meta-thirdline ul > li { display: flex; } #post-meta > .meta-thirdline ul > li > i { line-height: 1.5; } #post-meta > .meta-thirdline > ul.category-list > li.category-list-item:not(:last-child)::after { content: \",\"; font-family: 'Roboto Mono'; align-content: flex-end; } #post-meta > .meta-thirdline a.category-list-link { border-radius: 0.1em; padding: 0 0.3em; transition: background-color 0.3s, padding 0.3s; } #post-meta > .meta-thirdline li:hover > a.category-list-link { background-color: var(--theme-color80) !important; color: var(--white) !important; padding: 0 0.4em; } #post-meta > .meta-thirdline > .category-list.sticky { display: none; } #post-meta .category-list.sticky > .category-list-link { display: inline-block; } @media screen and (max-width: 600px) { #post-meta > .meta-thirdline { display: inline-flex; } #post-meta > .meta-thirdline > .category-list.sticky { display: inline; } #post-meta > .meta-thirdline > .category-list:not(.sticky) { display: none; } } /* post - tag list, sticky category list */ #post-meta .tag_share { display: inline-flex; } #post-meta .tag_share > .post-meta__tag-list { display: inline; } #post-meta .tag_share > .post-meta__tag-list > .post-meta__tags { display: inline-block; padding: 0 0.3em; width: fit-content; border-radius: 0.2em; white-space: nowrap; } #post-meta .tag_share > .post-meta__tag-list > .post-meta__tags:hover, #post-meta > .meta-thirdline .sticky a.category-list-link:hover { padding: 0 0.4em; background: var(--theme-color80) !important; color: var(--white) !important; } #post-meta .tag_share .tag-separator:last-child { display: none; } @media screen and (max-width: 600px) { #post-meta .post-meta__tags.not-sticky { display: none !important; } #post-meta .tag-separator.not-sticky { display: none; } #post-meta .tag_share .post-meta__tag-list *:nth-last-child(1 of .tag-separator.sticky) { display: none; } } /* tags page */ h1.page-title + .tag-cloud-list a:not(:hover) { background-clip: text; mix-blend-mode: difference; } /* Toc */ #card-toc .toc-content .toc-link { margin: 0.1em 0; padding: 0.1em 0.6em; } /* Code */ code { border-radius: 3px; word-break: break-word; } /* horizontal line */ hr { margin: 1.5em auto; } hr:before, .custom-hr::before, #article-container hr:before, .search-dialog hr:before { transition: left 3s ease-in-out, background-color 0s; } .read-mode #article-container hr.footnotes-sep:before, .read-mode #article-container section.footnotes ol li.footnote-item:before { background: var(--global-bg) !important; } hr:hover::before, .custom-hr:hover::before, #article-container hr:hover::before, .search-dialog hr:hover::before { animation: wrench 5s ease; left: calc(95% - 30px) } /* footnotes */ #article-container hr.footnotes-sep { margin-bottom: 25px; } #article-container hr.footnotes-sep:before { background: var(--card-bg); margin: 0.5em; top: -1em; } #article-container section.footnotes ol p, #article-container section.footnotes ul p { margin-bottom: -2px; } #article-container sup.footnote-ref a:focus { color: var(--sub-theme-color) !important; outline: 2px solid var(--sub-theme-color-light30) !important; } .read-mode #article-container sup.footnote-ref a:focus { color: var(--theme-color) !important; outline: 2px solid var(--theme-color-light20) !important; } #article-container section.footnotes > .footnotes-list .footnote-item:focus { outline: 2px solid var(--hr-border) !important; } /* WRENCHING */ @keyframes wrench { 0%{transform:rotate(-12deg)} 8%{transform:rotate(12deg)} 10%{transform:rotate(24deg)} 18%{transform:rotate(-24deg)} 20%{transform:rotate(-24deg)} 28%{transform:rotate(24deg)} 30%{transform:rotate(24deg)} 38%{transform:rotate(-24deg)} 40%{transform:rotate(-24deg)} 48%{transform:rotate(24deg)} 50%{transform:rotate(24deg)} 58%{transform:rotate(-24deg)} 60%{transform:rotate(-24deg)} 68%{transform:rotate(24deg)} 75%{transform:rotate(0deg)} }","link":"/css/page/post@0.0.4.css"},{"title":"","text":"[data-theme=\"dark\"] #article-container div.btns a { background: #ffffff1a; } div.btns { margin: 0 -8px; display: flex; flex-wrap: wrap; align-items: flex-start; overflow: visible; line-height: 1.8; } div.btns b { font-size: 0.875rem; } div.btns.wide > a { padding-left: 32px; padding-right: 32px; } div.btns.fill > a { flex-grow: 1; width: auto; } div.btns.around { justify-content: space-around; } div.btns.center { justify-content: center; } div.btns.grid2 > a { width: calc(100% / 2 - 16px); } div.btns.grid3 > a { width: calc(100% / 3 - 16px); } div.btns.grid4 > a { width: calc(100% / 4 - 16px); } div.btns.grid5 > a { width: calc(100% / 5 - 16px); } #article-container div.btns a { transition: background 0.3s ease; margin: 8px; margin-top: calc(1.25 * 16px + 32px); font-weight: 600; display: flex; justify-content: flex-start; align-content: center; align-items: center; flex-direction: column; padding: 8px; text-align: center; background: var(--light-grey); border-radius: 4px; text-decoration: none; } #article-container div.btns a > i { background: var(--tag-blue) !important; } #article-container div.btns a > i:first-child { color: var(--white); background: var(--tag-blue); } #article-container div.btns a b { font-weight: 600; line-height: 1.3; } #article-container div.btns a img { margin: 0.4em auto; } #article-container div.btns a:not([href]) { cursor: default; color: inherit; } #article-container div.btns a[href]:hover { background: var(--tag-red-orange15); } #article-container div.btns a[href]:hover > i:first-child { background: var(--tag-red-orange); } div.btns, div.btns p, #article-container div.btns a { font-size: 0.8125rem; color: var(--font-color); } @media screen and (max-width: 1024px) { div.btns.grid2 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid2 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid2 > a { width: calc(100% / 1 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid3 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid3 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid3 > a { width: calc(100% / 1 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid4 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid4 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid4 > a { width: calc(100% / 2 - 16px); } } @media screen and (max-width: 1024px) { div.btns.grid5 > a { width: calc(100% / 4 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid5 > a { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid5 > a { width: calc(100% / 2 - 16px); } } #article-container div.btns a > img:first-child, #article-container div.btns a > i:first-child { transition: transform 0.3s ease; height: 64px; width: 64px; box-shadow: 0 1px 2px 0 #0000001a; margin: 16px 8px 4px 8px; margin-top: calc(-1.25 * 16px - 32px); border: 2px solid #ffffff80; line-height: 60px; font-size: 28px; } #article-container div.btns a > img:first-child.auto, #article-container div.btns a > i:first-child.auto { width: auto; } #article-container div.btns a p, #article-container div.btns a b { margin: 0.25em; font-weight: 400; line-height: 1.25; word-wrap: break-word; } #article-container div.btns a[href]:hover, #article-container div.btns a[href]:hover b { color: var(--tag-red-orange); } #article-container div.btns a[href]:hover > img:first-child, #article-container div.btns a[href]:hover > i:first-child { transform: scale(1.1) translateY(-8px); box-shadow: 0 4px 8px 0 #0000001a; } div.btns.circle a > img:first-child, div.btns.circle a > i:first-child { border-radius: 32px; } div.btns.rounded a > img:first-child, div.btns.rounded a > i:first-child { border-radius: 16px; }","link":"/css/tag_plugins_custom@1.0.17/btns@0.0.1.css"},{"title":"","text":".carousel { touch-action: none; overflow: hidden; display: block; display: -webkit-box; background: transparent; height: fit-content; min-height: 480px; perspective: 1000px; transform-style: preserve-3d; } .drag-container, .spin-container { position: relative; display: block; display: -webkit-box; margin: auto; top: calc(480px / 2 - 170px); transform-style: preserve-3d; transform: rotateX(-13deg); } .drag-container img, .drag-container video { transform-style: preserve-3d; position: absolute; left: 0; top: 0; object-fit: cover; height: 100%; width: 100%; line-height: 200px; font-size: 50px; text-align: center; box-shadow: 0 0 8px var(--white); -webkit-box-reflect: below 10px linear-gradient(transparent, transparent, #00000055); } .drag-container .img-alt.text-center { display: none; } .drag-container br { display: none; } .drag-container p { font-family: Serif; position: absolute; top: 100%; left: 50%; transform: translate(-50%, -50%) rotateX(90deg); color: var(--white); font-size: 1.5em; line-height: 1.3; } .drag-container img:hover, .drag-container video:hover { box-shadow: 0 0 15px #ffffffdd; -webkit-box-reflect: below 10px linear-gradient(transparent, transparent, #00000077); } .carousel-ground { width: 900px; height: 900px; position: absolute; top: 250px; left: 50%; transform: translate(-50%, -50%) rotateX(90deg); background: radial-gradient(center center, farthest-side, #99999933, transparent); }","link":"/css/tag_plugins_custom@1.0.17/carousel@0.0.1.css"},{"title":"","text":".checkbox { display: flex; align-items: center; } .checkbox input { appearance: none; position: relative; height: 16px; width: 16px; transition: all 0.15s ease-out 0s; cursor: pointer; display: inline-block; outline: none; border-radius: 2px; flex-shrink: 0; margin-right: 8px; border: 2px solid var(--tag-blue); pointer-events: none; } .checkbox input[type=\"checkbox\"]::before { left: 1px; top: 5px; width: 0; height: 2px; transition: all 0.2s ease-in; transform: rotate(45deg); } .checkbox input[type=\"checkbox\"]::after { right: 7px; bottom: 3px; width: 2px; height: 0; transition: all 0.2s ease-out; transform: rotate(40deg); transition-delay: 0.25s; } .checkbox input[type=\"checkbox\"]:checked { background: var(--tag-blue); } .checkbox input[type=\"checkbox\"]:checked::before { left: 0; top: 7px; width: 6px; height: 2px; } .checkbox input[type=\"checkbox\"]:checked::after { right: 3px; bottom: 1px; width: 2px; height: 10px; } .checkbox.minus input[type=\"checkbox\"]::before { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.minus input[type=\"checkbox\"]::after { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.minus input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.minus input[type=\"checkbox\"]:checked::after { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.plus input[type=\"checkbox\"]::before { transform: rotate(0); left: 1px; top: 5px; width: 0; height: 2px; } .checkbox.plus input[type=\"checkbox\"]::after { transform: rotate(0); left: 5px; top: 1px; width: 2px; height: 0; } .checkbox.plus input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.plus input[type=\"checkbox\"]:checked::after { left: 5px; top: 1px; width: 2px; height: 10px; } .checkbox.times input[type=\"checkbox\"]::before { transform: rotate(45deg); left: 3px; top: 1px; width: 0; height: 2px; } .checkbox.times input[type=\"checkbox\"]::after { transform: rotate(135deg); right: 3px; top: 1px; width: 0; height: 2px; } .checkbox.times input[type=\"checkbox\"]:checked::before { left: 1px; top: 5px; width: 10px; height: 2px; } .checkbox.times input[type=\"checkbox\"]:checked::after { right: 1px; top: 5px; width: 10px; height: 2px; } .checkbox input[type=\"radio\"] { border-radius: 50%; } .checkbox input[type=\"radio\"]::before { content: \"\"; display: block; width: 8px; height: 8px; border-radius: 50%; margin: 2px; transform: scale(0); transition: all 0.25s ease-out; } .checkbox input[type=\"radio\"]:checked::before { transform: scale(1); background: var(--sub-theme-color); } .checkbox.red input { border-color: var(--tag-red); } .checkbox.red input[type=\"checkbox\"]:checked { background: var(--tag-red); } .checkbox.red input[type=\"radio\"]:checked::before { background: var(--tag-red); } .checkbox.green input { border-color: var(--tag-green); } .checkbox.green input[type=\"checkbox\"]:checked { background: var(--tag-green); } .checkbox.green input[type=\"radio\"]:checked::before { background: var(--tag-green); } .checkbox.yellow input { border-color: var(--tag-yellow); } .checkbox.yellow input[type=\"checkbox\"]:checked { background: var(--tag-yellow); } .checkbox.yellow input[type=\"radio\"]:checked::before { background: var(--tag-yellow); } .checkbox.cyan input { border-color: var(--tag-cyan); } .checkbox.cyan input[type=\"checkbox\"]:checked { background: var(--tag-cyan); } .checkbox.cyan input[type=\"radio\"]:checked::before { background: var(--tag-cyan); } .checkbox.blue input { border-color: var(--tag-blue); } .checkbox.blue input[type=\"checkbox\"]:checked { background: var(--tag-blue); } .checkbox.blue input[type=\"radio\"]:checked::before { background: var(--tag-blue); } .checkbox p { display: inline-block; margin-top: 2px !important; margin-bottom: 0 !important; } .checkbox input[type=\"checkbox\"]::before, .checkbox input[type=\"checkbox\"]::after { position: absolute; content: \"\"; background: var(--white); }","link":"/css/tag_plugins_custom@1.0.17/checkbox@0.0.1.css"},{"title":"","text":"/* @import \"//at.alicdn.com/t/c/font_4814779_nyhonqavyya.css\"; */ /* replace var(--light-grey) to light-grey */ :root { --tag-pure-red: #e8453c; --tag-red: #fe5f58; --tag-red30: #fe5f584d; --tag-red-orange: #ff5722; --tag-red-orange15: #ff572226; --tag-orange: #f77c17; --tag-orange30: #f77c174d; --tag-yellow: #ffbd2b; --tag-yellow30: #ffbd2b4d; --tag-green: #3dc550; --tag-green30: #3dc5504d; --tag-blue: #2196f3; --tag-blue30: #2196f34d; --tag-cyan: #1bcdfc; --tag-cyan30: #1bcdfc4d; --tag-pink-purple: #d017ee; --tag-pink-purple30: #d017ee4d; --tag-purple: #9b51e0; } [data-theme=\"dark\"] s, [data-theme='dark'] del { mix-blend-mode: screen; } [data-theme='dark'] .note.flat del, [data-theme='dark'] .note.modern del { mix-blend-mode: multiply; } #article-container .note.modern a, #article-container .note.flat a { color: unset } [data-theme='dark'] body:not(.read-mode) #article-container .note code, [data-theme='dark'] body:not(.read-mode) #article-container summary code, [data-theme='dark'] body.read-mode #article-container details.toggle code { background: #0000001c; color: unset; } u, emp, wavy, psw:hover { color: unset !important; } span.image-caption { display: table; margin: -1em auto 1.4em; color: var(--grey); font-size: 0.9em; } span.image-caption::before, /* .fancybox__caption::before, */ .jg-caption-visible::before { content: \"⊙︎ \"; } span.image-caption::after, /* .fancybox__caption::after, */ .jg-caption-visible::after { content: \" ⊙︎\"; } span.image-caption, .fancybox__caption, .jg-caption-visible { text-align: center; } :root { --bubble-text-color: #e9a218; --bubble-text-hover-color: #2c7fe7; --bubble-text-shadow: #23232380; } [data-theme=\"dark\"] { --bubble-text-color: #f2b94b; --bubble-text-hover-color: #2c7fe7; --bubble-text-shadow: #23232380; } .bubble { white-space: nowrap; } .bubble-content { display: inline-block; color: var(--bubble-text-color); font-weight: 600; text-shadow: var(--bubble-text-shadow); } .bubble-content:hover { transition: all 0.2s ease-in-out; color: var(--bubble-text-hover-color); } .bubble-content:hover + .bubble-notation .bubble-item { transform: rotateX(0deg); transition: transform 0.3s ease-in-out; opacity: 1; } .bubble-notation { display: inline-block; white-space: wrap; } .bubble-item { transition: all 0.3s ease-in-out; opacity: 0; color: var(--white); z-index: 99; display: block; position: absolute; transform-origin: 50% 0; transform: rotateX(90deg); width: fit-content; max-width: 400px; overflow: hidden; padding: 1.2em 0.6em 0.5em 0.6em; /* clip-path: polygon(5px 10px, 20px 10px, 30px 0, 40px 10px, calc(100% - 5px) 10px, 100% 15px, 100% calc(100% - 5px), calc(100% - 5px) 100%, 5px 100%, 0 calc(100% - 5px), 0 15px, 5px 10px); */ } img.medium-zoom-image.entered.loaded.medium-zoom-image--opened { width: auto !important; } @keyframes spin { from { transform: rotateY(0deg); } to { transform: rotateY(360deg); } } @keyframes spinRevert { from { transform: rotateY(360deg); } to { transform: rotateY(0deg); } } details.folding-tag { display: block; padding: 1em; margin: 1em 0; font-size: var(--global-font-size); border: 1px solid var(--grey60); border-radius: 4px; } details.folding-tag summary { cursor: pointer; padding: 1em; margin: -1.11em; border-radius: 3px; color: var(--dark-black50); font-size: 0.9em !important; font-weight: 600; position: relative; line-height: normal; } details.folding-tag summary > p, details.folding-tag summary > h1, details.folding-tag summary > h2, details.folding-tag summary > h3, details.folding-tag summary > h4, details.folding-tag summary > h5, details.folding-tag summary > h6 { display: inline; border-bottom: none !important; } details.folding-tag summary:hover { color: var(--dark-black60) } details.folding-tag summary:hover::after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 16px; } details.folding-tag[open] > summary { border-bottom-left-radius: 0; border-bottom-right-radius: 0; } details.folding-tag > summary { background: var(--light-grey); } [data-theme=\"dark\"] details.folding-tag > summary, [data-theme=\"dark\"] .toggle > .toggle-button { background: #98999d; } details.folding-tag[purple] { border-color: #fae7fd; } details.folding-tag[purple] > summary { background: #fae7fd; } details.folding-tag[blue] { border-color: var(--tag-blue30); } details.folding-tag[blue] > summary { background: #e8f4fd; } [data-theme=\"dark\"] details.folding-tag[blue] > summary { background: #728ea7; } details.folding-tag[cyan] { border-color: #e8fafe; } details.folding-tag[cyan] > summary { background: #e8fafe; } details.folding-tag[green] { border-color: #ebf9ed; } details.folding-tag[green] > summary { background: #ebf9ed; } details.folding-tag[yellow] { border-color: #fff8e9; } details.folding-tag[yellow] > summary { background: #fff8e9; } details.folding-tag[orange] { border-color: #fdf1e7; } details.folding-tag[orange] > summary { background: #fdf1e7; } details.folding-tag[red] { border-color: #feefee; } details.folding-tag[red] > summary { background: #feefee; } details.folding-tag[open][purple] { border-color: var(--tag-pink-purple30); } details.folding-tag[open][purple] > summary { border-bottom-color: var(--tag-pink-purple30); } details.folding-tag[open][blue] { border-color: var(--tag-blue30); } details.folding-tag[open][blue] > summary { border-bottom-color: var(--tag-blue30); } details.folding-tag[open][cyan] { border-color: var(--tag-cyan30); } details.folding-tag[open][cyan] > summary { border-bottom-color: var(--tag-cyan30); } details.folding-tag[open][green] { border-color: var(--tag-green30); } details.folding-tag[open][green] > summary { border-bottom-color: var(--tag-green30); } details.folding-tag[open][yellow] { border-color: var(--tag-yellow30); } details.folding-tag[open][yellow] > summary { border-bottom-color: var(--tag-yellow30); } details.folding-tag[open][orange] { border-color: var(--tag-orange30); } details.folding-tag[open][orange] > summary { border-bottom-color: var(--tag-orange30); } details.folding-tag[open][red] { border-color: var(--tag-red30); } details.folding-tag[open][red] > summary { border-bottom-color: var(--tag-red30); } details.folding-tag[open] > summary { /* color: #444; */ margin-bottom: 0; } details.folding-tag[open] > summary:hover::after { content: '-'; } details.folding-tag[open] > div.content { padding: 16px; margin: -16px; margin-top: 0; } details.folding-tag[open] > div.content p>a:hover { text-decoration: underline; } details.folding-tag[open] > div.content > p:first-child, details.folding-tag[open] > div.content > .tabs:first-child, details.folding-tag[open] > div.content > ul:first-child, details.folding-tag[open] > div.content > ol:first-child, details.folding-tag[open] > div.content > .highlight:first-child, details.folding-tag[open] > div.content > .note:first-child, details.folding-tag[open] > div.content > details:first-child { margin-top: 0; } details.folding-tag[open] > div.content > p:last-child, details.folding-tag[open] > div.content > .tabs:last-child, details.folding-tag[open] > div.content > ul:last-child, details.folding-tag[open] > div.content > ol:last-child, details.folding-tag[open] > div.content > .highlight:last-child, details.folding-tag[open] > div.content > .note:last-child, details.folding-tag[open] > div.content > details:last-child { margin-bottom: 0; } a.ghcard { display: inline-block; line-height: 0; } .md .ghcard-group { column-count: 2; column-gap: 0; margin: 0 -8px; } .md .ghcard-group .ghcard { margin: 8px; } .md .img { object-fit: contain; } img.inline { display: inline !important; vertical-align: middle; transform: translateY(-4px); } p .img-alt { display: inline-block; width: 100%; } s, del { color: #757575cc; text-decoration-color: #757575cc; mix-blend-mode: multiply; } u { /* color: #444; */ text-decoration: none; border-bottom: 1px solid var(--tag-red); } emp { /* color: #444; */ border-bottom: 2px dotted var(--tag-red); } wavy { /* color: #444; */ text-decoration-style: wavy; text-decoration-line: underline; text-decoration-color: var(--tag-red); } psw:hover { border-radius: 2px; transition: background 0.3s ease, color 0.15s 0.15s; } psw:not(:hover) { color: transparent; background: #a1a1a1; } kbd { display: inline-block; color: #666; font-family: Arial Rounded MT Bold; font-size: 0.75em; text-decoration: none; text-align: center; padding: 2px 5px; margin: 0 5px; background: #eff0f2; border-radius: 4px; border-top: 1px solid #f5f5f5; box-shadow: inset 0 0 20px #e8e8e8, 0 1px 0 #c3c3c3, 0 1px 0 #c9c9c9, 0 1px 2px #333; text-shadow:0 1px 0 #f5f5f5 } #article-container .tag.link { text-align: center; } audio, video { border-radius: 4px; max-width: 100%; } video { z-index: 1; transition: box-shadow 0.3s ease; } video:hover { box-shadow: 0 0 4px var(--grey), 0 0 8px var(--grey); } div.video { line-height: 0; text-align: center; } div.videos { max-width: calc(100% + 2 * 4px); display: flex; flex-wrap: wrap; justify-content: flex-start; align-items: flex-end; /* margin: 1em -4px; */ margin: 0 -4px; } div.videos .video, div.videos iframe { width: 100%; margin: 4px; } div.videos iframe { border-radius: 4px; width: 100%; min-height: 300px; } div.videos.left { justify-content: flex-start; } div.videos.center { justify-content: center; } div.videos.right { justify-content: flex-end; } div.videos.stretch { align-items: stretch; } div.videos[col='1'] .video, div.videos[col='1'] iframe { width: 100%; } div.videos[col='2'] .video, div.videos[col='2'] iframe { width: calc(50% - 2 * 4px); } div.videos[col='3'] .video, div.videos[col='3'] iframe { width: calc(33.33% - 2 * 4px); } div.videos[col='4'] .video, div.videos[col='4'] iframe { width: calc(25% - 2 * 4px); } /* [data-theme=\"dark\"] audio, [data-theme=\"dark\"] video { filter: brightness(0.7); } */ span.nota { /* color: #99a9bf; */ color: inherit; text-decoration: none; word-wrap: break-word; transition: all 0.2s; overflow-wrap: break-word; } span.nota:hover { color: var(--sub-theme-color); } span.nota:hover::before { position: fixed; width: fit-content; max-width: 80%; margin: auto; left: 0; right: 0; top: 6%; border-radius: 10px; text-align: center; z-index: 100; content: attr(data-nota); font-size: 16px; color: var(--white); padding: 10px; background-color: var(--sub-theme-color); } [data-theme=dark] span.nota:hover::before { background-color: #121212cc; } @media (min-width: 1200px) { .poem { margin: 0 auto; height: auto; writing-mode: tb-rl; } .poem p { text-decoration: underline; text-decoration-color: #c10b0bb8; text-decoration-style: dashed; } } /* @font-face { font-family: 'Poem'; src: url(\"https://unpkg.zhimg.com/akilar-candyassets/fonts/Poem.ttf\"); font-display: swap; } */ .poem p { /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 25px; text-align: center; } .poem-title { /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 2.5em; text-align: center; } .poem-author { text-align: center !important; /* font-family: 'Poem', 'KaiTi', sans-serif !important; */ font-family: 'KaiTi', sans-serif !important; font-size: 16px; color: #424242; } .progress { display: flex; font-size: var(--global-font-size); background-color: #58585899; border-radius: 0.25em; margin: 1em 0; height: 2em; overflow: hidden; } .progress p { margin: 0 0 0 10px !important; } .progress .progress-bar-animated { background-color: #a7b5fd !important; animation: progress-bar-stripes 1s linear infinite; } .progress .progress-bar-striped { background-image: linear-gradient(45deg, #ffffff26 25%, transparent 25%, transparent 50%, #ffffff26 50%, #ffffff26 75%, transparent 75%, transparent); background-size: 1em 1em; } .progress .progress-bar { display: flex; flex-direction: column; justify-content: center; overflow: visible; color: var(--white); text-align: center; white-space: nowrap; background-color: #0d6efd; transition: width 0.6s ease; } @media (prefers-reduced-motion: reduce) { .progress .progress-bar { transition: none; } } .progress .bg-green { background-color: #28a745 !important; } .progress .bg-yellow { background-color: #ffc107 !important; } .progress .bg-red { background-color: #dc3545 !important; } .progress .bg-cyan { background-color: #17a2b8 !important; } .progress .bg-blue { background-color: #0d6efd !important; } .progress .bg-gray { background-color: #7f838a !important; } @keyframes progress-bar-stripes { 0% { background-position-x: 1em; } } :root { --referto-text-color: #e9a218; --referto-text-hover-color: #2c7fe7; --referto-literature-background-color: #318efd; --referto-title-background-color: #183153; --referto-content-text-color: #f1f1ef; --referfrom-text-shadow: #23232380; --referfrom-text-color: #f1f1ef; --referfrom-text-hover-color: #f2b94b; --referfrom-link-color: #403e3b; --referfrom-link-hover-color: #235dac; --referfrom-background-color: #f1f1ef; --reference-anchor-color: #183153; --reference-anchor-up-color: #318efd; } [data-theme=\"dark\"] { --referto-text-color: #f2b94b; --referto-text-hover-color: #2c7fe7; --referto-literature-background-color: #5c6167; --referto-title-background-color: #090a0b; --referto-content-text-color: #f1f1ef; --referfrom-text-shadow: #23232380; --referfrom-text-color: #f1f1ef; --referfrom-text-hover-color: #f2b94b; --referfrom-link-color: #f1f1ef; --referfrom-link-hover-color: #f2b94b; --referfrom-background-color: #5c6167ad; --reference-anchor-color: #090a0b; --reference-anchor-up-color: #183153; } .hidden-anchor { position: relative; top: -150px; display: inline-block; height: 0; overflow: hidden; } .reference a { display: inline-block; color: var(--referto-text-color) !important; font-weight: 600; transition: all 0.2s ease-in-out; } .reference:hover a { transition: all 0.2s ease-in-out; text-decoration: none !important; color: var(--referto-text-hover-color) !important; } .reference:hover + .reference-bubble .reference-item { transform: translate(-40px, 10px) rotateX(0deg); transition: all 0.5s ease-in-out; opacity: 1; } .reference-bubble { display: inline-block; } .reference-item { transition: all 0.5s ease-in-out; opacity: 0; z-index: 99; display: flex; position: absolute; transform: translate(-40px, 10px) rotateX(90deg); width: auto; height: auto; clip-path: polygon(5px 10px, 20px 10px, 30px 0, 40px 10px, calc(100% - 5px) 10px, 100% 15px, 100% calc(100% - 5px), calc(100% - 5px) 100%, 5px 100%, 0 calc(100% - 5px), 0 15px, 5px 10px); } .reference-literature { max-width: 200px; padding: 20px 10px 10px 10px; background: var(--referto-literature-background-color); color: var(--referto-content-text-color) !important; word-wrap: break-word; word-break: break-all; display: flex; align-items: center; } .reference-title { padding: 20px 10px 10px 10px; background: var(--referto-title-background-color); color: var(--referto-content-text-color) !important; writing-mode: vertical-lr; display: flex; justify-content: center; } .reference-source { font-size: 16px; height: auto; line-height: 26px; width: fit-content; margin: 5px 0; /* max-width: 90%; */ background: var(--referfrom-background-color); box-shadow: 1px 1px 1px var(--referfrom-text-shadow); border-radius: 8px; padding-right: 10px; } .reference-source pangu { display: none; } a.reference-anchor { border-bottom-left-radius: 5px; border-top-left-radius: 5px; color: var(--referfrom-text-color) !important; background: var(--reference-anchor-color); height: 30px; display: inline-block; width: fit-content; padding: 0px 0px 0px 10px; } a.reference-anchor:hover { color: var(--referfrom-text-hover-color) !important; text-decoration: none !important; } a.reference-anchor:hover .reference-anchor-up { color: var(--referfrom-text-hover-color) !important; } a.reference-link { color: var(--referfrom-link-color) !important; padding: 0px 10px; } a.reference-link:hover { color: var(--referfrom-link-hover-color) !important; text-decoration: none !important; } .reference-anchor-up { color: var(--referfrom-text-color) !important; height: 30px; width: 40px; padding: 0px 0px 0px 10px; background: var(--reference-anchor-up-color); display: inline-flex !important; align-items: center; justify-content: center; clip-path: polygon(0 0, 10px 50%, 0 100%, 100% 100%, 100% 0); } p.p.subtitle { font-weight: 600; color: #44b299; font-size: 1.25em !important; padding-top: 1.5em; } p.p.subtitle:first-child { padding-top: 1em; } span.p.left, p.p.left { display: block; text-align: left; } span.p.center, p.p.center { display: block; text-align: center; } span.p.right, p.p.right { display: block; text-align: right; } span.p.small, p.p.small { font-size: var(--global-font-size); } span.p.semi-large, p.p.semi-large { font-size: 1.5em; line-height: 1.4; } span.p.large, p.p.large { font-size: 2.5em; line-height: 1.4; } span.p.huge, p.p.huge { font-size: 4em; line-height: 1.4; } span.p.ultra, p.p.ultra { font-size: 6em; line-height: 1.4; } span.p.small, p.p.small, span.p.large, p.p.large, span.p.huge, p.p.huge, span.p.ultra, p.p.ultra { margin: 0; padding: 0; } span.p.bold, p.p.bold { font-weight: 600; } span.p.h1, p.p.h1, span.p.h2, p.p.h2 { padding-bottom: 0.2em; font-weight: 500; } span.p.h1, p.p.h1 { font-size: 1.65em; color: var(--color-h1); padding-top: 2em; } span.p.h2, p.p.h2 { font-size: 1.65em; color: var(--color-h2); padding-top: 2em; border-bottom: 1px solid #4444441a; } span.p.h3, p.p.h3 { font-size: 1.375em; color: var(--color-h3); padding-top: 2em; } span.p.h4, p.p.h4 { font-size: 1.125em; color: var(--color-h4); padding-top: 2em; } span.p.h5, p.p.h5 { font-size: 1em; color: var(--color-h5); padding-top: 1.5em; } span.p.red, p.p.red { color: var(--tag-pure-red); } span.p.yellow, p.p.yellow { color: #fcec60; } span.p.green, p.p.green { color: var(--tag-green); } span.p.cyan, p.p.cyan { color: var(--tag-cyan); } span.p.blue, p.p.blue { color: var(--tag-blue); } span.p.purple, p.p.purple { color: #9c27b0; } span.p.gray, p.p.gray { color: #999; }","link":"/css/tag_plugins_custom@1.0.17/common@0.0.1.css"},{"title":"","text":"#article-container a.link-card { margin: 0.25em auto; background: var(--light-grey); display: inline-flex; align-items: center; cursor: pointer; text-align: center; min-width: 200px; max-width: 361px; color: var(--dark-black60); border-radius: 12px; text-decoration: none; } #article-container a.link-card:hover { box-shadow: 0 4px 8px 0 #0000001a; } #article-container a.link-card div.left { width: 48px; height: 48px; margin: 12px; overflow: hidden; flex-shrink: 0; position: relative; } #article-container a.link-card div.left i { font-size: 32px; line-height: 48px; margin-left: 4px; } #article-container a.link-card div.left img { display: block; position: absolute; border-radius: 2px; top: 50%; left: 50%; transform: translate(-50%, -50%); } #article-container a.link-card div.right { overflow: hidden; margin-right: 12px; } #article-container a.link-card p { margin: 0; } #article-container a.link-card p.text { font-weight: 600; } #article-container a.link-card p.url { flex-shrink: 0; color: #444444a6; font-size: 13px; } @media screen and (max-width: 425px) { #article-container a.link-card { max-width: 100%; } } @media screen and (max-width: 375px) { #article-container a.link-card { width: 100%; } } #article-container a.link-card div.left, #article-container a.link-card div.right { pointer-events: none; } /* [data-theme=\"dark\"] #article-container a.link-card { filter: brightness(0.7); } */ /* [data-theme=\"dark\"] #article-container a.link-card img { filter: brightness(1); } */","link":"/css/tag_plugins_custom@1.0.17/linkcard@0.0.1.css"},{"title":"","text":".site-card-group { display: flex; flex-wrap: wrap; justify-content: flex-start; margin: -8px; align-items: stretch; } .site-card { margin: 8px; width: calc(100% / 3 - 16px); display: block; line-height: 1.4; height: 100%; } @media screen and (min-width: 2048px) { .site-card { width: calc(100% / 5 - 16px); } } @media screen and (max-width: 768px) { .site-card { width: calc(100% / 3 - 16px); } } @media screen and (max-width: 500px) { .site-card { width: calc(100% / 2 - 16px); } } .site-card .img { width: 100%; height: 120px; overflow: hidden; border-radius: 6px; box-shadow: 0 1px 2px 0px #00000033; background: var(--light-grey); } @media screen and (max-width: 500px) { .site-card .img { height: 100px; } } .site-card .img img { width: 100%; height: 100%; pointer-events: none; transition: transform 2s ease; object-fit: cover; } .site-card .info { margin-top: 8px; } #article-container .site-card .info span { text-decoration: underline; text-decoration-color: var(--card-bg); } #article-container .site-card .info img { width: 32px; height: 32px; pointer-events: none; border-radius: 16px; float: left; margin-right: 8px; margin-top: 2px; } .site-card .info span { display: block; } .site-card .info .title { font-weight: 600; font-size: var(--global-font-size); color: var(--font-color); display: block; overflow: hidden; line-clamp: 1; transition: all 0.28s ease; } .site-card .info .desc { font-size: var(--global-font-size); word-wrap: break-word; line-height: 1.2; color: var(--meta-color); display: block; overflow: hidden; line-clamp: 2; } .site-card .img { transition: color 0.28s ease; } .site-card:hover .img { box-shadow: 0 4px 8px 0px #0000001a, 0 2px 4px 0px #0000001a, 0 4px 8px 0px #0000001a, 0 8px 16px 0px #0000001a; } .site-card:hover .info .title { color: var(--tag-red-orange); }","link":"/css/tag_plugins_custom@1.0.17/sitecard@0.0.1.css"},{"title":"","text":".medium-zoom-overlay { position: fixed; top: 0; right: 0; bottom: 0; left: 0; opacity: 0; transition: opacity .3s; will-change: opacity } .medium-zoom--opened .medium-zoom-overlay { cursor: pointer; opacity: 1 } .medium-zoom-image { cursor: pointer; transition: transform .3s cubic-bezier(.2, 0, .2, 1) !important } .medium-zoom-image--hidden { visibility: hidden } .medium-zoom-image--opened { position: relative; cursor: pointer; will-change: transform }","link":"/css/tag_plugins_custom@1.0.17/medium_zoom@1.1.0.css"},{"title":"","text":"/* Tag Plugins - Tip */ .tip { padding: 6px 20px; position: relative; color: #fff; margin-bottom: 20px; background: #41363c; background: linear-gradient(90deg, #41363c, #494648); padding: 6px 20px; border-radius: 10px; box-shadow: 0 3px 5px #32323280; } .tip p { margin: 0 !important; padding: 0.5em 0; } .tip::before { background: #41363c; background: linear-gradient(0deg, #41363c, #494648); text-shadow: 0 -1px #41363c; border-radius: 50%; color: #fff; font-size: 12px; position: absolute; width: 24px; height: 24px; line-height: 24.5px; left: -12px; top: -12px; box-shadow: 0 0 0 2.5px #f7f8f9; font-weight: 600; font-family: \"Font Awesome 6 Free\"; text-align: center; } .tip ol { margin: 0; } .tip.info { background: linear-gradient(90deg, #20a0ff, #20b8ff); padding: 6px 20px; border-radius: 10px; box-shadow: 0 3px 5px #20a0ff80; } .tip.info::before { background: linear-gradient(0deg, #0092ff, #20b8ff); content: \"\\f129\"; text-shadow: 0 -1px #20a0ff; } .tip.success { background: linear-gradient(90deg, #61be33, #8fce44); text-shadow: 0 -1px #61be33; box-shadow: 0 3px 5px #68c33b80; } .tip.success::before { background: linear-gradient(0deg, #52bb1d, #95d34b); content: \"\\f00c\"; text-shadow: 0 -1px #61be33; } .tip.warning { background: linear-gradient(90deg, #ff953f, #ffb449); text-shadow: 0 -1px #ff953f; box-shadow: 0 3px 5px #ff9a4980; } .tip.warning::before { background: linear-gradient(0deg, #ff8f35, #ffc149); content: \"\\f12a\"; text-shadow: 0 -1px #ff953f; } .tip.error { background: linear-gradient(90deg, #ff4949, #ff7849); text-shadow: 0 -1px #ff4949; box-shadow: 0 3px 5px #ff494980; } .tip.error::before { background: linear-gradient(0deg, #ff3838, #ff7849); content: \"\\f00d\"; text-shadow: 0 -1px #ff4949; } .tip.bolt { background: linear-gradient(530deg, #78ca33, #25822c); content: \"\\f00d\"; text-shadow: 0 -1px #4cf706; } .tip.bolt::before { background: linear-gradient(776deg, #78ca33, #25822c); content: \"\\f0e7\"; text-shadow: 0 -1px #4cf706; } .tip.ban { background: linear-gradient(90deg, #ff4949, #f03b49); text-shadow: 0 -1px #ff4949; box-shadow: 0 3px 5px #ff494980; } .tip.ban::before { background: linear-gradient(0deg, #ff3838, #ff1022); content: \"\\f05e\"; text-shadow: 0 -1px #ff4949; } .tip.home { background: linear-gradient(90deg, #0ec0ef, #80e0f7); text-shadow: 0 -1px #0ec0ef; box-shadow: 0 3px 5px #01caff; } .tip.home::before { background: linear-gradient(0deg, #0ec0ee, #0ec0ea); content: \"\\f015\"; text-shadow: 0 -1px #0ec0ea; } .tip.sync { background: linear-gradient(230deg, #47c0e0, #2dc342); text-shadow: 0 -1px #1bcdfc; box-shadow: 0 3px 5px #20b1ad; } .tip.sync::before { background: linear-gradient(270deg, #40c0e2, #3dc550); content: \"\\f021\"; text-shadow: 0 -1px #17cfff; } .tip.cogs { background: linear-gradient(230deg, #40c0e2, #5247e2); text-shadow: 0 -1px #8278fd; box-shadow: 1 3px 5px #5e52ec; } .tip.cogs::before { background: linear-gradient(560deg, #40c0e2, #5246e2); content: \"\\f085\"; text-shadow: 0 -1px #098cf5; } .tip.key { background: #25c33b; background: linear-gradient(230deg, #90a4ae, #b7a7a7); text-shadow: 0 -1px #c1c0d4; box-shadow: 1 3px 5px #d5d4de; } .tip.key::before { background: linear-gradient(560deg, #bccdd2, #cfced4); content: \"\\f084\"; text-shadow: 0 -1px #a9b2b9; } .tip.bell { background: #25c33b; background: linear-gradient(230deg, #ffaa0d, #deb455); text-shadow: 0 -1px #c1c0d4; box-shadow: 1 3px 5px #d5d4de; } .tip.bell::before { background: linear-gradient(560deg, #f9ae07, #ffb615); content: \"\\f0f3\"; text-shadow: 0 -1px #ffb81b; } [data-theme=\"dark\"] .tip { filter: brightness(0.7); } #article-container .tip a { color: #e6eaed; }","link":"/css/tag_plugins_custom@1.0.17/tip@0.0.1.css"},{"title":"","text":"{\"name\":\"App\",\"icons\":[{\"src\":\"/android-icon-36x36.png\",\"sizes\":\"36x36\",\"type\":\"image/png\",\"density\":\"0.75\"},{\"src\":\"/android-icon-48x48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\",\"density\":\"1.0\"},{\"src\":\"/android-icon-72x72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\",\"density\":\"1.5\"},{\"src\":\"/android-icon-96x96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\",\"density\":\"2.0\"},{\"src\":\"/android-icon-144x144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\",\"density\":\"3.0\"},{\"src\":\"/android-icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"density\":\"4.0\"},{\"src\":\"/android-chrome-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/android-chrome-512x512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}],\"theme_color\":\"#ffffff\",\"background_color\":\"#ffffff\",\"display\":\"standalone\"}","link":"/img/favicon_io/manifest.json"},{"title":"카테고리","text":"","link":"/ko/categories/index.html"},{"title":"태그","text":"","link":"/ko/tags/index.html"},{"title":"","text":"/** * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * First Modified by hexo-theme-butterfly * Then Add the ability to search by language, tags, and categories */ class LocalSearch { constructor ({ path = '', unescape = false, top_n_per_article = 1 }) { this.path = path this.unescape = unescape this.top_n_per_article = top_n_per_article this.isfetched = false this.datas = null } getIndexByWord (words, text, caseSensitive = false) { const index = [] const included = new Set() if (!caseSensitive) { text = text.toLowerCase() } words.forEach(word => { if (this.unescape) { const div = document.createElement('div') div.innerText = word word = div.innerHTML } const wordLen = word.length if (wordLen === 0) return let startPosition = 0 let position = -1 if (!caseSensitive) { word = word.toLowerCase() } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({ position, word }) included.add(word) startPosition = position + wordLen } }) // Sort index by position of keyword index.sort((left, right) => { if (left.position !== right.position) { return left.position - right.position } return right.word.length - left.word.length }) return [index, included] } // Merge hits into slices mergeIntoSlice (start, end, index) { let item = index[0] let { position, word } = item const hits = [] const count = new Set() while (position + word.length position) { index.shift() } else { break } } } return { hits, start, end, count: count.size } } // Highlight title and content highlightKeyword (val, slice) { let result = '' let index = slice.start for (const { position, length } of slice.hits) { result += val.substring(index, position) index = position + length result += `${val.substr(position, length)}` } result += val.substring(index, slice.end) return result } getResultItems (keywords) { const resultItems = [] this.datas.forEach(({ title, language, tags, categories, content, url }) => { // The number of different keywords included in the article. const [indexOfTitle, keysOfTitle] = this.getIndexByWord(keywords, title) const indexAndkeysOfTags = tags.map(tag => this.getIndexByWord(keywords, tag)) const indexAndkeydOfCategories = categories.map(cat => this.getIndexByWord(keywords, cat)) const [indexOfContent, keysOfContent] = this.getIndexByWord(keywords, content) // Change includedCount into weighted value (title: 3, tags: 2, categories: 2, content: 1) // const includedCount = new Set([...keysOfTitle, ...keysOfContent]).size // ORIGINAL const includedCount = keysOfTitle.size * 3 + indexAndkeysOfTags.reduce((acc, [_, keys]) => acc + keys.size, 0) * 2 + indexAndkeydOfCategories.reduce((acc, [_, keys]) => acc + keys.size, 0) * 2 + keysOfContent.size // Show search results // const hitCount = indexOfTitle.length + indexOfContent.length // ORIGINAL const hitCount = indexOfTitle.length + indexOfContent.length + indexAndkeysOfTags.reduce((acc, [index, _]) => acc + index.length, 0) + indexAndkeydOfCategories.reduce((acc, [index, _]) => acc + index.length, 0) if (hitCount === 0) return const slicesOfTitle = [] if (indexOfTitle.length !== 0) { slicesOfTitle.push(this.mergeIntoSlice(0, title.length, indexOfTitle)) } const slicesOfTags = [] indexAndkeysOfTags.forEach((indexAndkeysOfTag, index) => { const [indexOfTag, _] = indexAndkeysOfTag if (indexOfTag.length !== 0) { slicesOfTags.push(this.mergeIntoSlice(0, tags[index].length, indexOfTag)) } else { slicesOfTags.push(null) } }) const slicesOfCategories = [] indexAndkeydOfCategories.forEach((indexAndkeydOfCategory, index) => { const [indexOfCategory, _] = indexAndkeydOfCategory if (indexOfCategory.length !== 0) { slicesOfCategories.push(this.mergeIntoSlice(0, categories[index].length, indexOfCategory)) } else { slicesOfCategories.push(null) } }) let slicesOfContent = [] while (indexOfContent.length !== 0) { const item = indexOfContent[0] const { position } = item // Cut out 120 characters. The maxlength of .search-input is 80. const start = Math.max(0, position - 20) const end = Math.min(content.length, position + 100) slicesOfContent.push(this.mergeIntoSlice(start, end, indexOfContent)) } // Sort slices in content by included keywords' count and hits' count slicesOfContent.sort((left, right) => { if (left.count !== right.count) { return right.count - left.count } else if (left.hits.length !== right.hits.length) { return right.hits.length - left.hits.length } return left.start - right.start }) // Select top N slices in content const upperBound = parseInt(this.top_n_per_article, 10) if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound) } let resultItem = '' url = new URL(url, location.origin) url.searchParams.append('highlight', keywords.join(' ')) if (slicesOfTitle.length !== 0) { resultItem += `${this.highlightKeyword(title, slicesOfTitle[0])}` } else { resultItem += `${title}` } resultItem += '' if (slicesOfTags.filter(slice => slice).length !== 0) { resultItem += `[Tags] ` slicesOfTags.forEach((slice, index) => { if (slice) { resultItem += `${this.highlightKeyword(tags[index], slice)}, ` } }) resultItem = resultItem.slice(0, -2) + '' } if (slicesOfCategories.filter(slice => slice).length !== 0) { resultItem += `[Categories] ` slicesOfCategories.forEach((slice, index) => { if (slice) { resultItem += `${this.highlightKeyword(categories[index], slice)}, ` } }) resultItem = resultItem.slice(0, -2) + '' } resultItem += '' slicesOfContent.forEach(slice => { resultItem += `${this.highlightKeyword(content, slice)}...` }) resultItem += '' resultItems.push({ item: resultItem, id: resultItems.length, hitCount, includedCount, language }) }) return resultItems } fetchData () { const isXml = !this.path.endsWith('json') fetch(this.path) .then(response => response.text()) .then(res => { // Get the contents from search data this.isfetched = true this.datas = isXml ? [...new DOMParser().parseFromString(res, 'text/xml').querySelectorAll('entry')].map(element => ({ title: element.querySelector('title').textContent, language: element.querySelector('language').textContent, tags: (element.querySelector('tags') !== null && element.querySelector('tags').textContent) || '', categories: (element.querySelector('categories') !== null && element.querySelector('categories').textContent) || '', content: element.querySelector('content').textContent, url: element.querySelector('url').textContent })) : JSON.parse(res) // Only match articles with non-empty titles this.datas = this.datas.filter(data => data.title).map(data => { data.title = data.title.trim() data.tags = data.tags ? data.tags.trim().replace(/\\n[\\s]+/g, '\\n').split('\\n') : [] data.categories = data.categories ? data.categories.trim().replace(/\\n[\\s]+/g, '\\n').split('\\n') : [] data.content = data.content ? data.content.trim().replace(/]+>/g, '') : '' data.url = decodeURIComponent(data.url).replace(/\\/{2,}/g, '/') return data }) // Remove loading animation window.dispatchEvent(new Event('search:loaded')) }) } // Highlight by wrapping node in mark elements with the given class name highlightText (node, slice, className) { const val = node.nodeValue let index = slice.start const children = [] for (const { position, length } of slice.hits) { const text = document.createTextNode(val.substring(index, position)) index = position + length const mark = document.createElement('mark') mark.className = className mark.appendChild(document.createTextNode(val.substr(position, length))) children.push(text, mark) } node.nodeValue = val.substring(index, slice.end) children.forEach(element => { node.parentNode.insertBefore(element, node) }) } // Highlight the search words provided in the url in the text highlightSearchWords (body) { const params = new URL(location.href).searchParams.get('highlight') const keywords = params ? params.split(' ') : [] if (!keywords.length || !body) return const walk = document.createTreeWalker(body, NodeFilter.SHOW_TEXT, null) const allNodes = [] while (walk.nextNode()) { if (!walk.currentNode.parentNode.matches('button, select, textarea, .mermaid')) allNodes.push(walk.currentNode) } allNodes.forEach(node => { const [indexOfNode] = this.getIndexByWord(keywords, node.nodeValue) if (!indexOfNode.length) return const slice = this.mergeIntoSlice(0, node.nodeValue.length, indexOfNode) this.highlightText(node, slice, 'search-keyword') }) } } window.addEventListener('load', () => { // Search const { path, top_n_per_article, unescape, languages } = GLOBAL_CONFIG.localSearch const localSearch = new LocalSearch({ path, top_n_per_article, unescape }) const currentLanguage = document.documentElement.getAttribute('page-lang') === 'default' ? document.documentElement.getAttribute('lang') : document.documentElement.getAttribute('page-lang') const input = document.querySelector('#local-search-input input') const statsItem = document.getElementById('local-search-stats-wrap') const $loadingStatus = document.getElementById('loading-status') const isXml = !path.endsWith('json') const inputEventFunction = () => { if (!localSearch.isfetched) return let searchText = input.value.trim().toLowerCase() isXml && (searchText = searchText.replace(//g, '&gt;')) if (searchText !== '') $loadingStatus.innerHTML = '' const keywords = searchText.split(/[-\\s]+/) const container = document.getElementById('local-search-results') const siteLang = document.querySelector('html').getAttribute('lang') || document.querySelector('html').getAttribute('page-lang') let resultItems = [] if (searchText.length > 0) { // Perform local searching resultItems = localSearch.getResultItems(keywords) } if (keywords.length === 1 && keywords[0] === '') { container.textContent = '' statsItem.textContent = '' } else if (resultItems.length === 0) { container.textContent = '' const statsDiv = document.createElement('div') statsDiv.className = 'search-result-stats' // statsDiv.textContent = languages.hits_empty.replace(/\\$\\{query}/, searchText) statsDiv.innerHTML = languages.map((item) => { if (item.lang === currentLanguage) { return `${item.hits_empty.replace(/\\$\\{query}/, searchText)}` } else { return `${item.hits_empty.replace(/\\$\\{query}/, searchText)}` } }).join('') statsItem.innerHTML = statsDiv.outerHTML } else { resultItems.sort((left, right) => { left_count = (siteLang === left.language) || left.language === 'default' ? left.includedCount + 10000 : left.includedCount right_count = (siteLang === right.language) || right.language === 'default' ? right.includedCount + 10000 : right.includedCount // console.log(siteLang, left.language, left_count, right.language, right_count) if (left_count !== right_count) { return right_count - left_count } else if (left.hitCount !== right.hitCount) { return right.hitCount - left.hitCount } return right.id - left.id }) // const stats = languages.hits_stats.replace(/\\$\\{hits}/, resultItems.length) const stats = languages.map((item) => { if (item.lang === currentLanguage) { return `${item.hits_stats.replace(/\\$\\{hits}/, resultItems.length)}` } else { return `${item.hits_stats.replace(/\\$\\{hits}/, resultItems.length)}` } }).join('') container.innerHTML = `${resultItems.map(result => result.item).join('')}` statsItem.innerHTML = `${stats}` window.pjax && window.pjax.refresh(container) } $loadingStatus.textContent = '' } let loadFlag = false const $searchMask = document.getElementById('search-mask') const $searchDialog = document.querySelector('#local-search .search-dialog') // fix safari const fixSafariHeight = () => { if (window.innerWidth < 768) { $searchDialog.style.setProperty('--search-height', window.innerHeight + 'px') } } const openSearch = () => { const bodyStyle = document.body.style bodyStyle.width = '100%' bodyStyle.overflow = 'hidden' btf.animateIn($searchMask, 'to_show 0.5s') btf.animateIn($searchDialog, 'titleScale 0.5s') setTimeout(() => { input.focus() }, 300) if (!loadFlag) { !localSearch.isfetched && localSearch.fetchData() input.addEventListener('input', inputEventFunction) loadFlag = true } // shortcut: ESC document.addEventListener('keydown', function f (event) { if (event.code === 'Escape') { closeSearch() document.removeEventListener('keydown', f) } }) fixSafariHeight() window.addEventListener('resize', fixSafariHeight) } const closeSearch = () => { const bodyStyle = document.body.style bodyStyle.width = '' bodyStyle.overflow = '' btf.animateOut($searchDialog, 'search_close .5s') btf.animateOut($searchMask, 'to_hide 0.5s') window.removeEventListener('resize', fixSafariHeight) } const searchClickFn = () => { btf.addEventListenerPjax(document.querySelector('#search-button > .search'), 'click', openSearch) } const searchFnOnce = () => { document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch) $searchMask.addEventListener('click', closeSearch) if (GLOBAL_CONFIG.localSearch.preload) { localSearch.fetchData() } localSearch.highlightSearchWords(document.getElementById('article-container')) } window.addEventListener('search:loaded', () => { const $loadDataItem = document.getElementById('loading-database') $loadDataItem.nextElementSibling.style.display = 'block' $loadDataItem.remove() }) searchClickFn() searchFnOnce() // pjax window.addEventListener('pjax:complete', () => { !btf.isHidden($searchMask) && closeSearch() localSearch.highlightSearchWords(document.getElementById('article-container')) searchClickFn() }) })","link":"/js/hexo-generator-searchdb-custom/dist/local-search.js"},{"title":"","text":"/** * Generate search database * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * Modify w/ adding `language` to search database */ 'use strict'; const { stripHTML } = require('hexo-util'); function savedb(article, config, isPost) { const data = {}; if (article.title) { data.title = article.title; } data.language = article.lang || article.language || 'default'; if (article.path) { data.url = encodeURI(config.root + article.path); } if (config.search.content !== false) { if (config.search.format === 'raw') { data.content = article._content; } else { data.content = article.content.replace(/.*?/g, ''); if (config.search.format === 'striptags') { data.content = stripHTML(data.content); } } } else { data.content = ''; } if (!isPost) { return data; } if (article.categories && article.categories.length > 0) { data.categories = article.categories.map(category => category.name); } if (article.tags && article.tags.length > 0) { data.tags = article.tags.map(tag => tag.name); } return data; } module.exports = function(locals, config) { const searchfield = config.search.field; const database = []; if (searchfield === 'all' || searchfield === 'post') { locals.posts.filter( (post) => post.categories.filter((category) => category.name === 'private').length === 0 ) .each(post => { const data = savedb(post, config, true); database.push(data); }); } if (searchfield === 'all' || searchfield === 'page') { locals.pages.each(page => { const data = savedb(page, config); database.push(data); }); } return database; };","link":"/js/hexo-generator-searchdb-custom/lib/database.js"},{"title":"","text":"/** * Generate search database in JSON format * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * No Changes */ 'use strict'; module.exports = function(locals) { const config = this.config; const database = require('./database')(locals, config); return { path: config.search.path, data: JSON.stringify(database) }; };","link":"/js/hexo-generator-searchdb-custom/lib/json_generator.js"},{"title":"","text":"/** * Generate search.xml * Refer to hexo-generator-searchdb * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js * * No Changes */ 'use strict'; const path = require('path'); const fs = require('fs'); const nunjucks = require('nunjucks'); const env = new nunjucks.Environment(); const searchTmplSrc = path.join(__dirname, '../templates/search.xml'); const searchTmpl = nunjucks.compile(fs.readFileSync(searchTmplSrc, 'utf8'), env); module.exports = function(locals) { const config = this.config; const database = require('./database')(locals, config); const xml = searchTmpl.render({ articles: database, config : config.search }); return { path: config.search.path, data: xml }; };","link":"/js/hexo-generator-searchdb-custom/lib/xml_generator.js"},{"title":"","text":"'use strict'; const micromatch = require('micromatch'); const template = require('./template'); module.exports = function(locals) { const { config } = this; const { sitemap, skip_render } = config; const { tags: tagsCfg, categories: catsCfg } = sitemap; const skipRenderList = [ '**/*.js', '**/*.css' ]; if (Array.isArray(skip_render)) { skipRenderList.push(...skip_render); } else if (typeof skip_render === 'string') { if (skip_render.length > 0) { skipRenderList.push(skip_render); } } const posts = [].concat(locals.posts.toArray(), locals.pages.toArray()) .filter(post => { return post.sitemap !== false && !isMatch(post.source, skipRenderList); }) .sort((a, b) => { return b.updated - a.updated; }); if (posts.length { return { name: tag.name, slug: tag.slug, length: tag.length, langs: tag.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang), path: tag.path, paths: tag.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang).map(lang => { return `${config.url}/${lang}/${tag.path}`; }), permalink: tag.permalink }; }); // console.log(tags); const categories = locals.categories.toArray().map(category => { return { name: category.name, slug: category.slug, length: category.length, langs: category.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang), path: category.path, paths: category.posts.map(mapDefaultLang).reduce((acc, val) => acc.concat(val), []).filter(filterLang).map(lang => { return `${config.url}/${lang}/${category.path}`; }), permalink: category.permalink }; }); // console.log(categories); const res = template(config); for (const i in res) { res[i].data = res[i].data.render({ config, posts, sNow: new Date(), tags: tagsCfg ? tags : [], categories: catsCfg ? categories : [] }); } return res; }; function isMatch(path, patterns) { return micromatch.isMatch(path, patterns); }","link":"/js/hexo-generator-sitemap-custom/lib/generator.js"},{"title":"","text":"'use strict'; const { url_for } = require('hexo-util'); function relSitemapInject(data) { const { path, rel } = this.config.sitemap; if (!rel || data.match(/rel=['|\"]?sitemap['|\"]?/i)) return; const relSitemap = ``; return data.replace(/(?!).+?/, str => str.replace('', `${relSitemap}`)); } module.exports = relSitemapInject;","link":"/js/hexo-generator-sitemap-custom/lib/rel.js"},{"title":"","text":"'use strict'; const { join, extname } = require('path'); const { readFileSync } = require('fs'); let sitemapTmpl; const { encodeURL } = require('hexo-util'); module.exports = function(config) { const path = config.sitemap.path; const nunjucks = require('nunjucks'); const env = new nunjucks.Environment(null, { autoescape: false, watch: false }); env.addFilter('uriencode', str => { return encodeURL(str); }); // Extract date from datetime env.addFilter('formatDate', input => { return input.toISOString().substring(0, 10); }); function temp(p) { let sitemapSrc; switch (extname(p)) { case '.xml': sitemapSrc = config.sitemap.template || join(__dirname, '../sitemap.xml'); break; case '.txt': sitemapSrc = config.sitemap.template_txt || join(__dirname, '../sitemap.txt'); break; } sitemapTmpl = nunjucks.compile(readFileSync(sitemapSrc, 'utf8'), env); return { path: p, data: sitemapTmpl }; } const res = []; switch (typeof path) { case 'string': res.push(temp(path)); break; case 'object': for (const p of path) { res.push(temp(p)); } break; } return res; };","link":"/js/hexo-generator-sitemap-custom/lib/template.js"}],"posts":[{"title":"Highlight.js Test Code","text":"이 게시물은 한글과 영어로 동시에 작성되어 있습니다. To see in English, please change the language via the right-bottom cog button. This post is written in both Korean and English. 한글로 보시려면 페이지 우측 하단의 톱니바퀴 버튼을 눌러 언어를 변경하세요. references[1][2] This article is for testing my blog’s customized highlight color scheme. All the example source codes are scratched from highlight.js official site. Supported languages and their abbreviations can be found from highlight.js github page. If you want to test for your own blog, use this markdown file rather than copying it manually. 이 게시물은 제 블로그의 highlight color scheme을 테스트하기 위한 목적으로 작성되었습니다. 모든 예제 코드는 highlight.js 공식 사이트에서 그대로 긁어온 자료입니다. 지원하는 프로그래밍 언어의 종류와 줄임말은 highlight.js 깃헙 페이지에서 확인할 수 있습니다. 만일 직접 테스트해보고 싶으시다면, 공홈에서 수동으로 복붙하지 마시고 이 마크다운 파일을 다운받아 사용하세요. HTML, XML 12345678910111213&lt;!DOCTYPE html&gt;&lt;title&gt;Title&lt;/title&gt;&lt;style&gt;body {width: 500px;}&lt;/style&gt;&lt;script type=&quot;application/javascript&quot;&gt; function $init() {return true;}&lt;/script&gt;&lt;body&gt; &lt;p checked class=&quot;title&quot; id='title'&gt;Title&lt;/p&gt; &lt;!-- here goes the rest of the page --&gt;&lt;/body&gt; Bash 1234567891011121314151617#!/bin/bash###### CONFIGACCEPTED_HOSTS=&quot;/root/.hag_accepted.conf&quot;BE_VERBOSE=falseif [ &quot;$UID&quot; -ne 0 ]then echo &quot;Superuser rights required&quot; exit 2figenApacheConf(){ echo -e &quot;# Host ${HOME_DIR}$1/$2 :&quot;}echo '&quot;quoted&quot;' | tr -d \\&quot; &gt; text.txt C++ 1234567891011121314#include &lt;iostream&gt;int main(int argc, char *argv[]) { /* An annoying &quot;Hello World&quot; example */ for (auto i = 0; i &lt; 0xFFFF; i++) cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; endl; char c = '\\n'; unordered_map &lt;string, vector&lt;string&gt; &gt; m; m[&quot;key&quot;] = &quot;\\\\\\\\&quot;; // this is an error return -2e3 + 12l;} C# 1234567891011121314151617using System.IO.Compression;#pragma warning disable 414, 3021namespace MyApplication{ [Obsolete(&quot;...&quot;)] class Program : IInterface { public static List&lt;int&gt; JustDoIt(int count) { Span&lt;int&gt; numbers = stackalloc int[length]; Console.WriteLine($&quot;Hello {Name}!&quot;); return new List&lt;int&gt;(new int[] { 1, 2, 3 }) } }} CSS 12345678910111213141516@font-face { font-family: Chunkfive; src: url('Chunkfive.otf');}body, .usertext { color: #F0F0F0; background: #600; font-family: Chunkfive, sans; --heading-1: 30px/32px Helvetica, sans-serif;}@import url(print.css);@media print { a[href^=http]::after { content: attr(href) }} Markdown 12345678910111213141516171819202122# hello worldyou can write text [with links](http://example.com) inline or [link references][1].* one _thing_ has *em*phasis* two __things__ are **bold**[1]: http://example.com---hello world===========&lt;this_is inline=&quot;xml&quot;&gt;&lt;/this_is&gt;&gt; markdown is so cool so are code segments1. one thing (yeah!)2. two thing `i can write code`, and `more` wipee! Diff 123456789101112131415161718192021222324252627282930Index: languages/ini.js===================================================================--- languages/ini.js (revision 199)+++ languages/ini.js (revision 200)@@ -1,8 +1,7 @@ hljs.LANGUAGES.ini = { case_insensitive: true,- defaultMode:- {+ defaultMode: { contains: ['comment', 'title', 'setting'], illegal: '[^\\\\s]' },*** /path/to/original timestamp--- /path/to/new timestamp****************** 1,3 ****--- 1,9 ----+ This is an important+ notice! It should+ therefore be located at+ the beginning of this+ document!! compress the size of the! changes. It is important to spell Ruby 12345678910111213# The Greeter classclass Greeter def initialize(name) @name = name.capitalize end def salute puts &quot;Hello #{@name}!&quot; endendg = Greeter.new(&quot;world&quot;)g.salute Go 123456789101112package mainimport &quot;fmt&quot;func main() { ch := make(chan float64) ch &lt;- 1.0e10 // magic number x, ok := &lt;- ch defer fmt.Println(`exitting now\\`) go println(len(&quot;hello world!&quot;)) return} TOML, INI 123456789101112; boilerplate[package]name = &quot;some_name&quot;authors = [&quot;Author&quot;]description = &quot;This is \\a description&quot;[[lib]]name = ${NAME}default = Trueauto = nocounter = 1_000 Java 12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract strictfp class L2Char extends L2Object { public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) { _ai = null; log(&quot;Should not be called&quot;); if (1 &gt; 5) { // wtf!? return; } }} JavaScript 123456789101112131415161718192021function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=&quot;${cls}&quot;`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i &lt; classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log('undefined'); } return ( &lt;div&gt; &lt;web-component&gt;{block}&lt;/web-component&gt; &lt;/div&gt; )}export $initHighlight; JSON 123456789101112[ { &quot;title&quot;: &quot;apples&quot;, &quot;count&quot;: [12000, 20000], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }, { &quot;title&quot;: &quot;oranges&quot;, &quot;count&quot;: [17500, null], &quot;description&quot;: {&quot;text&quot;: &quot;...&quot;, &quot;sensitive&quot;: false} }] Kotlin 1234567891011121314151617181920212223242526272829import kotlinx.serialization.Serializableimport kotlin.random.Randominterface Building@Serializableclass House( private val rooms: Int? = 3, val name: String = &quot;Palace&quot;) : Building { var residents: Int = 4 get() { println(&quot;Current residents: $field&quot;) return field } fun burn(evacuation: (people: Int) -&gt; Boolean) { rooms ?: return if (evacuation((0..residents).random())) residents = 0 }}fun main() { val house = House(name = &quot;Skyscraper 1&quot;) house.burn { Random.nextBoolean() }} Less 123456789101112131415161718192021222324252627@import &quot;fruits&quot;;@rhythm: 1.5em;@media screen and (min-resolution: 2dppx) { body {font-size: 125%}}section &gt; .foo + #bar:hover [href*=&quot;less&quot;] { margin: @rhythm 0 0 @rhythm; padding: calc(5% + 20px); background: #f00ba7 url(http://placehold.alpha-centauri/42.png) no-repeat; background-image: linear-gradient(-135deg, wheat, fuchsia) !important ; background-blend-mode: multiply;}@font-face { font-family: /* ? */ 'Omega'; src: url('../fonts/omega-webfont.woff?v=2.0.2');}.icon-baz::before { display: inline-block; font-family: &quot;Omega&quot;, Alpha, sans-serif; content: &quot;\\f085&quot;; color: rgba(98, 76 /* or 54 */, 231, .75);} Lua 1234567891011121314151617181920212223242526272829303132--[[Simple signal/slot implementation]]local signal_mt = { __index = { register = table.insert }}function signal_mt.__index:emit(... --[[ Comment in params ]]) for _, slot in ipairs(self) do slot(self, ...) endendlocal function create_signal() return setmetatable({}, signal_mt)end-- Signal testlocal signal = create_signal()signal:register(function(signal, ...) print(...)end)signal:emit('Answer to Life, the Universe, and Everything:', 42)--[==[ [=[ [[Nested ]]multi-line ]=]comment ]==][==[ Nested[=[ multi-line[[ string]] ]=] ]==] Makefile 12345678910111213# MakefileBUILDDIR = _buildEXTRAS ?= $(BUILDDIR)/extras.PHONY: main cleanmain: @echo &quot;Building main facility...&quot; build_main $(BUILDDIR)clean: rm -rf $(BUILDDIR)/* Perl 1234567891011121314151617181920212223242526272829303132333435363738394041# loads objectsub load{ my $flds = $c-&gt;db_load($id,@_) || do { Carp::carp &quot;Can`t load (class: $c, id: $id): '$!'&quot;; return undef }; my $o = $c-&gt;_perl_new(); $id12 = $id / 24 / 3600; $o-&gt;{'ID'} = $id12 + 123; #$o-&gt;{'SHCUT'} = $flds-&gt;{'SHCUT'}; my $p = $o-&gt;props; my $vt; $string =~ m/^sought_text$/; $items = split //, 'abc'; $string //= &quot;bar&quot;; for my $key (keys %$p) { if(${$vt.'::property'}) { $o-&gt;{$key . '_real'} = $flds-&gt;{$key}; tie $o-&gt;{$key}, 'CMSBuilder::Property', $o, $key; } } $o-&gt;save if delete $o-&gt;{'_save_after_load'}; # GH-117 my $g = glob(&quot;/usr/bin/*&quot;); return $o;}__DATA__@@ layouts/default.html.ep&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt;&lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;&lt;/head&gt; &lt;body&gt;&lt;%= content %&gt;&lt;/body&gt;&lt;/html&gt;__END__=head1 NAMEPOD till the end of file Objective-C 12345678910111213#import &lt;UIKit/UIKit.h&gt;#import &quot;Dependency.h&quot;@protocol WorldDataSource@optional- (NSString*)worldName;@required- (BOOL)allowsToLive;@end@property (nonatomic, readonly) NSString *title;- (IBAction) show;@end PHP 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172require_once 'Zend/Uri/Http.php';namespace Location\\Web;interface Factory{ static function _factory();}abstract class URI extends BaseURI implements Factory{ abstract function test(); public static $st1 = 1; const ME = &quot;Yo&quot;; var $list = NULL; private $var; /** * Returns a URI * * @return URI */ static public function _factory($stats = array(), $uri = 'http') { echo __METHOD__; $uri = explode(':', $uri, 0b10); $schemeSpecific = isset($uri[1]) ? $uri[1] : ''; $desc = 'Multiline description'; // Security check if (!ctype_alnum($scheme)) { throw new Zend_Uri_Exception('Illegal scheme'); } $this-&gt;var = 0 - self::$st; $this-&gt;list = list(Array(&quot;1&quot;=&gt; 2, 2=&gt;self::ME, 3 =&gt; \\Location\\Web\\URI::class)); return [ 'uri' =&gt; $uri, 'value' =&gt; null, ]; }}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};enum Foo: string { case Test = 'test';}match ($key) { 1 =&gt; 'Integer 1', '1' =&gt; 'String 1', true =&gt; 'Bool true', [] =&gt; 'Empty array', [1] =&gt; 'Array [1]',};echo URI::ME . URI::$st1;__halt_compiler () ; dataheredataheredatahere */datahere Python 123456789101112@requires_authorization(roles=[&quot;ADMIN&quot;])def somefunc(param1='', param2=0): r'''A docstring''' if param1 &gt; param2: # interesting print 'Gre\\'ater' return (param2 - param1 + 1 + 0b10l) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' R 12345678910111213141516171819202122232425262728293031323334353637383940414243444546require(stats)#' Compute different averages#'#' @param x \\code{numeric} vector of sample data#' @param type \\code{character} vector of length 1 specifying the average type#' @return \\code{centre} returns the sample average according to the chosen method.#' @examples#' centre(rcauchy(10), &quot;mean&quot;)#' @exportcentre &lt;- function(x, type) { switch(type, mean = mean(x), median = median(x), trimmed = mean(x, trim = .1))}x &lt;- rcauchy(10)centre(x, &quot;mean&quot;)library(ggplot2)models &lt;- tibble::tribble( ~model_name, ~ formula, &quot;length-width&quot;, Sepal.Length ~ Petal.Width + Petal.Length, &quot;interaction&quot;, Sepal.Length ~ Petal.Width * Petal.Length)iris %&gt;% nest_by(Species) %&gt;% left_join(models, by = character()) %&gt;% rowwise(Species, model_name) %&gt;% mutate(model = list(lm(formula, data = data))) %&gt;% summarise(broom::glance(model))#&gt; `summarise()` regrouping output by 'Species', 'model_name' (override with `.groups` argument)#&gt; # A tibble: 6 x 13#&gt; # Groups: Species, model_name [6]#&gt; Species model_name r.squared adj.r.squared sigma statistic p.value df#&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;#&gt; 1 setosa length-wi… 0.112 0.0739 0.339 2.96 6.18e- 2 3#&gt; 2 setosa interacti… 0.133 0.0760 0.339 2.34 8.54e- 2 4#&gt; 3 versic… length-wi… 0.574 0.556 0.344 31.7 1.92e- 9 3#&gt; 4 versic… interacti… 0.577 0.549 0.347 20.9 1.11e- 8 4#&gt; 5 virgin… length-wi… 0.747 0.736 0.327 69.3 9.50e-15 3#&gt; 6 virgin… interacti… 0.757 0.741 0.323 47.8 3.54e-14 4#&gt; # … with 5 more variables: logLik &lt;dbl&gt;, AIC &lt;dbl&gt;, BIC &lt;dbl&gt;, deviance &lt;dbl&gt;,#&gt; # df.residual &lt;int&gt; Rust 12345678910111213141516#[derive(Debug)]pub enum State { Start, Transient, Closed,}impl From&lt;&amp;'a str&gt; for State { fn from(s: &amp;'a str) -&gt; Self { match s { &quot;start&quot; =&gt; State::Start, &quot;closed&quot; =&gt; State::Closed, _ =&gt; unreachable!(), } }} SCSS 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273@import &quot;compass/reset&quot;;// variables$colorGreen: #008000;$colorGreenDark: darken($colorGreen, 10);@mixin container { max-width: 980px;}// mixins with parameters@mixin button($color:green) { @if ($color == green) { background-color: #008000; } @else if ($color == red) { background-color: #B22222; }}button { @include button(red);}div,.navbar,#header,input[type=&quot;input&quot;] { font-family: &quot;Helvetica Neue&quot;, Arial, sans-serif; width: auto; margin: 0 auto; display: block;}.row-12 &gt; [class*=&quot;spans&quot;] { border-left: 1px solid #B5C583;}// nested definitionsul { width: 100%; padding: { left: 5px; right: 5px; } li { float: left; margin-right: 10px; .home { background: url('http://placehold.it/20') scroll no-repeat 0 0; } }}.banner { @extend .container;}a { color: $colorGreen; &amp;:hover { color: $colorGreenDark; } &amp;:visited { color: #c458cb; }}@for $i from 1 through 5 { .span#{$i} { width: 20px*$i; }}@mixin mobile { @media screen and (max-width : 600px) { @content; }} Shell Session 1234567891011$ echo $EDITORvim$ git checkout mainSwitched to branch 'main'Your branch is up-to-date with 'origin/main'.$ git pushEverything up-to-date$ echo 'All&gt; done!'Alldone! SQL 123456789101112CREATE TABLE &quot;topic&quot; ( &quot;id&quot; integer NOT NULL PRIMARY KEY, &quot;forum_id&quot; integer NOT NULL, &quot;subject&quot; varchar(255) NOT NULL);ALTER TABLE &quot;topic&quot;ADD CONSTRAINT forum_id FOREIGN KEY (&quot;forum_id&quot;)REFERENCES &quot;forum&quot; (&quot;id&quot;);-- Initialsinsert into &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)values (2, 'D''artagnian'); Swift 123456789101112131415import Foundation@objc class Person: Entity { var name: String! var age: Int! init(name: String, age: Int) { /* /* ... */ */ } // Return a descriptive string for this person func description(offset: Int = 0) -&gt; String { return &quot;\\(name) is \\(age + offset) years old&quot; }} YAML 123456789101112131415161718192021222324252627282930313233343536373839---# commentstring_1: &quot;Bar&quot;string_2: 'bar'string_3: barinline_keys_ignored: sompath/name/file.jpgkeywords_in_yaml: - true - false - TRUE - FALSE - 21 - 21.0 - !!str 123&quot;quoted_key&quot;: &amp;foobar bar: foo foo: &quot;foo&quot;: barreference: *foobarmultiline_1: | Multiline Stringmultiline_2: &gt; Multiline Stringmultiline_3: &quot; Multiline string &quot;ansible_variables: &quot;foo {{variable}}&quot;array_nested:- a- b: 1 c: 2- b- comment TypeScript 1234567891011121314class MyClass { public static myValue: string; constructor(init: string) { this.myValue = init; }}import fs = require(&quot;fs&quot;);module MyModule { export interface MyInterface extends Other { myProperty: any; }}declare magicNumber number;myArray.forEach(() =&gt; { }); // fat arrow syntax Visual Basic .NET 123456789101112131415161718192021222324252627282930313233343536373839404142Imports SystemImports System.IO#Const DEBUG = TrueNamespace Highlighter.Test ''' &lt;summary&gt;This is an example class.&lt;/summary&gt; Public Class Program Protected Shared hello As Integer = 3 Private Const ABC As Boolean = False#Region &quot;Code&quot; ' Cheers! &lt;STAThread()&gt; _ Public Shared Sub Main(ByVal args() As String, ParamArray arr As Object) Handles Form1.Click On Error Resume Next If ABC Then While ABC : Console.WriteLine() : End While For i As Long = 0 To 1000 Step 123 Try System.Windows.Forms.MessageBox.Show(CInt(&quot;1&quot;).ToString()) Catch ex As Exception ' What are you doing? Well... Dim exp = CType(ex, IOException) REM ORZ Return End Try Next Else Dim l As New System.Collections.List&lt;String&gt;() SyncLock l If TypeOf l Is Decimal And l IsNot Nothing Then RemoveHandler button1.Paint, delegate End If Dim d = New System.Threading.Thread(AddressOf ThreadProc) Dim a = New Action(Sub(x, y) x + y) Static u = From x As String In l Select x.Substring(2, 4) Where x.Length &gt; 0 End SyncLock Do : Laugh() : Loop Until hello = 4 End If End Sub#End Region End ClassEnd Namespace Highlight.js official site (link) ↩︎ Highlight.js supported languages (link) ↩︎","link":"/posts/en-ko/highlight-test-code/"},{"title":"2025-10-01 일기 (랩미팅)","text":" 📔🔒🔎🙅🤫🫶🏻","link":"/posts/ko/20251001/"},{"title":"2025-10-02 일기 (SFY 업로드 마지막 날)","text":"fb5c2b4f8fd7cf007b7c449051638b2652705af9514971afef7e274e8698e3ee173dc84e2a2cd1a9406817eab0aa173cda073a0029c89fd763a67e828ccb45a09188c721ad9c091ab6662eddf379ab2c28ed381b2c29b501aee54390aaf4412915b868f1b4afc183cbddfb8559b7cffba4aaf92370086d98a10143be6be83d523e2bac151c2e222a805b9546fcbc40c83d85bd82c0b0f58ce81f32720cdd80061b08ef4dcaa3a00d18723f836eb486794398917271d6e8a82b8dde93a0c481e16fe157163a5704ed29c115540cf2af47184e89069e1887c1a68b0eabd44c7ac2733277d19fa2c2ccc3dd55ea85d8ddc82c0403fe524f8566da49e693e639c286cc4462274d34ba111713c0e4b719e4a13ff1dfacf9f837f39b921122ec16c9c996455eeb721d561acd8875442d3285b049e29abeb59b53b5a0933effe62d5822cabbadb8c563dabebdd83b6557d7da3747976f07e72448c4396cf75dff13919476e9495d47423235686a8671fe99abce4ea49625593f65c8bb2cab55907b5f7db50ef53d29232826e7e1491c9381928668025e79a251958351701a7c801c0e9b5cb78c25eb9d549c4703a1372b3b3d33c7afc24099568911f20f9d9dba3ce2357e361df8a73f13ef762fb87ab750e7c6ad0132e71eb71b716f21e0e7993cb8acd3c1fac327c7494e3a63190ec0937af304057b8449e6947951d7ad7bc5dfe9d5e33070e8ad01800dc8989e9a2539c48b22d0b3cf182aa1a68cedf885364b4886a449f2d8883f11b788330a44b73fe12bd7c2547000744d804eed79ffcc48eaf99226db07acbc5cda978431bb6263b23c3743490cbeeecc7ff51e20a2abe77bf6bdd7ab15afa60bb90e2ebc74bd68dde65a0e176d2aef39170d4a49321acd51449c14861aef9aec68b3703f206376be0682e983a1f46e23921573b884244ab4115fa0a954d1578eac54c8c2974ecc14a5781d974573dfbf8458efe4bf9e73d5c69ee782cef4be1c24115c80fffb743c4690d35bf0e2067644226002e33188b26bb68ef867be1bfb3f2a5f11c8e24ac000a522aab315f5d19733f6685e2a494f59a13b230664c91eab82df87416e08ad683c91e806301f1ff23196b98ce6d0271629e820e4d685bf1352cc38afee12807ec673450b9a4cad8032827abc6f1a8240e74967990616e12154bc9e28862313323280f22b779f1035c3a7d24d82419ca0e6d25e135dfc879c13cd5399f0009e1dab38e506c67b542b9b4cf349f118a878d6c86653f9866d7fbc0c19401407c3270c55f55039764b070b41ce9788bf6d1f1189a3dbb7ea8e28bbbf3da2b825309ce3c5136bc794ec946f409369e89e13acc6f4c352e8add5590b570795ce8066860c4a2b20bdaca23c2d91b74fa4e7a9dc2ab8b02a6e238aeb38713f19d9e499037de508bed0a32fcd1c1a0980fc22d1104e4bcc1bd5b96fd34ad73088e94ed9083734a8501977eb1430febd22ba94eb483cfd298313c83247cdcaeb9015ac285d51df31989a30b1d3b8284c735ef1c971659e7d5d7c5d66fd724e9588774f94a4ea21a168994697da9e302ebbfb940ef1c5e2a050efb4b75c6d551b8a1de40640f4869e2b6b6544e78d1a9c73b9a608b0f07ac4f6cc9ca8747b037d23baf430104e395d40b534b4632a8e7ebb69fc5a035707c0fdcd01d4b361eb6250bff21b2ea001bc3f28cd8db27889c49e72bff876ef51699b9a5bf8b2e6779f9266d122db72f4cf4f5d77902ce650eb741c43a96f4a4da0d9250939c0bb9a3f60b5993767c24b46d48df2da9f5a19c1428f63f8948ba22e0ec5417edee0abdf922417cd62efe35520cda40a408f79caa98945620dbaca742311269f1896c9b190dfc5a01b4ede59a0051f0af78456617195b67298b149528e0445b6e8de0b9c4eb8c543bd0b5c9fa2fa5247f1030ced7a63452fabdc0209f2b9d63d6cfbdb5b7bae1a5188e3f4fa964ad4771ae6beb636fa38780a97cbc53a2d23c4fb79dc6995a438ddc5d30470931aaa3fa1ce94fb3a65c6926d78d3d2c11a0a93219e6a8cd6a5c4274ecd507c24f356ac94e57218c6291d5797d41d375f60b261af323d3ec85aaa900b348c1c63082914983755d20c02a119f5ad132f77194c39c09578f7ab61f9ddf9e9e0f896097854492d8876e4b27885464e467a05f630adf471ead7f8be995c25480bb7ec29382ac9fa3c380cb0f9b98e45bb6cd0db4703c4bc32ded3e80fd726fcc4ffe6880fac8dde4d4f2d13cda459f9324b4f11700375b547950716e2b321ee169b655a6819344519565654341da0f7d88f6f78d07259dc131f084633bc3bb9e95f4445ff9d44b0cf2b80c4e44ee381eeccf34474ea189fe3600f39aaf6daf2f8114fe8e7b38f74951c1e1aa907081b13ca030e7237d7fc8d531d575166bddc0a4cdf3a475ed3e060fdeafc08f8323ed66abb7d7e22e0510c5f208b691d08b680a829828f4544d6ad84ad45c644fdbb5217afea53acaf03273b1e3b21ffd22df6c0e3abe8179900ab740901189eb6ab3945ae1d08daa3708ee7fb12c6394b6b9c8982d9207860b81a3db775c9b6c872503f2b843c9e4a2f8012d9627013b9aad2ce8fe27730d09008ac8a86e59a873ec5eeda9af473d72c24a7cb907727800da7b1ac5d1936e6674d4f3600cff7e5c885b3f40d9a603d0af83e26286cd5d3c475bf383e5ca116875e24d8a57e91833d2022f2215471935b4e66cde2eccfe581dd989900f2a9c64ff1909f732973203cb8b8679460bd0e208d5f070b4a8dfaf4e0fd802ee1526e7c0f943dce3d4d33f53a30d053de49cfe82bfd369f4f1275d404c9d61f9529e82d39bdc84c6588f666edd723594175a7c655a7202c41d5e277b025d07efa17ea1e213444a19d1b15d9063616b32dbc7885d4dd98815b95bca32bc4fba9ae907ce5ea8a2bc4b80602d965cdf7e41d82a6c528efb02378595ee9fad0015d5a10e531daee454f2cf21e48a3f9fa93f09656a58870af17a33e2f9af226b04f8491d00fe0956ee8bab958243bc769c26a57f62f50abf29d2cde9a98cd8b5ce38bfaccee5fb5506162312e7374ec759859e0351c3bc3762240b9a48906a05029902b57a57b2c78f1a61db7c6a21fd8af3d5d3ea8875f2dbb702676504d1372785a864a4b00e6e210ed5557932dd5877e47173ff62b8eb43fd894130c61d82f1090d4b511b9481435633534b332ccd69d1552d26fb7b3d22a62e1d9e6b31efd1d716ca0cf79f58f7aa9957ba93907bf8c390d6a7963f989beae281e7294b9d54532fced0c87258e4a9cdae276b6d6dc4680898d320bef7a9ddb5a7e0ab51e7613c46bc4150058964e41767cbfe7a5b013ad5e701f7ea15afb940543f077b538d8de129d4ac0b1069521665eb9b521b4330a27dc9087fc4455076ceb79be52fe66d18ed4e4a7f39238a68fe45bfc37384cbaa57cd9fb983c7bed7320db15c9a6644a86ce413dcc1e3636a86b86ed623339be1942d4fe602d907c2824062c1211ab8c32eac1d2d14c9c7c9bfbdbfefa5d7e459195f62b377b339c44c7078b08e28aa408a1574013b4f022b9bb714633103c40bbced88aef6405b8714096a26e826b85bceba61c4dff29660d6cf016c0d61f3468162a06b479dde2262e149ea1e8f7283153f93afa08497c652a757f090a1d8c5de3f90ecee623f6ec50c239c959bb3d63f78db5d03bf70dd3ecf5305597f22cc9cc8849438861194a860a4c05efa36bd8a2651e0de02d5294be15ee58930467035f6bd73a86af6ff53bc851a299cfa7fff0bb34f9dafb98f032965a90a394f272049fc58be714ac9d9b3d3c32273e22d84fe01ffe59629314ac07b5e0d2f24ac002bec0292dcaec057af5bd7aea3beb1159de647aa9aa3c68b2442c4a8abfdba22579bce2fba4cc90d2393efbcd82207091a18e006b567ef74444125f033184a6e434671152ce09380ef24025b3799b34cc8901cbe3c1d2afc008ea255c22cc41771ad31fdaa157f4b2b159738f75db622ec8e24984fedbfaa2114767b53daf8304875476cc9a60acfee345f0776d10858ce31d09681ceaaa226f721fbf419c7a99c5f51be51a3772fd3dafd7fda432dbc69368232423bbf3f1349b476be3b4d879287389c13336b2b89e297603d4bf64b42c061c2e49067c220a97b50d1d5c8cfa50cf885cf88cebffdf1f8c3d9e5027159956fd2dad988935a3581bd7cc25d8bf1538bd2d2854b9798ccc5631c4db8c5952c6ec6abe1d8e7f332f92c7ecad98c6b973c1bf18d727560fed66b058a7d43ea0fc41ec0861b48f44a259d78aa588b6b249faf4866066fd3c0960052c3841bf06aeb1ff04fe57a8871134b7b1b40c906bc219d2fb24fa8721300a44be435389f3f0c17aa86e0ffed19afda33b6f96249aa67b4b1b2ccb80ff446ff4e81be05729088bdafef7387e078e0e95e9f4986125ed8c23359c4426d68d4ad92258de93540cffe38396a17b0c31eb15104fbc5ce065b70233f78a54fb4b16a2ff8ebed0c10d322f6b21865a12899149eaff3aeb51c55138457936d18cdb5fee248291cf376cb9b3f6a6775f61f48e4e2812356577d87a9c96a331f7788a822ea6ceb1e5ce81c9c6f8b0ab300e6ec63dc2b3457a3f5c34babd017b05bf93eb715f793bd2aeeb69d0b295860638f39d8bdcb53b7d6a3a5927e0010746539b54077dcfd2557ddf852c5615a8d84724f02fb3fb013fad1c6228bfb537182f9f3786ecf884de860debfb7ce8eebeb81e1d6bb5c5da07cc68cb57c525f01e384deab522b9f15c0c427a4fbaf800e743bd2863290af02704d9e6936f1cdb75f1af72763463f39cc75f24bd1e6520cf7514bef45346a82c0bd2e20d15fee4f0f944d7e90c5d8b682142da18c8131945d727f300b69d658d9aab2f1c6d25b367 📔🔒🔎🙅🤫🫶🏻","link":"/posts/ko/20251002/"},{"title":"2025-10-04 일기 (차례상 준비 1)","text":"e78b0753db509b7930f3845cde41dd733e76f6088a0b27a4eed038de5493dc33b15288b456ce116945c134bed03e7c736f466a1204e89732d1b49dba141732f9a2e26b31fc946c4d3063d5dc5842408e0b0d568d043ca9a465b5b423d71dbd70538825e7e6a67b5785828367bd56572717703f42f6c77e4064aec254e87d04582a18e0debfa311a19348f047b535a369a22b70300cf6fe9582143eb4884140fdadc0fdda77abf3ce977458f2623bb58b69b9854d4bf2837a2d1c59d042c746d869cf123b6a2db06d410661783b2cc98c785d46b0a224897157ee964a5bf9abfddab2f3d3522ec35d51ac8e67e7c6a1cf243ad307c1255a638d9623474fbcec57ecedbd4936e1903c3ef9d9ab48ad59f371a33e24872c9248f04e92d67f083b945f6af22809d94b312706678a45ee54a5ebea5594d26a4e72372290596bce757b5a2b10463e6a3ed24e8273da31b3674170e7d9591229bdfa952102e7556ab3e2ed302524368d3abee38048399ce3fa16c7bab593ade2ea8909e996ee3272aaa8d7be3a6fb0b759e790cefeae8c209622c37b76336f4582ea8da317787682b18770b2c3190a53669a5da0e18a74d045e5c22b6bb22c080fc01e5d7f951531c2fa495e8087e9989e78b8983de419bf309479e131236eba3427f052116257ded7cd53cf9a762aeba25e5bcbcd609f2d3341ff6b53d8124856276c044333c80a41a9d766673971e77036d0f4e52fdb83131138235ad4ed814bf069aee3a3c701af3527e900c9a92e33f208899c9af2fe5193104b63dafacbe9e8b1131118e8d825ae826d1a788b816a8c055c33079350d5ac79c50d92bdd3ebfe7db2183912648e8587009c8e817566e387c1fc3f8900fc29b7cbb92bbee94dd0c6dcfa2d0263b5c075dadc309f1262fef7b2691074c4a58a81e7e0a26776187c7cbb4c5d4af0369a6655ea8f683c3e992845a7127b7d8463041bbba8bb608291ee9cafff29c4045505e12de4c6ea754e541bdbe504eb463b5e33de13f78474e584ae3b5f80b35a556574795d35710069576410d873e67a214690234b39d38313cf1d934511dd80cc48dc8a3e07ebc1843a427f4157f0b61ab9b2900e74b03af1256e54a2d131bcf143b3e3e530d99baaa4cc7b62342fc4d066b370978c1520a390cb7098544c27292b0da37119a6637f41911a37597da1bea262192a61efbbf9cab242ee0df45eed5334728981f3d2d98e052b73b8e0afc9dc60e77241f98f0e08d1f077637346481e2a314af3b6c274dadfa73f64e3333302f17b9a472a5a34539cd393d4753239b69402b313507657154193d9fbefa5b78898b8a0ba02e1baf17fc64cecf9777774f966d9b3d58936c5d25c75c8892eca01e050f9097451e389b7cd67ac0bd2ebcfc7191fc2a62f721f9016b65450cd844695843b81546fdb90dcd44e9f792b6230e1b6500326d6b8c9cb109b60f46578dbc60583f66818d527406cb66b57bc78cbbd86d11c556e693ae835676324a7f5bfe5f58e3815a61980fbb392c5608ca92851a55a55dec2fd063f86ef99dc03545b7352e839f992fe21844fefc7acbf64c735361b53b2ce6c15322fd66d211b73b6f3ec2117cee5649f126bbc0b330f2beb673b26e509b573d2dd33b52782e00956811e8d0e629e1089e457e423f876a04803098c493d38d0b568e67b8848def25e7000de586b6759c67cff469d5013a3b120708ee005b1e30dfcc0d0f20b14cef14c94fb3a6184e6253298340d71e76ffb2c47b7af1b09236f949aa2ba54b52caabef1c48279810ce004da3bf00950ba6bb0383bc00dabb009d141862ee8754f075d1ae9b3124a362b9f7d1cd741eb9451a390634b493a25da0156fb6983226cd46ca6cc3f320701f360d2a449c150fc6aecbb2d990c94a49812ae632b4a0f1bbd3ec52af5c74deda758d92169363b2e6268ea59cfea50c270eb3357ca91aa33229fe98f86b349c02deb376fd59b166c79bebe45c1886cc86a7210002c3c0d3e92de96a74c4b7ff6c5a58883ff7399b70ace0c83e312420e3d357f4cb731490e9d068641a47b3444627ed5c334872045380e751ecf8bdbb25da1ad306e61cbb8491e01495381683964fdf5cdbea3529e070f0510e50f9fa57d8c7d10f0ec7bcfc058350646f6339b9c591c7d5e6f4962 📔🔒🔎🙅🤫🫶🏻","link":"/posts/ko/20251004/"},{"title":"2025-10-10 일기 (뽀모도로 타이머)","text":"4022de3905f39ce7a4e5bbd76fcfe0ac413ffd198daa4126e590b6981c9702a32e34b43d9663d27b869e6ca484c512dc09ebca73931a22f1fcd2911b324b6de34a51f3c2d21105c92eedda1c74e4c06386b770896d86400869b3ac240e2a1bca14e1b5643379ee9aa5afc7dc21f5ba345745d8681cf463aa71044625aac540397f242b9fb9ca9a35e61e55a2b46024345f748ed8dd2e2408580ae845e293da5ae8d3bff6708b5280f4043b88eebfa69610ee3d9cce49b1b631a91687752a0d76a98f63f199813a033f584fb204ba18081e940e3231deeea484a2c4e1f72e5c295bd91a20ee7db4fab6c6488cec5bd02e8facaf30cd43bbae2d1cf36622e56953916d0e7ec503ddba13457a64241b0994578f44053541ad5f68cf9fbba93912f432582c2c28afa13bfdae60fdc49f73aa5a4cbbf0e77f4b2ac11ba900f9c9f8f102364d6512a8f905d2ff823548b020a3b7718e2872f7bf6f226aa873cd0ca549b77e070f0d3effb72a5013f9de8ffbd276dae29b8b1e87409a327de4d3048753c1a0df6436a4ad4e721abe9d22cbfc1e825a9ee01dbc105893db1a9632550646c539e13c94ef3dac56e820fd0e885269b2348a6adfc91bbf4ead45b4ef4e8da55708a3cd4b0220aebaee30b72cbd61eabb1eeedd960178c81c87f74d7d0b1d93490e495fd9f73e25b6ab8281a01742b1d8403694e403c70d187b0a5bd801fd207333569016764d5a67f84f8ac9dc1392f3b9a5ae3e051776b46ac0bee4282dfd6511e8f518dd406df7932d2e148e5b02b039414f606c2647107fccef3bd1d0e79ed600a6c41e4d5c0cd442b87f02a4619be3ff6e43df1fd8ea1b8c4e703aba60ca5ab95a708044f29f3a74b4f0b2317ade2e6817eac4565d54dfe81f6c0823f859236300c5d4ee3f1f522456a69b116725952eb385f2a63b683c6fa3d12063a1dfeefb80860cba2ee2dd7f30833826c59e63a1032813c7a56200d7bdc7d70d97fdba123c6a014f76bacee19aa767641c1e5b231a98f47f5ef8691b93396590e5084a1fed0a8bbdeb4d9449c3954f088b69d28a10acb4438df658dfa213492fae113d5eda88cf8d3c10e60719ae4c4f5e5f1319f8662630e34aca91fc79f851f0c103e7132b0ad9f41dd0dd2e23709ce996727ee1f1d774d5f83aa628d90e27b5c3aefb82e15782bb47125ab3283e4c1e698a5d482a1387ffa44110889ab1ca4904432d03f573b7ebf36419e41f8219eaceb072651c3d95d97fa45318bb829579d7d89b70c641a05b8d6949da1cb9d2978befb5376ffd57ebf4a80245a6f040f55a8e5fcac10eb3d50c0121eb2ab614d0cd3e502648c00cb31d34fe92a04b15e4abefabeac2138d4ec1d9642aa447adca847ccd381a7cdcf69b30de12665550c9e8ec0ec4cbfb0ba9957b1b132784205e0db08eb799461a87de46ece50c02d606872e44a6b8e13ceecc53ada171053b7f2e63db6a3e000a187c4f0b42a5d0956318e7aa4f00f7677407ad2d9a387de991edce00fb9d8c7286b5923d3e72fa82b9a8ffa19cca5759dbec0ae9fdad9ed0331dc3b5d1dc84947ae11f712f4ddd06ef853985d66449e1f8b20252eb8eb6df5b7ab2dc39c540c540886977ca6dc735bb0b68c12971246054a2cb67c070eb22cf56576ff0a415052d4f59805e61f8cf144ddca36bcc8522c3c487a47da29f930c8017806121bf6d040d98cc135b664f5a8122e40991dc853bf403b2c091fde783e78ad76d2b23d9ab9d87516f122459a0477c0988a0f370766b5fedce6bc5087d1047a63ecf210975c9516327d6aa44f608a8a87cffe4dc8d04cde2f670fb2b0ecb2f9742e198a6e71c8ac69055e60bebb7d14703b1f2b6319d48306558604d68ecd7698678aab4cdf73c8e9db1a1f3f3dd006dabd81c35337abb6698984dda1e00e26fdcb2b174b758d61f79a029bd9a49e9d9481968100f4bdbee551089f5c281027573643fe21fc90b9984c83cdd8f1718811c34960153b129c1fd9488a0562c15c53398a83bb58ccc1d42031ecad15ffffc54155b366691236279c4777abaa7bdfcb23e9a6cf0a8b9185bd74f070e1f22d352dd327de60c15dd0353e0b4e6e40b4613f6182bb0f8caeb88bc21d2024cc91aa6453be09d3a066956465fc5c929c4e158d49028b8372281f0751b47d0f6a94e16026c665bb3596f1e25c0992d554077d873df5c6a62dfac4f6a8e592e5f4815463babad2ab63fc81ac8cf253a479cff5b9c87761ad8bcb29579120a4dfb941f287dde8a8e5977d89263c2c2d96a01c698465750c40eb608ba6082a2b7a530cdc9adab028992309e8416dc376c80cb68c8b5a7c7c2f0bd96b9011c4cdb09a264bdee157054a48761591ed4f589e774822e02ea646732c3eb6ddc5de384aab554ace05733170ff5d38385907990acc851e3d57b9a71e06ce63c5fa111533943340a494ca37ceb5f22b80ff4cba6 📔🔒🔎🙅🤫🫶🏻","link":"/posts/ko/20251010/"},{"title":"Hexo에서 `punycode` DeprecationWarning 해결하기","text":"Introduction 언젠가부터 Hexo 블로그를 서빙 또는 배포할 때마다 아래와 같은 DeprecationWarning이 뜨기 시작했다. (node:39714) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead. 찾아보니 Node 버전이 21로 올라가면 발생하는 문제로 보였는데, 버전을 낮추는 방식은 마음에 들지 않아 어케저케 비벼서 해결해보았다. Conclusion 결론부터 말하자면, Hexo에 적용한 추가적인 플러그인 중 일부에서 발생하는 패키지 없뎃 이슈였다. [상황1] 수동으로 만든 패키지의 devDependency가 오래되어 이슈 발생 [해결방법1-1] 해당 패키지의 package.json에서 의존성 정보를 직접 업데이트 [해결방법1-2] 만일 devDependency가 불필요하다면 일괄 삭제 예시) 커스텀한 hexo-generator-searchdb 플러그인 [상황]이 블로그에서는 다언어(한/영) 환경에 맞게 코드를 많이 수정했는데, 그 중 하나가 search.xml 생성 시에 해당 포스팅의 언어를 함께 저장하여 검색에 활용하는 것이었음 현재 사이트가 한글이라면, 한글로 작성된 포스팅이 최우선으로 검색되게 함이를 위해 source/js/ 하단에 hexo-generator-searchdb 소스 코드를 복제해서 hexo-generator-searchdb-custom이라는 이름의 로컬 패키지를 만들어 아래와 같이 사용했음123&quot;dependencies&quot;: { &quot;hexo-generator-searchdb&quot;: &quot;file:source/js/hexo-generator-searchdb-custom&quot;}[문제]문제는, 이 상태에서 npm install을 실행하면 해당 로컬 패키지의 devDependency도 함께 설치됨--production 옵션이 디폴트라서 외부 패키지를 사용할 때는 devDependency가 설치되지 않는데, 로컬 패키지를 사용할 때는 왜 이 옵션이 적용되지 않는지 잘 모르겠음암튼 이 devDependency에 eslint@7.32.0가 포함되어 있었는데, 이게 punycode를 예전 방식으로 사용하고 있는 것[해결]근데 사실 본인은 devDependency에 있는 패키지를 사용할 일이 없으므로 그냥 쿨하게 devDependency를 해당 패키지에서 삭제함아님 아래와 같이 hexo-generator-searchdb-custom/package.json를 직접 수정해서 사용했을 듯1234&quot;devDependencies&quot;: { // 현시점 최신 버전으로 설정해서 잘 되는지 확인 &quot;eslint&quot;: &quot;^9.18.0&quot;, &quot;@next-theme/eslint-config&quot;: &quot;^0.0.4&quot;} [상황2] 불러온 패키지의 dependencies 중 오래된 버전이 존재하여 이슈 발생 [해결방법2-1] override 활용하여 의존성 정보를 최신으로 덮어씌우기 [해결방법2-2] node_modules 내에서 직접 punycode 관련 코드를 수정권장되지 않는다는 건 알지만, 달리 방법이 없을 땐 어쩔 수 없으니까.. 예시) hexo-renderer-markdown-it 플러그인 [상황] 본인 블로그에서는 hexo-renderer-markdown-it 플러그인을 통해 마크다운을 렌더링하고 있음 이 블로그에서는 KaTex로 수식을 렌더링하고 있는데, KaTex 사용 시에는 hexo-renderer-markdown-it을 권장한다[1]고 하여 Hexo에서 기본으로 제공하는 hexo-renderer-markdown 플러그인 대신 사용 중 그리고 이 hexo-renderer-markdown-it 플러그인에서 markdown-it@13.0.2를 사용하고 있음 [문제] 문제는 이 markdown-it@13.0.2에서 punycode를 예전 방식으로 불러오고 있음 const punycode = require('punycode')가 아닌 const punycode = require('punycode/')로 불러와야 함[2] 따라서 버전을 오버라이딩하거나 직접 해당 코드를 수정해야 함 진짜 문제는 markdown-it을 14.0.0 이상으로 올리면 그냥 hexo-renderer-markdown-it 자체가 돌아가지 않아 오버라이딩이 불가능하다는 것… 그거까지 해결하고 싶진 않았음.. 난 Node.js 공부해본 적 없는 걸.. [해결] 따라서, 어쩔 수 없이 node_modules/hexo-renderer-markdown-it/ 안에 있는 node_modules/markdown-it/lib/index.js을 아래와 같이 수정함 12// const punycode = require('punycode'); // 기존 코드const punycode = require('punycode/'); // 수정 코드 슬래시 하나 추가했을 뿐인데 문제가 해결되었을 때의 기분을 서술하시오. (1000점) 이렇게 되면, node에 설치된 punycode를 사용하게 되므로 만일 punycode가 설치되어 있지 않다면 추가적으로 npm install punycode --save를 실행 매번 수정하기 귀찮다면 postinstall 스크립트를 활용하여 자동화하면 됨 (아래 설명 참고) How I Got Resolved 결론은 결론이고, 모두가 위에서 언급한 패키지에 대해 문제가 생기지는 않을 것이다. 따라서 내가 어떻게 문제를 해결했는지에 대한 과정을 의식의 흐름대로 적어보았다. Check Status 일단 사용 중인 Node 버전을 확인해보았던 걸로 기억한다. 12$ node -vv21.7.3 버전을 20으로 낮춰도 아마 해결은 되겠지만, 낮추는 건 왠지 자존심이 허락 안하는걸~ (은 아니고 그냥 Node.js에 관한 지식이 없어서 버전별 차이를 모르기 때문에 최신이 최선이라고 생각했음) punycode vs. punycode/ 구글에 “npm punycode deprication” 따위로 검색해서 이것저것 살펴보니, 결국 punycode를 사용하는 패키지에서 punycode를 불러오는 코드를 최신화하지 않아서 발생하는 문제였다. 그니까, 대충 뭐 punycode 깃헙 리드미[2:1]를 읽어보면 punycode를 설치하고 require('punycode')가 아닌 require('punycode/')로 불러와야 한다는 것 같다. 대체 둘이 뭐가 다른지 모르겠지만, 뭐 그냥 파이썬에 비유하면 from .utils import * 랑 from utils import * 사이의 간극 정도 아닐까하고 적당히 넘어감.^^ punycode dependency 아무튼 그러한 이유로 punycode를 사용하는 모듈을 모두 찾기로 한다. 블로그 루트 디렉토리로 가서 npm ls punycode로 punycode의 상속 여부를 찾아보자. 1234567$ npm ls punycodehexo-blog@0.0.1 /루트/디렉토리/├─┬ hexo-generator-searchdb-custom@1.4.1 -&gt; /루트/디렉토리/node_modules/hexo-generator-searchdb-custom│ └─┬ eslint@7.32.0│ └─┬ ajv@기억.안남.0│ └─┬ uri-js@기억.안남.0│ └── punycode@기억.안남.0 대충 이런 결과가 뜬다. (기억이 가물가물해서 버전은 유추해서 적은 것) 보다시피 punycode를 쓰는 uri-js를 쓰는 ajv를 쓰는 eslint를 쓰는 hexo-generator-searchdb-custom이 문제인 걸로 확인되었다. ㅋㅋ 안 그래도 구글링할 때 eslint, ajv, uri-js 패키지 관련 이슈가 자주 나왔던 것이 생각나서, 이 세 개의 패키지도 마찬가지로 npm ls [패키지명] 명령어로 확인해보았다. 결과적으로 두 패키지에서 구버전 eslint를 사용하는 걸로 확인되었다. hexo-generator-searchdb-custom hexo-generator-sitemap-custom Fix (1) 처음에는 이 패키지들의 버전을 최신으로 업데이트하면 되겠지 싶어서 각 패키지의 package.json을 열어보았는데, 둘 다 eslint가 devDependencies로 설정된 케이스였다. 두 패키지 이름에서 짐작되겠지만, 둘 다 기존의 플러그인을 로컬에서 커스텀한 플러그인이었다. 기존 패키지를 전체적으로 거의 다 고쳐야 해서 그냥 로컬로 복제한 뒤 수정하여 아래와 같이 사용했는데 이게 문제였다. 1234&quot;dependencies&quot;: { &quot;hexo-generator-searchdb&quot;: &quot;file:source/js/hexo-generator-searchdb-custom&quot;, &quot;hexo-generator-sitemap&quot;: &quot;file:source/js/hexo-generator-sitemap-custom&quot;} 이유는 모르겠으나 이렇게 직접 만든 로컬 패키지를 사용할 때는 devDependencies까지 함께 설치되었다. npm install의 --production 옵션이 적용되지 않는 것으로 추정 구글링해도 이유를 못 찾아서 포기 어짜피 개발의 편의를 위해 기존 패키지를 수정한 것에 불과해서 devDependencies가 필요 없었다. 그래서 그냥 두 패키지의 package.json에서 devDependencies 부분을 모두 삭제하고 아래의 코드로 패키지들을 재설치했다. 123$ rm -r node_modules$ rm package-lock.json$ npm install Fix (2) 그 때는 해결될 줄 알았는데… Warning 또 뜨는 걸 보고 진심… 노트북 던져버릴 뻔 여기까지 오는 데에 이틀이나 걸렸기 때매… 그래서 그냥 마음을 비우고 find 명령어로 punycode를 사용하는 js 파일을 모두 찾기로 했다. 좀 무식하긴 한데, 별다른 방법을 모르겠어서 그냥 이렇게 했음ㅎㅎ 12$ cd node_modules$ find . -type f -name &quot;*.js&quot; -exec grep -H &quot;punycode&quot; {} \\; 결과가 굉장히 많이 나오는데, 그 중에 이런 게 있었다: ./hexo-renderer-markdown-it/node_modules/markdown-it/lib/index.js: var punycode = require('punycode'); 일단 하나라도 찾았으니, 이 파일부터 하나씩 수정해보자는 마음으로 해당 파일을 열어보았다. 보니깐, hexo-renderer-markdown-it 플러그인에서 markdown-it@13.0.2를 사용하고 있는데, 이 버전의 lib/index.js에서 punycode를 예전 방식으로 불러오고 있었다. 그래서 그냥 슬래시 하나 추가해주고 저장하기만 했다. 12// const punycode = require('punycode'); // 기존 코드const punycode = require('punycode/'); // 수정 코드 그리고 다시 한 번 hexo server -o를 실행해보니 이번엔 punycode가 설치되어 있지 않다는 문구가 떴다. 이는 punycode/로 불러오는 방식이 node_modules에 설치된 punycode를 사용하게 되기 때문인 걸로 보인다. 가볍게 npm i punycode --save로 블로그 루트에 punycode를 설치한 후 다시 서버를 실행해보니 드디어 DeprecationWarning이 뜨지 않았다. 와! 다행! 이제 노트북을 던지지 않아도 된다! Postinstall Script 그런데, 이렇게 매번 수정하기 귀찮기도 하고 node_modules를 직접 건드리는 게 맞나 싶기도 해서 좀 검색해보니까 바로 postinstall 스크립트를 활용법이 나오더라. 방법은 상당히 간단하다. patch-package 패키지 설치 1$ npm install patch-package --save-dev node_modules 안에서 수정하고 싶은 파일을 찾아서 수정 이미 수정되어 있으니 생략 package.json에 postinstall 스크립트 추가 123&quot;scripts&quot;: { &quot;postinstall&quot;: &quot;patch-package&quot;} 수정된 파일을 패치로 저장 1$ npx patch-package [패키지명] 주의) 여기서는 패키지 속 패키지를 수정했기 때문에 npx patch-package hexo-renderer-markdown-it으로 실행하면 해당 패키지에서 바뀐 게 아무 것도 없다는 메시지가 뜬다. 따라서 npx patch-package hexo-renderer-markdown-it/markdown-it으로 실행해야 한다. 끝! /patches 디렉토리가 생성되고 그 안에 패치 파일이 생성된다. npm install 시 자동으로 해당 폴더의 패치들이 적용되므로 더 이상 직접 수정할 필요가 없다. P.S. 고작 DeprecationWarning 하나 때문에 이렇게 고생을 하다니 ㅠㅠ 나 진짜 Node.js 쪽은 파지 말아야지🫠 나중에 markdown-it 버전을 올리는 “overrides” 방식도 시도해봤는데 안 됐음. 근데 오버라이딩은 정말 쉬우니 시도해보면 좋을 듯[3]. details.folding-tag summary code { font-size: 1em; font-weight: 400; } details.folding-tag .content figure { margin: 0.5em 0 0.75em; } #article-container ol li figure.highlight { margin: 0.5em 0 0.75em; } Butterfly document - Theme Configuration # Math(link) ↩︎ Github - mathiasbynens/punycode.js (link) ↩︎ ↩︎ npm Docs - package.json (link) ↩︎","link":"/posts/ko/Solving-DeprecationWarning-in-Hexo/"},{"title":"Hello World","text":"이 게시물은 $ hexo init 커맨드 실행 시 처음으로 생성되는 게시물입니다. 원본 소스 코드는 hexojs/hexo-starter에서 확인할 수 있습니다.[1] 소개 Hexo에 오신 것을 환영합니다! 이 게시물은 Hexo 기본 템플릿에서 제공하는 첫 게시물에 대한 한글 번역본입니다. 자세한 내용은 Hexo 문서에서 확인하세요. Hexo 사용 시 문제가 발생하면 troubleshooting 에서 답을 찾거나 GitHub를 통해 문의할 수 있습니다. 빠른 시작 새 게시물 만들기 1$ hexo new &quot;My New Post&quot; 추가 정보: Writing 서버 실행 1$ hexo server 추가 정보: Server 정적 파일 생성 1$ hexo generate 추가 정보: Generating 원격 사이트로 배포 1$ hexo deploy 추가 정보: Deployment GitHub - hexojs/hexo-starter: Hexo Starter site. (link) ↩︎","link":"/posts/ko/hello-world/"},{"title":"Tag Plugins Plus 튜토리얼 - 1","text":"This posting is written in Korean. English is not scheduled to be written. 본 게시물은 hexo-butterfly-tag-plugins-plus 개발자가 작성한 튜토리얼[1]에 대한 한글 번역본입니다. Hexo가 Jekyll보다 더 마음에 들어 선택했는데, 참고할 만한 글들이 다 중국어로 적혀있어서 매우 곤란… 내용이 너무 길어져서 세 파트로 나누어서 업로드하였습니다. 참고로 일부 태그들은 별도의 라이브러리 없이 butterfly 테마만으로도 사용 가능합니다.애초에 Butterfly 테마가 이 플러그인을 기반으로 여러 태그를 추가했기 때문ㅎㅎTag Plugins Plus 튜토리얼 - 1text / span / p / note / tip / animated / checkbox / radio / timelineTag Plugins Plus 튜토리얼 - 2link / btns / ghcard / ghbadge / sites / inlineimage / image / audio / video / galleryTag Plugins Plus 튜토리얼 - 3folding / tab / issues / poem / icon / wow / progress / notation / bubble / reference / carousel 라이브러리 설치 (npm 이용) 터미널을 열고, 본인의 블로그 루트 디렉토리로 가서 아래의 설치 명령어를 실행합니다. 1npm install hexo-butterfly-tag-plugins-plus --save Hexo에서 기본으로 제공하는 hexo-renderer-marked 라이브러리는 외부 태그와 호환성이 그리 좋지 못하므로 hexo-renderer-kramed로 바꿔주는 것이 좋습니다. 12npm un hexo-renderer-marked --savenpm i hexo-renderer-kramed --save 라고 쓰여있지만 저는 hexo-renderer-markdown-it을 대신 설치하였습니다. Butterfly 테마 공식 블로그에서는 kaTeX 사용 시 hexo-renderer-markdown-it(권장) 또는 hexo-renderer-markdown-it-plus을 설치해야 함을 명시하고 있습니다. hexo-renderer-markdown-it는 Hexo에서 제공하는 렌더러이기 때문에 비교적 꾸준한 업데이트가 이루어지고 있어, 이를 설치하였습니다. 아래와 같이 터미널에서 명령어를 실행한 뒤, _config.yml에 내용을 추가하면 됩니다. 1234npm un hexo-renderer-marked --savenpm un hexo-renderer-kramed --savenpm i hexo-renderer-markdown-it --savenpm install @neilsustc/markdown-it-katex --save plugins는 옵션으로 추가할 플러그인을 지정하는 변수이며, 자신이 사용하고자 하는 옵션만 추가하면 됩니다 (참고). anchors는 목차(ToC) 및 헤드라인(h1…h6)을 어떻게 만들지에 관련된 변수입니다. level의 기본값이 2이기 때문에, level: 1로 변경하지 않으면 목차에서 h1에 대한 하이퍼링크가 만들어지지 않습니다. 12345678910111213141516markdown: plugins: - markdown-it-abbr - markdown-it-container - markdown-it-deflist - markdown-it-footnote - markdown-it-ins - markdown-it-mark - markdown-it-sub - markdown-it-sup - name: '@neilsustc/markdown-it-katex' enable: true options: strict: false anchors: level: 1 사이트 구성 파일(_config.yml 또는 _config.butterfly.yml)에 아래의 내용을 추가합니다. 1234567891011121314# tag-plugins-plus# see https://akilar.top/posts/615e2dec/tag_plugins: enable: true # 플러그인 활성 여부 priority: 5 # 필터 우선순위 issues: false # issues 태그 활성 여부 link: placeholder: /img/link.png # link_card 태그 기본 아이콘 이미지 CDN: anima: https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css # animated 태그 종속성 jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js # issues 태그 종속성 issues: https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js # issues 종속성 iconfont: //at.alicdn.com/t/font_2032782_8d5kxvn09md.js # icon 태그 종속성 (https://akilar.top/posts/d2ebecef/ 참조) carousel: https://cdn.jsdelivr.net/npm/hexo-butterfly-tag-plugins-plus@latest/lib/carousel-touch.min.js # carousel 태그 마우스 이벤트 종속성 텍스트 기본 효과 parametercodepreview+a123456{% u [본문 내용] %}{% emp [본문 내용] %}{% wavy [본문 내용] %}{% del [본문 내용] %}{% kbd [본문 내용] %}{% psw [본문 내용] %}1234561. {% u 밑줄 %}이 있는 텍스트, 2. {% emp 강조 %}가 있는 텍스트, 3. {% wavy 물결선 %}이 있는 텍스트, 4. {% del 취소선 %}이 있는 텍스트,5. 키보드 스타일 텍스트: {% kbd ⌘ %} + {% kbd D %},6. 비밀번호 스타일 텍스트: {% psw 여기에는 인증 코드가 없습니다.%} 밑줄이 있는 텍스트, 강조가 있는 텍스트, 물결선이 있는 텍스트, 취소선이 있는 텍스트, 키보드 스타일 텍스트: ⌘ + D, 비밀번호 스타일 텍스트: 여기에는 인증 코드가 없습니다. 밑줄(u), 강조(emp), 취소선(del), 물결선(wavy), 비밀번호(psw:hover) 등 일부 스타일은 기본 색상이 회색으로 지정되어 있습니다. 이를 원하지 않을 경우 본인의 커스텀 CSS 파일에서 수정하시면 됩니다. 제 블로그에서는 이를 모두 본래 글꼴색으로 수정했습니다. (취소선은 회색인 편이 보다 의미 전달을 명확하게 해주는 것 같아 그대로 둠ㅎㅎ) 123u, emp, wavy, psw:hover { color: unset !important;} 글자색/글자크기 (span) parametercodepreview1{% span [스타일 인자 (띄어쓰기로 구분)], [본문 내용] %} 글꼴 : logo, code 색상 : red, yellow, green, cyan, blue, gray, #000000 ~ #ffffff 크기 : small, h4, h3, h2, h1, large, huge, ultra 정렬 : left, center, right 1234567- 컬러 텍스트{% span red, 빨간색 %}, {% span yellow, 노란색 %}, {% span green, 녹색 %}, {% span cyan, 청록색 %}, {% span blue, 파란색 %}, 그리고{% span gray, 회색%} 등의 태그를 이용해 다양한 색상을 편리하게 삽입할 수 있습니다.- 대형 텍스트문서의 '시작' 페이지의 제목 부분은 아래의 대형 텍스트로 표현됩니다.{% span center logo large , Butterfly &amp; Volantis %}{% span center small , Wonderful Themes for Hexo %} 컬러 텍스트 빨간색, 노란색, 녹색, 청록색, 파란색, 그리고 회색 등의 태그를 이용해 다양한 색상을 편리하게 삽입할 수 있습니다. 대형 텍스트 문서의 ‘시작’ 페이지의 제목 부분은 아래의 대형 텍스트로 표현됩니다. Butterfly &amp; Volantis Wonderful Themes for Hexo 단락 스타일 (p) parametercodepreview1{% p [스타일 인자 (띄어쓰기로 구분)], [본문 내용] %} 글꼴 : logo, code 색상 : red, yellow, green, cyan, blue, gray, #000000 ~ #ffffff 크기 : small, h4, h3, h2, h1, large, huge, ultra 정렬 : left, center, right 12345678{% p red, 빨간색 %}{% p yellow, 노란색 %}{% p green, 녹색 %}{% p cyan, 청록색 %}{% p blue, 파란색 %}{% p gray, 회색 %}{% p center logo large , Butterfly &amp; Volantis %}{% p center small , Wonderful Themes for Hexo %}빨간색 노란색 녹색 청록색 파란색 회색 Butterfly & Volantis Wonderful Themes for Hexo 인용문 (note) _config.butterfly.yml 을 통해 기본값 수정 가능123456789101112note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: modern icons: true border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0 방법-1 parametercodepreview+a123{% note [class] [no-icon] [style] %}Any content (support inline tags too.io).{% endnote %} 매개 변수 사용 방법 class «선택사항» 로고 （default / primary / success / info / warning / danger）로고마다 지정된 색상이 다릅니다. no-icon «선택사항» 아이콘을 표시하지 않음 style «선택사항» 스타일 （simple / modern / flat / disabled） simplemodernflatdisabledno-icon1234567{% note simple %}기본 알림 블록 태그{% endnote %}{% note default simple %}default 알림 블록 태그{% endnote %}{% note primary simple %}primary 알림 블록 태그{% endnote %}{% note success simple %}success 알림 블록 태그{% endnote %}{% note info simple %}info 알림 블록 태그{% endnote %}{% note warning simple %}warning 알림 블록 태그{% endnote %}{% note danger simple %}danger 알림 블록 태그{% endnote %}1234567{% note modern %}기본 알림 블록 태그{% endnote %}{% note default modern %}default 알림 블록 태그{% endnote %}{% note primary modern %}primary 알림 블록 태그{% endnote %}{% note success modern %}success 알림 블록 태그{% endnote %}{% note info modern %}info 알림 블록 태그{% endnote %}{% note warning modern %}warning 알림 블록 태그{% endnote %}{% note danger modern %}danger 알림 블록 태그{% endnote %}1234567{% note flat %}기본 알림 블록 태그{% endnote %}{% note default flat %}default 알림 블록 태그{% endnote %}{% note primary flat %}primary 알림 블록 태그{% endnote %}{% note success flat %}success 알림 블록 태그{% endnote %}{% note info flat %}info 알림 블록 태그{% endnote %}{% note warning flat %}warning 알림 블록 태그{% endnote %}{% note danger flat %}danger 알림 블록 태그{% endnote %}1234567{% note disabled %}기본 알림 블록 태그{% endnote %}{% note default disabled %}default 알림 블록 태그{% endnote %}{% note primary disabled %}primary 알림 블록 태그{% endnote %}{% note success disabled %}success 알림 블록 태그{% endnote %}{% note info disabled %}info 알림 블록 태그{% endnote %}{% note warning disabled %}warning 알림 블록 태그{% endnote %}{% note danger disabled %}danger 알림 블록 태그{% endnote %}1234567{% note no-icon %}기본 알림 블록 태그{% endnote %}{% note default no-icon %}default 알림 블록 태그{% endnote %}{% note primary no-icon %}primary 알림 블록 태그{% endnote %}{% note success no-icon %}success 알림 블록 태그{% endnote %}{% note info no-icon %}info 알림 블록 태그{% endnote %}{% note warning no-icon %}warning 알림 블록 태그{% endnote %}{% note danger no-icon %}danger 알림 블록 태그{% endnote %}simplemodernflatdisabledno-icon기본 알림 블록 태그 default 알림 블록 태그 primary 알림 블록 태그 success 알림 블록 태그 info 알림 블록 태그 warning 알림 블록 태그 danger 알림 블록 태그 기본 알림 블록 태그 default 알림 블록 태그 primary 알림 블록 태그 success 알림 블록 태그 info 알림 블록 태그 warning 알림 블록 태그 danger 알림 블록 태그 기본 알림 블록 태그 default 알림 블록 태그 primary 알림 블록 태그 success 알림 블록 태그 info 알림 블록 태그 warning 알림 블록 태그 danger 알림 블록 태그 기본 알림 블록 태그 default 알림 블록 태그 primary 알림 블록 태그 success 알림 블록 태그 info 알림 블록 태그 warning 알림 블록 태그 danger 알림 블록 태그 기본 알림 블록 태그 default 알림 블록 태그 primary 알림 블록 태그 success 알림 블록 태그 info 알림 블록 태그 warning 알림 블록 태그 danger 알림 블록 태그 제 블로그에서는 [방법-1]의 아이콘의 위치가 글자의 중심보다 위로 올라와 있어 해당 위치를 조정했습니다. 123#article-container .note:not(.no-icon)::before { top: calc(50% - 0.7em);} 방법-2 parametercodepreview123{% note [color] [icon] [style] %}Any content (support inline tags too.io).{% endnote %} 매개 변수 사용 방법 class «선택사항» 로고 색상 （default / blue / pink / red / purple / orange / green） icon «선택사항» 커스텀 아이콘. 단, Font Awsome만 지원되며, 아이콘이 없는 설정도 가능. style «선택사항» 스타일 （simple / modern / flat / disabled） simplemodernflatdisabledno-icon1234567{% note 'fab fa-cc-visa' simple %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note blue 'fas fa-bullhorn' simple %}2021년이 곧 다가옵니다...{% endnote %}{% note pink 'fas fa-car-crash' simple %}조심해서 운전하고 안전이 가장 중요합니다{% endnote %}{% note red 'fas fa-fan' simple %} 이 세 조각인가요? 네 조각?{% endnote %}{% note orange 'fas fa-battery-half' simple %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note purple 'far fa-hand-scissors' simple %}가위바위보{% endnote %}{% note green 'fab fa-internet-explorer' simple %}프론트엔드에서 가장 싫어하는 브라우저{% endnote %}1234567{% note 'fab fa-cc-visa' modern %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note blue 'fas fa-bullhorn' modern %}2021년이 곧 다가옵니다...{% endnote %}{% note pink 'fas fa-car-crash' modern %}조심해서 운전하고 안전이 가장 중요합니다{% endnote %}{% note red 'fas fa-fan' modern %} 이 세 조각인가요? 네 조각?{% endnote %}{% note orange 'fas fa-battery-half' modern %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note purple 'far fa-hand-scissors' modern %}가위바위보{% endnote %}{% note green 'fab fa-internet-explorer' modern %}프론트엔드에서 가장 싫어하는 브라우저{% endnote %}1234567{% note 'fab fa-cc-visa' flat %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note blue 'fas fa-bullhorn' flat %}2021년이 곧 다가옵니다...{% endnote %}{% note pink 'fas fa-car-crash' flat %}조심해서 운전하고 안전이 가장 중요합니다{% endnote %}{% note red 'fas fa-fan' flat %} 이 세 조각인가요? 네 조각?{% endnote %}{% note orange 'fas fa-battery-half' flat %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note purple 'far fa-hand-scissors' flat %}가위바위보{% endnote %}{% note green 'fab fa-internet-explorer' flat %}프론트엔드에서 가장 싫어하는 브라우저{% endnote %}1234567{% note 'fab fa-cc-visa' disabled %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note blue 'fas fa-bullhorn' disabled %}2021년이 곧 다가옵니다...{% endnote %}{% note pink 'fas fa-car-crash' disabled %}조심해서 운전하고 안전이 가장 중요합니다{% endnote %}{% note red 'fas fa-fan' disabled %} 이 세 조각인가요? 네 조각?{% endnote %}{% note orange 'fas fa-battery-half' disabled %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note purple 'far fa-hand-scissors' disabled %}가위바위보{% endnote %}{% note green 'fab fa-internet-explorer' disabled %}프론트엔드에서 가장 싫어하는 브라우저{% endnote %}1234567{% note no-icon %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note blue no-icon %}2021년이 곧 다가옵니다...{% endnote %}{% note pink no-icon %}조심해서 운전하고 안전이 가장 중요합니다{% endnote %}{% note red no-icon %} 이 세 조각인가요? 네 조각?{% endnote %}{% note orange no-icon %}Visa 또는 UnionPay를 사용하십니까{% endnote %}{% note purple no-icon %}가위바위보{% endnote %}{% note green no-icon %}프론트엔드에서 가장 싫어하는 브라우저{% endnote %}simplemodernflatdisabledno-iconVisa 또는 UnionPay를 사용하십니까 2021년이 곧 다가옵니다… 조심해서 운전하고 안전이 가장 중요합니다 이 세 조각인가요? 네 조각? Visa 또는 UnionPay를 사용하십니까 가위바위보 프론트엔드에서 가장 싫어하는 브라우저 Visa 또는 UnionPay를 사용하십니까 2021년이 곧 다가옵니다… 조심해서 운전하고 안전이 가장 중요합니다 이 세 조각인가요? 네 조각? Visa 또는 UnionPay를 사용하십니까 가위바위보 프론트엔드에서 가장 싫어하는 브라우저 Visa 또는 UnionPay를 사용하십니까 2021년이 곧 다가옵니다… 조심해서 운전하고 안전이 가장 중요합니다 이 세 조각인가요? 네 조각? Visa 또는 UnionPay를 사용하십니까 가위바위보 프론트엔드에서 가장 싫어하는 브라우저 Visa 또는 UnionPay를 사용하십니까 2021년이 곧 다가옵니다… 조심해서 운전하고 안전이 가장 중요합니다 이 세 조각인가요? 네 조각? Visa 또는 UnionPay를 사용하십니까 가위바위보 프론트엔드에서 가장 싫어하는 브라우저 Visa 또는 UnionPay를 사용하십니까 2021년이 곧 다가옵니다… 조심해서 운전하고 안전이 가장 중요합니다 이 세 조각인가요? 네 조각? Visa 또는 UnionPay를 사용하십니까 가위바위보 프론트엔드에서 가장 싫어하는 브라우저 위 첨자 라벨 (tip) parametercodepreview1{% tip [스타일 인자] %}본문 내용{% endtip %} 스타일 : success, error, warning, bolt, ban, home, sync, cogs, key, bell 사용자 정의 아이콘 : FontAwsome을 지원합니다. 123456789101112{% tip %}기본 스타일{% endtip %}{% tip success %}success{% endtip %}{% tip error %}error{% endtip %}{% tip warning %}warning{% endtip %}{% tip bolt %}bolt{% endtip %}{% tip ban %}ban{% endtip %}{% tip home %}home{% endtip %}{% tip sync %}sync{% endtip %}{% tip cogs %}cogs{% endtip %}{% tip key %}key{% endtip %}{% tip bell %}bell{% endtip %}{% tip fa-cog %}커스텀 변경 (FontAwsome 사용){% endtip %}기본 스타일 success error warning bolt ban home sync cogs key bell 커스텀 변경 (FontAwsome 사용) 애니메이션 추가 (tip + animated) parametercodepreview보다 자세한 내용은 font-awesome-animation 문서를 참고하십시오. 필요한 CSS 클래스를 아이콘(또는 DOM의 모든 요소)에 추가합니다. parent hover 스타일의 경우, 대상 요소에 CSS 클래스를 지정하고 faa-parent animated-hover CSS 클래스를 동시에 추가해야 합니다. (자세한 사항은 예시 및 예시 소스코드 참조) 대상 요소에 CSS 클래스 faa-fast 또는 faa-slow를 추가함으로써 애니메이션 속도를 조정할 수 있습니다. On DOM load : 페이지가 로드될 때 애니메이션이 표시됩니다. &nbsp;faa-wrench animated &nbsp;faa-ring animated &nbsp;faa-horizontal animated &nbsp;faa-vertical animated &nbsp;faa-flash animated &nbsp;faa-bounce animated &nbsp;faa-spin animated &nbsp;faa-tada animated &nbsp;faa-pulse animated &nbsp;faa-shake animated &nbsp;faa-tada animated &nbsp;faa-passing animated &nbsp;faa-passing-reverse animated &nbsp;faa-burst animated &nbsp;faa-falling animated &nbsp;faa-rising animated On mouse hover : 마우스를 아이콘 위에 위치시킬 때 애니메이션이 표시됩니다. &nbsp;faa-wrench animated-hover &nbsp;faa-ring animated-hover &nbsp;faa-horizontal animated-hover &nbsp;faa-vertical animated-hover &nbsp;faa-flash animated-hover &nbsp;faa-bounce animated-hover &nbsp;faa-spin animated-hover &nbsp;faa-tada animated-hover &nbsp;faa-pulse animated-hover &nbsp;faa-shake animated-hover &nbsp;faa-tada animated-hover &nbsp;faa-passing animated-hover &nbsp;faa-passing-reverse animated-hover &nbsp;faa-burst animated-hover &nbsp;faa-falling animated-hover &nbsp;faa-rising animated-hover On parent hover : 마우스가 부모 요소 위에 있을 때 애니메이션이 표시됩니다. &nbsp;faa-wrench &nbsp;faa-ring &nbsp;faa-horizontal &nbsp;faa-vertical &nbsp;faa-flash &nbsp;faa-bounce &nbsp;faa-spin &nbsp;faa-tada &nbsp;faa-pulse &nbsp;faa-shake &nbsp;faa-tada &nbsp;faa-passing &nbsp;faa-passing-reverse &nbsp;faa-burst &nbsp;faa-falling &nbsp;faa-rising On DOM load (페이지 로드 시) 12{% tip warning faa-horizontal animated %}warning{% endtip %}{% tip ban faa-flash animated %}ban{% endtip %} 애니메이션 속도 조정 12{% tip warning faa-horizontal animated faa-fast %}warning{% endtip %}{% tip ban faa-flash animated faa-slow %}ban{% endtip %} On mouse hover 12{% tip warning faa-horizontal animated-hover %}warning{% endtip %}{% tip ban faa-flash animated-hover %}ban{% endtip %} On parent hover 12{% tip warning faa-parent animated-hover %}&lt;p class=&quot;faa-horizontal&quot;&gt;warning&lt;/p&gt;{% endtip %}{% tip ban faa-parent animated-hover %}&lt;p class=&quot;faa-flash&quot;&gt;ban&lt;/p&gt;{% endtip %} On DOM load (페이지 로드 시) warning ban 애니메이션 속도 조정 warning ban On mouse hover warning ban On parent hover warning ban 다중 선택 리스트 (checkbox) parametercodepreview1{% checkbox [스타일 인자], [본문 (간단한 markdown 문법 지원)] %} 스타일 : plus, minus, times 색상 : red, yellow, green, cyan, blue, gray 확인 상태 : checked 12345678910{% checkbox 일반 텍스트 테스트 %}{% checkbox checked , 간단한 [markdown](https://guides.github.com/features/mastering-markdown/) 지원 %}{% checkbox red, 사용자 정의 지원정의 색상 %}{% checkbox green checked, 초록색 + 기본 선택 %}{% checkbox yellow checked, 노란색 + 기본 선택 %}{% checkbox cyan checked, 청록색 + 기본 선택 %}{% checkbox blue checked, 파란색 + 기본 선택 %}{% checkbox plus green checked, plus 선택 %}{% checkbox minus yellow checked, minus 선택 %}{% checkbox times red checked , times 선택 %} 일반 텍스트 테스트 간단한 markdown 지원 빨간색 초록색 + 기본 선택 노란색 + 기본 선택 청록색 + 기본 선택 파란색 + 기본 선택 초록색 + plus 선택 노란색 + minus 선택 빨간색 + times 선택 단일 선택 리스트 (radio) parametercodepreview1{% radio [스타일 인자], [본문 (간단한 markdown 문법 지원)] %} 색상 : red, yellow, green, cyan, blue, gray 확인 상태 : checked 1234567{% radio 일반 텍스트 테스트 %}{% radio checked, 간단한 [markdown](https://guides.github.com/features/mastering-markdown/) 지원 %}{% radio red, 빨간색 %}{% radio green, 초록색 %}{% radio yellow, 노란색 %}{% radio cyan, 청록색 %}{% radio blue, 파란색 %} 일반 텍스트 테스트 간단한 markdown 지원 빨간색 초록색 노란색 청록색 파란색 타임라인 (timeline) 사용자의 요청에 따라, Butterfly 테마의 4.0.0 버전부터 timeline 태그가 지원되고 있습니다. 따라서, 4.0.0-b9 버전을 이용하고 있는 제 블로그에서는 본 플러그인의 timeline 태그가 제대로 작동하지 않습니다. 내장된 timeline 태그보다 이 플러그인의 timeline 태그가 더 마음에 드신다면, {root}/themes/butterfly/scripts/tag/timeline.js와 {root}/themes/butterfly/source/css/_tags/timeline.styl을 모두 삭제하면 됩니다. hexo-butterfly-tag-plugins-plus 제공 parametercodepreview12345678{% timeline [타임라인 제목 (선택사항)] %}{% timenode [시간 노드 (제목)] %}[본문 내용]{ % endtimenode % }{% timenode [시간 노드 (제목)] %}[본문 내용]{ % endtimenode % }{ % endtimeline % }123456789101112131415161718192021222324252627{% timeline %}{% timenode 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) %}1. `hexo-lazyload-image` 플러그인이 있는 경우, 최신 버전 삭제 후 새로 설치해야 하며，`lazyload.isSPA: true`를 설정해야 합니다.2. 2.x 버전의 css 맟 js는 3.x 버전에 적용되지 않으며, `use_cdn: true`를 사용했다면 이를 삭제해야 합니다.3. 2.x 버전의 fancybox 라벨은 3.x 버전에서 gallery로 이름이 변경되었습니다.4. 2.x 버전의 헤드업 `top: true`를 `pin: true`로 수정하였으며, `layout: page` 페이지에도 동일하게 적용됩니다.5. `hexo-offline` 플러그인의 경우 제거하는 것이 좋습니다. 기본적으로, 3.0 버전은 pjax 서비스가 활성화되어 있습니다.{% endtimenode %}{% timenode 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) %}별도의 처리가 필요하지 않습니다.{% endtimenode %}{% timenode 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) %}1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.2. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.2. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.{% endtimenode %}{% endtimeline %} Hexo Butterfly 테마 제공 parametercodepreview1234567{% timeline [타임라인 제목],[색상] %}&lt;!-- timeline [시간 노드 (제목)] --&gt;&lt;!-- endtimeline --&gt;&lt;!-- timeline [시간 노드 (제목)] --&gt;[본문 내용]&lt;!-- endtimeline --&gt;{% endtimeline %}nonebluepinkredpurpleorangegreen12345678910{% timeline 2020 %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,blue %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,pink %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,red %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,purple %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,orange %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}12345678910{% timeline 2020,green %}&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;별도의 처리가 필요하지 않습니다.&lt;!-- endtimeline --&gt;&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;1. 전역검색에서 `seotitle`를 `seo_title`로 변경합니다.1. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,`group: group_name`에 대응하는 컴포넌트명은 `group_name`이어야 합니다.1. group 컴포넌트 아티클의 표시명 우선 순위는 `short_title` 다음이 `title`입니다.&lt;!-- endtimeline --&gt;{% endtimeline %}nonebluepinkredpurpleorangegreen 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. 2020 2020-07-24 2.6.6 -&gt; 3.0 별도의 처리가 필요하지 않습니다. 2020-04-20 2.6.2 -&gt; 2.6.3 전역검색에서 seotitle를 seo_title로 변경합니다. group 컴포넌트의 색인 규칙이 변경되었습니다. group 컴포넌트를 사용하는 아티클에서,group: group_name에 대응하는 컴포넌트명은 group_name이어야 합니다. group 컴포넌트 아티클의 표시명 우선 순위는 short_title 다음이 title입니다. Tag Plugins Plus | Akilarの糖果屋 (link) ↩︎","link":"/posts/ko/tag-plugins-plus-tutorial-1/"},{"title":"Tag Plugins Plus 튜토리얼 - 3","text":"This posting is written in Korean. English is not scheduled to be written. 본 게시물은 hexo-butterfly-tag-plugins-plus 개발자가 작성한 튜토리얼[1]에 대한 한글 번역본입니다. Hexo가 Jekyll보다 더 마음에 들어 선택했는데, 참고할 만한 글들이 다 중국어로 적혀있어서 매우 곤란… 내용이 너무 길어져서 세 파트로 나누어서 업로드하였습니다. 참고로 일부 태그들은 별도의 라이브러리 없이 butterfly 테마만으로도 사용 가능합니다.애초에 Butterfly 테마가 이 플러그인을 기반으로 여러 태그를 추가했기 때문ㅎㅎTag Plugins Plus 튜토리얼 - 1text / span / p / note / tip / animated / checkbox / radio / timelineTag Plugins Plus 튜토리얼 - 2link / btns / ghcard / ghbadge / sites / inlineimage / image / audio / video / galleryTag Plugins Plus 튜토리얼 - 3folding / tab / issues / poem / icon / wow / progress / notation / bubble / reference / carousel 접이식 상자 (folding) Butterfly에도 hideToggle이라는 접이식 상자 태그가 내장되어 있지만 원저자는 Volantis의 folding이 더 좋아 보여서 이를 사용한다고 합니다. parametercodepreview123{% folding [인자 (선택사항)], [제목] %}[본문 내용]{ % endfolding % } 색상: blue, cyan, green, yellow, red 상태: (기본) 닫힘 / open 열린 상태 123456789101112131415161718192021222324{% folding 이미지 보기 테스트 %} ![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg){% endfolding %}{% folding cyan open, 기본적으로 열린기 접는 상자 보기 %} 기본적으로 열린 상태인 접히는 상자입니다.{% endfolding %}{% folding green, 코드 보기 테스트 %} 코드 블럭 있는 척 (코드 블럭은 중첩 불가){% endfolding %}{% folding yellow, 목차 보기 테스트 %} - haha - hehe{% endfolding %}{% folding red, 중첩 테스트 (1/3) %} {% folding blue, 중첩 테스트 (2/3) %} {% folding 중첩 테스트 (3/3) %} hahaha &lt;span&gt;&lt;img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'&gt;&lt;/span&gt; {% endfolding %} {% endfolding %}{% endfolding %} 이미지 보기 테스트 기본적으로 열린 상자 보기 기본적으로 열린 상태인 접히는 상자입니다. 코드 보기 테스트 1![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg) 목차 보기 테스트 hahahehe 중첩 테스트 (1/3) 중첩 테스트 (2/3) 중첩 테스트 (3/3) hahaha 다중 탭 (tab) Butterfly와 Volantis의 tab은 모두 NexT 테마에서 가져온 것이기 때문에 형태와 스타일이 완전히 동일하다고 합니다. parametercodepreview12345{% tabs [Unique name], [index] %}&lt;!-- tab [Tab caption] [@icon] --&gt;Any content (support inline tags too).&lt;!-- endtab --&gt;{% endtabs %} Unique name: 쉼표가 없는 탭 블록 레이블의 고유 이름입니다. #id에서 각 태그의 접두어와 색인 번호로 사용됩니다. 이름에 공백이 포함된 경우 #id 생성을 위해 모든 공백이 대시로 바뀝니다. 현재 게시물/페이지의 url 내에서만 고유하면 됩니다! index (선택사항): 활성할 탭의 인덱스 번호입니다. 지정하지 않으면 첫 번째 레이블(1)이 선택됩니다. 인덱스가 -1이면 탭이 선택되지 않습니다. Tab caption (선택사항): 각 탭의 제목입니다. 제목을 지정하지 않으면 탭 제목(Unique name) 옆에 서수가 붙어서 이름이 지정됩니다. 제목을 지정하지 않고 아이콘을 지정하면 제목이 비어 있습니다. @icon (선택사항): FontAwesome 아이콘 이름 (&quot;fa-fa-font&quot;와 같은 전체 이름으로 지정) 공백을 포함하거나 포함하지 않고 지정할 수 있습니다. 가령, ’Tab caption @icon’ 및 ‘Tab caption@icon’ 모두 가능합니다. 1. 첫 번째 항목을 기본으로 보여주기 【기본형】 1234567891011{% tabs test1 %} &lt;!-- tab --&gt; **This is Tab 1.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 2.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 3.** &lt;!-- endtab --&gt;{% endtabs %} 2. 선택한 항목 기본으로 보여주기 1234567891011{% tabs test2, 3 %} &lt;!-- tab --&gt; **This is Tab 1.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 2.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 3.** &lt;!-- endtab --&gt;{% endtabs %} 3. 프리셋 없음 1234567891011{% tabs test3, -1 %} &lt;!-- tab --&gt; **This is Tab 1.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 2.** &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 3.** &lt;!-- endtab --&gt;{% endtabs %} 4. 사용자 정의 탭 이름 / 아이콘 / 아이콘과 탭 이름 모두 있음 1234567891011{% tabs test4 %} &lt;!-- tab 첫 번째 탭 --&gt; **탭 이름은 &quot;첫 번째 탭&quot;입니다.** &lt;!-- endtab --&gt; &lt;!-- tab @fab fa-apple-pay --&gt; **아이콘만 있고 탭 이름은 없는 경우.** &lt;!-- endtab --&gt; &lt;!-- tab 폭탄@fas fa-bomb --&gt; **탭 이름과 아이콘이 모두 있는 경우.** &lt;!-- endtab --&gt;{% endtabs %} 1. 첫 번째 항목을 기본으로 보여주기 【기본형】 test1 1test1 2test1 3This is Tab 1.This is Tab 2.This is Tab 3. 2. 선택한 항목 기본으로 보여주기 test2 1test2 2test2 3This is Tab 1.This is Tab 2.This is Tab 3. 3. 프리셋 없음 test3 1test3 2test3 3This is Tab 1.This is Tab 2.This is Tab 3. 4. 사용자 정의 탭 이름 / 아이콘 / 아이콘과 탭 이름 모두 있음 첫 번째 탭폭탄탭 이름은 &quot;첫 번째 탭&quot;입니다.아이콘만 있고 탭 이름은 없는 경우.탭 이름과 아이콘이 모두 있는 경우. 데이터 집합 (issues) 현재 사용 불가능한 것으로 추정. 시 (poem) 기왕 한글로 번역하는 김에 내용을 훈민정음언해로 변경해보았습니다. parametercodepreview+a123{% poem [title],[author] %}[시 내용]{% endpoem %} title: 제목 author: 저자 1234567891011{% poem 훈민정음언해, 1459년 - 세조 5년 - %}나랏말ᄊᆞ미中&lt;sub&gt;듀ᇰ&lt;/sub&gt;國&lt;sub&gt;귁&lt;/sub&gt;에달아文&lt;sub&gt;문&lt;/sub&gt;字&lt;sub&gt;ᄍᆞᆼ&lt;/sub&gt;와로서르ᄉᆞᄆᆞᆺ디아니ᄒᆞᆯᄊᆡ이런젼ᄎᆞ로어린百&lt;sub&gt;ᄇᆡᆨ&lt;/sub&gt;姓&lt;sub&gt;셔ᇰ&lt;/sub&gt;이니르고져호ᇙ배이셔도ᄆᆞᄎᆞᆷ내제ᄠᅳ들시러펴디몯ᄒᆞᇙ노미하니라내이ᄅᆞᆯ為&lt;sub&gt;윙&lt;/sub&gt;ᄒᆞ야어엿비너겨새로스믈여듧字&lt;sub&gt;ᄍᆞᆼ&lt;/sub&gt;ᄅᆞᆯᄆᆡᇰᄀᆞ노니사ᄅᆞᆷ마다ᄒᆡᅇᅧ수ᄫᅵ니겨날로ᄡᅮ메便&lt;sub&gt;뼌&lt;/sub&gt;安&lt;sub&gt;ᅙᅡᆫ&lt;/sub&gt;킈ᄒᆞ고져ᄒᆞᇙᄯᆞᄅᆞ미니라{% endpoem %}훈민정음언해 1459년 - 세조 5년 -나랏말ᄊᆞ미 中듀ᇰ國귁에달아 文문字ᄍᆞᆼ와로서르ᄉᆞᄆᆞᆺ디아니ᄒᆞᆯᄊᆡ 이런젼ᄎᆞ로어린百ᄇᆡᆨ姓셔ᇰ이니르고져호ᇙ배이셔도 ᄆᆞᄎᆞᆷ내제ᄠᅳ들시러펴디몯ᄒᆞᇙ노미하니라 내이ᄅᆞᆯ為윙ᄒᆞ야어엿비너겨 새로스믈여듧字ᄍᆞᆼᄅᆞᆯᄆᆡᇰᄀᆞ노니 사ᄅᆞᆷ마다ᄒᆡᅇᅧ수ᄫᅵ니겨날로ᄡᅮ메 便뼌安ᅙᅡᆫ킈ᄒᆞ고져ᄒᆞᇙᄯᆞᄅᆞ미니라 나눔명조 옛한글을 사용하기 위한 npm 라이브러리를 설치한 후, markdown 파일에서 해당 글꼴을 추가했습니다. 1npm install --save @kfonts/nanum-myeongjo-yet-hangul 1234567&lt;style&gt; @import url('https://unpkg.com/@kfonts/nanum-myeongjo-yet-hangul/index.css'); .poem p, .poem-title, .poem-author { text-align: left !important; font-family: '나눔명조 옛한글', serif !important; }&lt;/style&gt; 해당 글꼴은 숫자 및 일부 문자를 회전하지 못하는 이슈가 있어, text-orientation: upright;를 추가하여 해결하였습니다. 또한, 1200px 이상의 너비인 화면에 대해서만 세로로 표기해주고 있으므로 동일한 css를 모든 너비에 대해 추가해주었습니다. 12345678910111213.poem { margin: 0 auto; padding: 1em 0; writing-mode: vertical-rl; writing-mode: tb-rl; text-orientation: upright;}.poem p { text-decoration: underline; text-decoration-color: #c10b0b; text-decoration-style: dashed; text-decoration-thickness: 2px;} 아래첨자의 스타일은 아래와 같이 css를 수정하였습니다. 1234.poem p sub { right: -2.5px; bottom: 0;} 마지막으로, 제목과 본문의 자간이 너무 좁아보여서 아래와 같이 늘려주었습니다. 123456.poem-title { letter-spacing: 0.6em;}.poem p { letter-spacing: 0.2em;} IconFont 추가 (icon) parametercodepreview+a1{% icon [icon-xxxx],[font-size] %} icon-xxxx: IconFont 아이콘의 font-class를 나타냅니다. 자신의 아이콘 라이브러리 항목에서 font-class 를 복사하여 참조하면 됩니다. font-size: 아이콘의 크기를 나타냅니다. 단위는 em이며, 숫자만 입력하면 됩니다 (기본값: 1em). 1234567|size=1|size=2|size=3|size=4|size=5|size=6||:---:|:---:|:---:|:---:|:---:|:---:||{% icon icon-rat_zi %}|{% icon icon-rat,2 %}|{% icon icon-ox_chou,3 %}|{% icon icon-ox,4 %}|{% icon icon-tiger_yin,5 %}|{% icon icon-tiger,6 %}||{% icon icon-rabbit_mao,1 %}|{% icon icon-rabbit,2 %}|{% icon icon-dragon_chen,3 %}|{% icon icon-dragon,4 %}|{% icon icon-snake_si,5 %}|{% icon icon-snake,6 %}||{% icon icon-horse_wu %}|{% icon icon-horse,2 %}|{% icon icon-goat_wei,3 %}|{% icon icon-goat,4 %}|{% icon icon-monkey_shen,5 %}|{% icon icon-monkey,6 %}||{% icon icon-rooster_you %}|{% icon icon-rooster,2 %}|{% icon icon-dog_xu,3 %}|{% icon icon-dog,4 %}|{% icon icon-boar_hai,5 %}|{% icon icon-boar,6 %}|&lt;!-- endtab --&gt; size=1 size=2 size=3 size=4 size=5 size=6 그 외의 아이콘을 사용하고 싶을 경우, 이 블로그 포스팅를 참고하시면 될 것 같습니다. 대략 아래의 프로세스를 따른다고 보시면 됩니다. https://www.iconfont.cn에 접속하여 원하는 아이콘들을 장바구니(?)에 추가프로젝트를 새로 생성하거나 기존의 프로젝트에 장바구니에 담은 아이콘들을 옮김프로젝트에 생성된 Font Class (예시: //at.alicdn.com/t/c/font_4814779_nyhonqavyya.css)를 복사하여 _config.butterfly.yml의 [inject]&gt;[head] 아래에 추가 123inject: head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/c/font_4814779_nyhonqavyya.css&quot; media=&quot;defer&quot; onload=&quot;this.media='all'&quot;&gt;혹은 간단하게 본인의 커스텀 css에 아래와 같이 삽입 1@import url(&quot;//at.alicdn.com/t/c/font_4814779_nyhonqavyya.css&quot;);프로젝트에 생성된 Symbol (예시: //at.alicdn.com/t/c/symbol_4814779_nyhonqavyya.js)를 복사하여 _config.yml의 [tag_plugins]&gt;[CDN]&gt;[iconfont] 변경 123tag_plugins: CDN: iconfont: //at.alicdn.com/t/c/font_4814779_nyhonqavyya.jsFontAwsome 쓰듯이 &lt;i class=&quot;iconfont icon-xxx&quot;&gt;&lt;/i&gt;와 같은 형태로 활용 라고 쓰여있긴 하나&comma; 사실 그냥 i 태그 쓰면 js 없이 잘 작동하긴 합니다..ㅎㅎ 기존 iconfont.js 코드수정된 iconfont.js 코드12345678910111213'use strict';function iconFont(args) { args = args.join(' ').split(',') let p0 = args[0] let p1 = args[1]?args[1]:1 return ` &lt;svg class=&quot;icon&quot; style=&quot;width:${p1}em; height:${p1}em&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#${p0}&quot;&gt;&lt;/use&gt; &lt;/svg&gt;`;}hexo.extend.tag.register('icon',iconFont);1234567891011'use strict';function iconFont(args) { args = args.join(' ').split(',') let p0 = args[0] let p1 = args[1]?args[1]:1 return ` &lt;i class=&quot;iconfont ${p0}&quot; style=&quot;font-size:${p1}em&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;`;}hexo.extend.tag.register('icon',iconFont); 특수효과 (wow) 추가 라이브러리의 설치가 필요합니다. 설치 방법은 원저자의 다른 블로그 포스팅[2] 또는 아래의 +a 탭을 참고하시면 될 것 같습니다. parametercodepreview+a123{% wow [animate],[duration],[delay],[offset],[iteration] %}[내용]{% endwow %} animate: 애니메이션 스타일. 효과에 대한 설명은 animate.css 문서를 참조 duration: «선택사항» 애니메이션 지속시간. 단위는 ms 또는 s 가능. (ex. 2s 700ms) delay: «선택사항» 애니메이션 시작 지연시간. 단위는 ms 또는 s 가능. (ex. 2s 700ms) offset: «선택사항» 애니메이션 시작 위치 iteration: «선택사항» 애니메이션 반복 횟수 마지막 네 항목은 선택사항이지만, 위치를 벗어나서 채워야 할 때는 순서가 흐트러져서는 안 됩니다 (자세한 내용은 예시 참조). 또한, 다른 외부 태그의 사용이 가능합니다. flip 애니메이션 효과 12345{% wow animate__flip %}{% note green 'fas fa-fan' modern %}`flip` 애니메이션 효과.{% endnote %}{% endwow %} zoomIn 애니메이션 효과. 5초 지속, 2초 지연, 바닥에서 100 거리에서 시작하여 2회 반복. 12345{% wow animate__zoomIn,5s,2s100,2 %}{% note blue 'fas fa-bullhorn' modern%}`zoomIn` 애니메이션 효과. 5초 지속, 2초 지연, 바닥에서 100 거리에서 시작, 2회 반복.{% endnote %}{% endwow %} slideInRight 애니메이션 효과. 3초 지속, 2초 지연. 12345{% wow animate__slideInRight,3s,2s %}{% note orange 'fas fa-car' modern%}`slideInRight` 애니메이션 효과. 3초 지속, 2초 지연.{% endnote %}{% endwow %} heartBeat 애니메이션 효과. 2초 지연, 3회 반복. 12345{% wow animate__heartBeat,,2s,,3 %}{% note red 'fas fa-battery-half' modern%}`heartBeat` 애니메이션 효과. 2초 지연, 3회 반복.{% endnote %}{% endwow %} flip 애니메이션 효과 flip 애니메이션 효과. zoomIn 애니메이션 효과. 5초 지속, 2초 지연, 바닥에서 100 거리에서 시작, 2회 반복. zoomIn 애니메이션 효과. 5초 지속, 2초 지연, 바닥에서 100 거리에서 시작, 2회 반복. slideInRight 애니메이션 효과. 5초 지속, 2초 지연. slideInRight 애니메이션 효과. 3초 지속, 2초 지연. heartBeat 애니메이션 효과. 2초 지연, 3회 반복. heartBeat 애니메이션 효과. 2초 지연, 3회 반복. wowjs 사용 방법 터미널을 열고, 블로그의 루트 디렉토리로 이동하여 아래의 명령어를 실행합니다. 1npm install hexo-butterfly-wowjs --save 블로그 구성 파일(_config.yml 또는 _config.butterfly.yml)에 아래의 구문을 추가합니다. 1234567891011121314151617wowjs: enable: true # wow.js 활성화 여부 priority: 10 # wow.js 스크립트의 우선순위 mobile: false # 모바일에서도 wow.js 사용 여부 animateitem: #- 아래에 추가하고 싶은 항목을 추가. - class: recent-post-item # 필수항목, 애니메이션을 추가하고 싶은 클래스명 style: animate__zoomIn # 필수항목, 애니메이션 스타일. 효과에 대한 설명은 animate.css 문서를 참조 duration: 2s # 선택항목, 애니메이션 지속시간，단위: ms 또는 s. (예: 3s, 700ms) delay: 1s # 선택항목, 애니메이션 시작 지연시간，단위: ms 또는 s. (예: 3s, 700ms) offset: 100 # 선택항목, 애니메이션 시작 위치 (브라우저 하단 기준) iteration: 2 # 선택항목, 애니메이션 반복 횟수 - class: card-widget style: animate__zoomIn animate_css: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css wow_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js wow_init_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js animateitem에 추가하고 싶은 항목이 없을 땐 아래처럼 비워두면 에러 없이 작동합니다. 123456789wowjs: enable: true # wow.js 활성화 여부 priority: 10 # wow.js 스크립트의 우선순위 mobile: false # 모바일에서도 wow.js 사용 여부 animateitem: - class: animate_css: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css wow_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js wow_init_js: https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js 진행률 (progress) parametercodepreview1{% progress [width] [color] [text] %} width: 0부터 100까지의 아라비아 숫자 color: 색상. 값은 red, yellow, green, cyan, blue, gray 로 표시 text: 진행 표시줄의 텍스트 내용 123456{% progress 10 red '진행률 표시줄 미리보기' %}{% progress 30 yellow '진행률 표시줄 미리보기' %}{% progress 50 green '진행률 표시줄 미리보기' %}{% progress 70 cyan '진행률 표시줄 미리보기' %}{% progress 90 blue '진행률 표시줄 미리보기' %}기{% progress 100 gray '진행률 표시줄 미리보기' %}진행률 표시줄 미리보기 진행률 표시줄 미리보기 진행률 표시줄 미리보기 진행률 표시줄 미리보기 진행률 표시줄 미리보기 진행률 표시줄 미리보기 주석 (notation) parametercodepreview1{% nota [label], [text] %} label: 주석을 달 단어 text: mouse over 시 표시되는 주석 1{% nota '이 위로 마우스를 이동시켜 보십시오.', '맨 위 표시줄' %}이 위로 마우스를 이동시켜 보십시오. 말풍선 주석 (bubble) parametercodepreview+a1{% bubble [content] , [notation] ,[background-color] %} content: 주석을 달 단어 notation: mouse over 시 표시되는 주석 background-color: «선택사항» 말풍선의 배경색. 기본값은 #71a4e3 12저는 최근에 많은 새로운 것을 배웠습니다(비록 이것들이 많은 전문가에게는 오래된 기술일지라도요).가령, CSS {% bubble 인접 형제 선택자,&quot;가령&amp;comma; h1 + p {margin-top:50px;}&quot; %}, {% bubble flex 레이아웃,&quot;Flex는 Flexible Box의 약자로&amp;comma; 박스 모델에 유연하고 강력한 레이아웃 설정을 가능하게 합니다.&quot;,&quot;#ec5830&quot; %}, {% bubble transform 변환,&quot;transform 속성은 요소에 2D 또는 3D 변형을 적용합니다. 이 속성을 사용하면 요소를 회전&amp;comma; 크기 조정&amp;comma; 이동&amp;comma; 또는 기울일 수 있습니다.&quot;,&quot;#1db675&quot; %}, animation을 위한 {% bubble 베지에 곡선,&quot;베지에 곡선(Bézier curve)은 베지어 곡선이라고 불리는&amp;comma; 2차원 그래픽 응용 프로그램에서 사용되는 매개변수 곡선입니다. 일반적인 벡터 그래픽 소프트웨어는 이를 통해 곡선을 정확하게 그립니다. 베지에 곡선은 선분과 노드로 구성되어 있는데&amp;comma; 노드는 끌 수 있는 지점이며 선분은 신축성 있는 고무줄과 같습니다.&quot;,&quot;#de4489&quot; %} 작성법, 그리고 오늘 본 {% bubble clip-path,&quot;clip-path 속성은 요소의 표시 가능 영역 주위에 클리핑 경로를 생성합니다. 해당 영역의 내부는 표시되고&amp;comma; 외부는 숨겨집니다.&quot;,&quot;#868fd7&quot; %} 속성 등이 있습니다. 이러한 새로운 개념들은 제가 이전에 쌓아온 디자인 아이디어에 큰 영향을 주었습니다.저는 최근에 많은 새로운 것을 배웠습니다(비록 이것들이 많은 전문가에게는 오래된 기술일지라도요). 가령, CSS 인접 형제 선택자가령, h1 + p {margin-top:50px;}, flex 레이아웃Flex는 Flexible Box의 약자로, 박스 모델에 유연하고 강력한 레이아웃 설정을 가능하게 합니다., transform 변환transform 속성은 요소에 2D 또는 3D 변형을 적용합니다. 이 속성을 사용하면 요소를 회전, 크기 조정, 이동, 또는 기울일 수 있습니다., animation을 위한 베지에 곡선베지에 곡선(Bézier curve)은 베지어 곡선이라고 불리는, 2차원 그래픽 응용 프로그램에서 사용되는 매개변수 곡선입니다. 일반적인 벡터 그래픽 소프트웨어는 이를 통해 곡선을 정확하게 그립니다. 베지에 곡선은 선분과 노드로 구성되어 있는데, 노드는 끌 수 있는 지점이며 선분은 신축성 있는 고무줄과 같습니다. 작성법, 그리고 오늘 본 clip-pathclip-path 속성은 요소의 표시 가능 영역 주위에 클리핑 경로를 생성합니다. 해당 영역의 내부는 표시되고, 외부는 숨겨집니다. 속성 등이 있습니다. 이러한 새로운 개념들은 제가 이전에 쌓아온 디자인 아이디어에 큰 영향을 주었습니다. 기존에는 버블의 위치가 우측에 있을 경우 폭이 너무 좁아 보이는 문제가 있었습니다. 이를 해결하기 위해 window 크기가 바뀔 때마다 bubble의 위치 및 방향을 수정하는 js 코드를 추가해봤습니다만 주먹구구식이라 속도가 느린 것 같습니다. 그나저나 프리뷰에 적힌 내용 중 8할은 무슨 말인지 모르겠는 부분… 베지어 곡선은 일러에서 곡선 그릴 때 접점에서 드래그하는 그거 말하는 거 같긴 한데… 참고문헌 (reference) 본 블로그는 markdown-it-footnote 플러그인을 사용하기 때문에, 하기의 태그와는 형식과 스타일에 차이가 있습니다. parametercodepreview+a12{% referto [id] , [literature] %}{% referfrom [id] , [literature] , [url] %} referto: 참조 위 첨자 id: 위 첨자의 순번 내용은 referfrom 탭의 id와 대응되어야 상호 이동 가능 literature: 인용된 참고 문헌 이름 referfrom 참조 출처 id: 번호 내용, referto 태그의 id와 대응되어야 상호 이동 가능 literature: 인용된 참고 문헌 이름 url: 인용된 참조 링크, 생략 가능 123456이 블로그는 Hexo 프레임워크{% referto '[1]', 'Hexo Official Site' %}에 Butterfly 테마{% referto '[2]', 'Butterfly - A Simple and Card UI Design theme for Hexo' %}를 사용하고 있습니다. Butterfly 테마{% referto '[2]', 'Butterfly - A Simple and Card UI Design theme for Hexo' %}는 Melody 테마{% referto '[3]', 'Molunerfinn/hexo-theme-melody' %}{% referto '[4]', 'MARKSZのBlog' %}를 기반으로 제작되어 있어 이들과 관련된 여러 블로그들을 참고해볼 수 있습니다.{% referfrom '[1]', 'Hexo Official Site', 'https://hexo.io' %}{% referfrom '[2]', 'Butterfly - A Simple and Card UI Design theme for Hexo', 'https://butterfly.js.org' %}{% referfrom '[3]', 'Molunerfinn/hexo-theme-melody', 'https://github.com/Molunerfinn/hexo-theme-melody' %}{% referfrom '[4]', 'MARKSZのBlog', 'https://molunerfinn.com' %}이 블로그는 Hexo 프레임워크[1] Hexo Official Site参考资料에 Butterfly 테마[2] Butterfly - A Simple and Card UI Design theme for Hexo参考资料를 사용하고 있습니다. Butterfly 테마[2] Butterfly - A Simple and Card UI Design theme for Hexo参考资料는 Melody 테마[3] Molunerfinn/hexo-theme-melody参考资料[4] MARKSZのBlog参考资料를 기반으로 제작되어 있어 이들과 관련된 여러 블로그들을 참고해볼 수 있습니다. [1] Hexo Official Site [2] Butterfly - A Simple and Card UI Design theme for Hexo [3] Molunerfinn/hexo-theme-melody [4] MARKSZのBlog mouseover 시 나타나는 参考资料(참고자료)라는 문구는 제거했습니다. 123.reference-title { display: none;} 회전목마 앨범 (carousel) parametercodepreview+a12345{% carousel [Id], [name] %}![](/img/1.jpg)![](/img/2.jpg)![](/img/3,jpg){% endcarousel %} Id: 앨범의 고유 ID로, 앨범의 마우스 움직임을 모니터링하는 데 사용됩니다. 중국어 사용을 금지합니다.한국어도 해당될 듯 동일한 ID를 가진 캐러셀 앨범은 동일한 페이지에 존재할 수 없습니다. name: 앨범 중간에 표시되는 내용, 영문 작은따옴표로 감싸는 것을 권장합니다. 123456789101112{% carousel 'SF','strike freedom' %}![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110444226.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110508327.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110525753.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110600751.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110621554.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110637459.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110654150.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110707916.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110719787.png)![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110731118.png){% endcarousel %}carousel 탭은 markdown 플러그인으로 컴파일된 html 내용의 시작과 끝부분 p 태그를 삭제하는 코드가 존재하므로, 다른 태그와 함께 사용할 때 버그가 발생합니다. 따라서, tab 태그 내부에서 사용이 불가능하기 때문에 여기에서는 미리보기를 표시할 수 없습니다. 덧붙여, 현재 최적의 레이아웃 세팅은 8-12개의 이미지를 사용하는 것입니다. 이 범위에 없으면 컴퓨터 상에서는 마우스 휠로 확대/축소할 수 있지만 휴대 전화에서는 휠을 사용할 수 없기 때문에 애니메이션 효과가 제대로 나타나지 않을 수 있습니다. 이는 carousel-touch.js의 시작 부분에서 매개변수를 수정하여 조정할 수 있습니다. 라고 예전엔 쓰여 있었는데, 지금은 fancybox와 호환되지 않으니 lightbox를 모두 끄거나 medium_zoom을 활용하라는 안내 문구만 남아있네요. 확인해본 바로는 carousel을 사용할 페이지에만 GLOBAL_CONFIG_SITE.lightbox = 'medium_zoom';으로 변경해주면 나머지 페이지에서는 fancybox를 사용할 수 있는 것 같습니다. 활용 예시는 이 페이지에서 확인해보실 수 있습니다. @import url('https://unpkg.com/@kfonts/nanum-myeongjo-yet-hangul/index.css'); .poem p, .poem-title, .poem-author { text-align: left !important; font-family: '나눔명조 옛한글', serif !important; } .poem { margin: 0 auto; padding: 1em 0; writing-mode: vertical-rl; writing-mode: tb-rl; text-orientation: upright; } .poem p { letter-spacing: 0.2em; text-decoration: underline; text-decoration-color: #c10b0b; text-decoration-style: dashed; text-decoration-thickness: 2px; } .poem-title { letter-spacing: 0.6em; } .poem sub { right: -2.5px; bottom: 0; } [data-theme='dark'] .tabs td svg { filter: grayscale(0.3) contrast(0.3) saturate(10) brightness(1); } #folding.tabs .hljs-code { color: var(--hl-color) !important; font-style: normal; } #icon.tabs .hljs-emphasis { color: var(--hl-color) !important; font-style: normal; } #wow.tabs .hljs-strong { color: var(--hl-color) !important; font-weight: normal; } .reference-title { display: none; } Tag Plugins Plus | Akilarの糖果屋 (link) ↩︎ Add Blog Animation – Wowjs | Akilarの糖果屋 (link) ↩︎","link":"/posts/ko/tag-plugins-plus-tutorial-3/"},{"title":"Tag Plugins Plus 튜토리얼 - 2","text":"This posting is written in Korean. English is not scheduled to be written. 본 게시물은 hexo-butterfly-tag-plugins-plus 개발자가 작성한 튜토리얼[1]에 대한 한글 번역본입니다. Hexo가 Jekyll보다 더 마음에 들어 선택했는데, 참고할 만한 글들이 다 중국어로 적혀있어서 매우 곤란… 내용이 너무 길어져서 세 파트로 나누어서 업로드하였습니다. 참고로 일부 태그들은 별도의 라이브러리 없이 butterfly 테마만으로도 사용 가능합니다.애초에 Butterfly 테마가 이 플러그인을 기반으로 여러 태그를 추가했기 때문ㅎㅎTag Plugins Plus 튜토리얼 - 1text / span / p / note / tip / animated / checkbox / radio / timelineTag Plugins Plus 튜토리얼 - 2link / btns / ghcard / ghbadge / sites / inlineimage / image / audio / video / galleryTag Plugins Plus 튜토리얼 - 3folding / tab / issues / poem / icon / wow / progress / notation / bubble / reference / carousel 링크 삽입 (link) parametercodepreview1{% link [제목], [링크], [이미지 (선택사항)] %} 이미지의 기본값은 구성 파일(_config.yml 혹은 _config.butterfly.yml)의 tag_plugins-link-placeholder 변수에서 설정합니다. 기존에 작성되어 있는 /img/link.png라는 파일은 실제로 존재하지 않으니 꼭 수정하시기 바랍니다. 12{% link 캔디하우스 튜토리얼 포스팅, https://akilar.top/posts/615e2dec/, https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico %}캔디하우스 튜토리얼 포스팅https://akilar.top/posts/615e2dec/ 버튼 삽입 (btns) parametercodepreview+a1234{% btns [스타일 인자] %}{% cell [제목], [링크], [그림이나 아이콘] %}{% cell [제목], [링크], [그림이나 아이콘] %}{ % endbtns % } 둥근 모서리 스타일 : rounded, circle 텍스트 스타일 추가 : 컨테이너 내에 &lt;b&gt;제목&lt;/b&gt;또는 &lt;p&gt;설명 텍스트&lt;/p&gt;와 같이 추가할 수 있습니다. 레이아웃 모드 : 기본값은 자동 너비로, 시야에 한두 개만 있는 상황에 적합합니다. 매개변수 설명 wide 넓은 버튼 fill 레이아웃 채우기. 자동으로 하나 이상의 라인을 채우며, 더 있으면 줄 바꿈을 시행합니다. center 가운데 정렬. 버튼 사이의 간격은 고정된 값으로 정해집니다. around 중심과 분산 grid2 동일한 너비로 최대 2열. 화면을 좁히면 열 수가 적절하게 줄어듭니다. grid3 동일한 너비로 최대 3열. 화면을 좁히면 열 수가 적절하게 줄어듭니다. grid4 동일한 너비로 최대 4열. 화면을 좁히면 열 수가 적절하게 줄어듭니다. grid5 동일한 너비로 최대 5열. 화면을 좁히면 열 수가 적절하게 줄어듭니다. [팀 구성원]과 같이 아바타가 포함된 링크 그룹을 표시해야 하는 경우 1234567{% btns circle grid5 %}{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% endbtns %} 또는 아이콘이 있는 버튼 1234{% btns rounded grid4 %}{% cell 소스코드 다운로드, /, fas fa-download %}{% cell 문서 보기, /, fas fa-book-open %}{% endbtns %} 원형 아이콘 + 제목 + 설명 + 그림 + 그리드 5열 + 중앙 1234567891011121314{% btns circle center grid5 %}&lt;a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'&gt; &lt;i class=&quot;fab fa-apple&quot;&gt;&lt;/i&gt; &lt;b&gt;심박수 스튜어드&lt;/b&gt; {% p red, 프로 버전 %} &lt;img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'&gt;&lt;/a&gt;&lt;a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'&gt; &lt;i class=&quot;fab fa-apple&quot;&gt;&lt;/i&gt; &lt;b&gt;심박수 스튜어드&lt;/b&gt; {% p green, 무료 버전 %} &lt;img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'&gt;&lt;/a&gt;{% endbtns %} [팀 구성원]과 같이 아바타가 포함된 링크 그룹을 표시해야 하는 경우 xaoxuu xaoxuu xaoxuu xaoxuu xaoxuu 또는 아이콘이 있는 버튼 소스코드 다운로드 문서 보기 원형 아이콘 + 제목 + 설명 + 그림 + 그리드 5열 + 중앙 심박수 스튜어드 프로 버전 심박수 스튜어드 무료 버전 2번 항목(아이콘이 있는 버튼)은 원문과 다르게 grid4로 설정해보았습니다. GitHub 카드 (ghcard) ghcard는 github-readme-stats의 API를 사용하여 마크다운 문서에 GitHub 정보를 삽입합니다. parametercodepreview+a12{% ghcard [사용자 이름], [기타 인자 (선택사항)] %}{% ghcard [사용자 이름/ 저장소], [기타 인자 (선택사항)] %} 더 많은 매개변수는 github-readme-stats를 참조할 수 있습니다. (인자명)=(인자값)의 형태로 작성하며, 각 매개변수의 분할은 ,를 사용합니다. 일반적으로 사용되는 몇 가지 매개변수만 아래에 소개하도록 하겠습니다. 매개변수 값 의미 hide stars, commits, prs, issues, contribs 지정된 통계 숨기기 count_private true 프로젝트의 총 커밋 수에 비공개 기여 추가 show_icons true 아이콘 표시 theme 48가지의 사용 가능한 테마를 확인하세요. 테마 (vim colorscheme과 유사) 사용자 정보 카드 1234{% ghcard xaoxuu %} {% ghcard xaoxuu, theme=vue %}{% ghcard xaoxuu, theme=buefy %} {% ghcard xaoxuu, theme=solarized-light %}{% ghcard xaoxuu, theme=onedark %} {% ghcard xaoxuu, theme=solarized-dark %}{% ghcard xaoxuu, theme=algolia %} {% ghcard xaoxuu, theme=calm %} 웨어하우스 정보 카드 1234{% ghcard volantis-x/hexo-theme-volantis %} {% ghcard volantis-x/hexo-theme-volantis, theme=vue %}{% ghcard volantis-x/hexo-theme-volantis, theme=buefy %} {% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %}{% ghcard volantis-x/hexo-theme-volantis, theme=onedark %} {% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %}{% ghcard volantis-x/hexo-theme-volantis, theme=algolia %} {% ghcard volantis-x/hexo-theme-volantis, theme=calm %} 사용자 정보 카드 웨어하우스 정보 카드 본 게시물에서는 2열로 표시하기 위해 아래와 같이 스타일을 임시로 추가했습니다. 12345&lt;style&gt;.tab-contents .tab-item-content p a.ghcard { width: 49%;}&lt;/style&gt; GitHub 로고 (bdage) ghbdage 구체적인 사용법은 원 저자의 튜토리얼을 참조하세요 역시나 중국어… parametercodepreview1{% bdage [right],[left],[logo]||[color],[link],[title]||[option] %} left: 로고 왼쪽에 있는 정보. 필수 매개변수입니다. right: 로고 오른쪽에 있는 정보. 필수 매개변수입니다. logo: 로고 아이콘, 아이콘 이름은 simpleicons. 선택적 매개변수입니다. color: 로고 오른쪽의 색상. 선택적 매개변수입니다. link: 가리키는 링크입니다. 선택적 매개변수입니다. title: 로고에 대한 추가 정보. 선택적 매개변수입니다. 주로 SEO 최적화에 사용되지만 a 태그처럼 마우스를 가져가면 object 태그에 title 정보가 표시되지 않습니다. option: 사용자 정의 매개변수로, shields.io의 모든 API 매개변수를 지원합니다. 특정 매개변수는 위의 확장 작성 예제를 참조하십시오. 형식은 (이름1)=(값1)&amp;(이름2)=(값2)입니다. 기본 매개변수, 로고의 왼쪽 및 오른쪽 텍스트 및 아이콘 정의 12{% bdage Theme,Butterfly %}{% bdage Frame,Hexo,hexo %} 정보 매개변수, 로고 오른쪽에 콘텐츠의 배경색 정의, 링크 가리킴 123{% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,이 사이트는 JsDelivr를 사용하여 정적 리소스에 대한 CDN 가속을 제공합니다. %}//선택적 매개변수가 시퀀스 전체에서 생략되더라도 여전히 분할로 사용하려면 쉼표를 작성해야 합니다.{% bdage Source,GitHub,GitHub||,https://github.com/ %} 확장된 매개변수, 방패 API의 모든 매개변수 내용 지원 123{% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,이 사이트는 2줄 배포를 채택하고 기본 라인은 Vercel에서 호스팅됩니다.||style=social&amp;logoWidth=20 %}//교차 시퀀스인 경우, 생략 가능 매개변수 그룹을 선택하고 분할을 위해 이중 수직선(||)을 작성해야 합니다.{% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %} 기본 매개변수. 로고의 왼쪽 및 오른쪽 텍스트 및 아이콘 정의 정보 매개변수. 로고 오른쪽에 콘텐츠의 배경색 정의, 링크 가리킴 확장된 매개변수. 방패 API의 모든 매개변수 내용 지원 웹사이트 카드 (sites) parametercodepreview+a1234{% sitegroup % }{% site [제목], url=[링크], screenshot=[캡쳐 링크], avatar=[프로필 링크 (선택사항)], description=[설명 (선택사항)] %}{% site [제목], url=[링크], screenshot=[캡쳐 링크], avatar=[프로필 링크 (선택사항)], description=[설명 (선택사항)] %}{% endsitegroup %}1234567{% sitegroup %}{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=이 웹사이트에 대한 설명 텍스트입니다. %}{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, description=이 웹사이트에 대한 설명 텍스트입니다. %}{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=이 웹사이트에 대한 설명 텍스트입니다. %}{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=이 웹사이트에 대한 설명 텍스트입니다. %}{% endsitegroup %}xaoxuu inkss이 웹사이트에 대한 설명 텍스트입니다. MHuiG이 웹사이트에 대한 설명 텍스트입니다. Colsrch이 웹사이트에 대한 설명 텍스트입니다. Linhk1606이 웹사이트에 대한 설명 텍스트입니다.기존에 4열로 표시되던 것을 3열로 변경하였습니다. 1234.site-card { /* 기존: width: calc(100% / 4 - 16px); */ width: calc(100% / 3 - 16px);} 인라인 이미지 (inlineimage) parametercodepreview1{% inlineimage [이미지 링크], height=[높이 (선택사항)] %} height: 높이 (ex. height=20px) 123이것은 {% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %} 단락입니다.이것은 {% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %} 단락입니다.이것은 단락입니다. 이것은 단락입니다. 단일 이미지 (image) parametercodepreview+a1{% image [링크], width=[폭 (선택사항)], height=[높이 (선택사항)], alt=[설명 (선택사항)], bg=[배경색 (선택사항)] %} 이미지 크기: width=300px, height=32px 이미지 설명: alt=(그림 설명) (butterfly는 테마 구성 파일에서 photofigcaption 혹은 fancybox를 활성화해야 유의미함) 배경색: bg=#f2f2f2 설명 추가 1{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=&quot;매일 방과 후 기숙사로 돌아가는 길&amp;comma; 별 일 없습니다.&quot; %} 너비 지정 1{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %} 너비 지정 및 설명 추가 1{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=&quot;매일 방과 후 기숙사로 돌아가는 길&amp;comma; 별 일 없습니다.&quot; %} 자리 표시자의 배경색 설정 1{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#162D39, alt=&quot;다양한 너비로 탐색의 모양과 느낌 최적화&quot; %} 설명 추가 매일 방과 후 기숙사로 돌아가는 길&comma; 별 일 없습니다. 너비 지정 너비 지정 및 설명 추가 매일 방과 후 기숙사로 돌아가는 길&comma; 별 일 없습니다. 배경색 설정 다양한 너비로 탐색의 모양과 느낌 최적화 _config.butterfly.yml에서 photofigcaption: true로 설정했을 경우 이미지 캡션이 중복으로 나타날 수 있습니다. 이 경우, 아래와 같이 css를 수정하거나 photofigcaption: false로 설정하면 됩니다. 123span.image-caption { display: none;} 저는 이미지 캡션을 중앙에 위치시키고, 앞뒤로 아이콘(⊙)을 추가하기 위해 아래와 같이 css를 수정하였습니다. (이미지 캡션 앞뒤에 &quot;⊙︎&quot;를 붙이는 방법은 Butterfly 테마 공식 튜토리얼을 참고하여 수정한 것으로 기억하고 있습니다.) 1234567891011span.image-caption { display: table; margin: -0.4em auto 0.4em;}span.image-caption::before { content: &quot;⊙︎ &quot;;}span.image-caption::after { content: &quot; ⊙&quot;;} 오디오 (audio) parametercodepreview1{% audio [오디오(.mp3) 링크] %}12{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}{% audio /sample/tag-plugins-plus/long_sample.mp3 %} Your browser does not support the audio tag. Your browser does not support the audio tag. 비디오 (video) parametercodepreview1234{% videos [정렬 방향 (선택사항)], [열 수] %}{% video [비디오 링크] %}{% video [비디오 링크] %}{% endvideos %} 정렬 방향: left, center, right 열 수: 1~4 (쉼표 바로 뒤에 작성) 100% 너비 1{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %} 50% 너비 1234{% videos, 2 %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% endvideos %} 25% 너비 123456{% videos center, 4 %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}{% endvideos %} 100% 너비 Your browser does not support the video tag. 50% 너비 Your browser does not support the video tag. Your browser does not support the video tag. 25% 너비 Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. 앨범 (gallery) 앨범 갤러리 (galleryGroup) parametercodepreview12345&lt;div class=&quot;gallery-group-main&quot;&gt;{% galleryGroup [name] [description] [link] [img-url] %}{% galleryGroup [name] [description] [link] [img-url] %}{% galleryGroup [name] [description] [link] [img-url] %}&lt;/div&gt;12345&lt;div class=&quot;gallery-group-main&quot;&gt;{% galleryGroup 'WALLPAPER' '일부 월페이퍼 모음' 'https://butterfly.js.org/Gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}{% galleryGroup 'MARVEL' '마블 관련 사진' 'https://butterfly.js.org/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}{% galleryGroup 'OH MY GIRL' 'OH MY GIRL 사진' 'https://butterfly.js.org/Gallery/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}&lt;/div&gt; WALLPAPER 일부 월페이퍼 모음 MARVEL 마블 관련 사진 OH MY GIRL OH MY GIRL 사진 일반 갤러리 (gallery) parametercodepreview+a123{% gallery %}![alt text](image url) (markdown 이미지 형식 그대로 사용){% endgallery %}123456789{% gallery %}![Bungee](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg){% endgallery %} [{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"Bungee\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\",\"alt\":\"\",\"title\":\"\"}] Butterfly 테마 공식 튜토리얼에서는, 아래와 같이 캡션 앞에 아이콘(⊙︎)을 추가하는 방법을 소개하고 있습니다. 지금은 해당 튜토리얼이 삭제된 걸로 추정됨. 123456789.jg-caption-visible::before { content: &quot;⊙︎ &quot;;}.fancybox__caption::before { content: &quot;⊙ &quot;;}.img-alt.is-center::before { content: &quot;⊙ &quot;;} 저는 이 중 img-alt를 제외한 나머지 두 컴포넌트에만 앞뒤로 아이콘을 추가하였습니다. 12345678.jg-caption-visible::before,.fancybox__caption::before { content: &quot;⊙︎ &quot;;}.jg-caption-visible::after,.fancybox__caption::after { content: &quot; ⊙︎&quot;;} .tab-contents .tab-item-content p a.ghcard { width: 49%; } .tab-contents .tab-item-content p a.ghcard img{ margin: 5px 0 0 0!important; } #video.tabs .hljs-emphasis { color: var(--hl-color) !important; font-style: normal; } Tag Plugins Plus | Akilarの糖果屋 (link) ↩︎","link":"/posts/ko/tag-plugins-plus-tutorial-2/"}],"tags":[{"name":"test code","slug":"test-code","link":"ko/tags/test-code/"},{"name":"markdown","slug":"markdown","link":"ko/tags/markdown/"},{"name":"quick start","slug":"quick-start","link":"ko/tags/quick-start/"},{"name":"hexo-renderer-markdown-it","slug":"hexo-renderer-markdown-it","link":"ko/tags/hexo-renderer-markdown-it/"},{"name":"punycode","slug":"punycode","link":"ko/tags/punycode/"},{"name":"npm update","slug":"npm-update","link":"ko/tags/npm-update/"},{"name":"patch-package","slug":"patch-package","link":"ko/tags/patch-package/"},{"name":"highlight.js","slug":"highlight-js","link":"ko/tags/highlight-js/"},{"name":"syntax highlighting","slug":"syntax-highlighting","link":"ko/tags/syntax-highlighting/"},{"name":"tutorial","slug":"tutorial","link":"ko/tags/tutorial/"},{"name":"hexo-butterfly-tag-plugins-plus","slug":"hexo-butterfly-tag-plugins-plus","link":"ko/tags/hexo-butterfly-tag-plugins-plus/"},{"name":"hexo-theme-butterfly","slug":"hexo-theme-butterfly","link":"ko/tags/hexo-theme-butterfly/"},{"name":"hexo-theme-volantis","slug":"hexo-theme-volantis","link":"ko/tags/hexo-theme-volantis/"}],"categories":[{"name":"JavaScript","slug":"JavaScript","link":"ko/categories/JavaScript/"},{"name":"Node.js","slug":"JavaScript/Node-js","link":"ko/categories/JavaScript/Node-js/"},{"name":"private","slug":"private","link":"ko/categories/private/"},{"name":"Hexo","slug":"JavaScript/Node-js/Hexo","link":"ko/categories/JavaScript/Node-js/Hexo/"},{"name":"diary","slug":"private/diary","link":"ko/categories/private/diary/"},{"name":"Package Manager","slug":"JavaScript/Node-js/Package-Manager","link":"ko/categories/JavaScript/Node-js/Package-Manager/"},{"name":"npm","slug":"JavaScript/Node-js/Package-Manager/npm","link":"ko/categories/JavaScript/Node-js/Package-Manager/npm/"},{"name":"Hexo Tag Plugins","slug":"JavaScript/Node-js/Hexo/Hexo-Tag-Plugins","link":"ko/categories/JavaScript/Node-js/Hexo/Hexo-Tag-Plugins/"}]}